 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [C8080000]                |         dd      RESET ; Reset               ; Int 08h (IRQ 0)
    15 | 00000024 | [1A090000]                |         dd      TICK ; Tick                ; Int 09h (IRQ 1)
    16 | 00000028 | [EA080000]                |         dd      KEY ; Keyboard            ; Int 0Ah (IRQ 2)
    17 | 0000002C | [4A090000]                |         dd      GAME_OVER ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | [7A090000]                |         dd      NEW_PIECE ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | [AA090000]                |         dd      RECEIVED ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | [DA090000]                |         dd      TOUCHDOWN ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | [DF090000]                |         dd      CLEAR ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E90525                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E94122                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           |         align	2
  1112 |          |                           | SlidePiece:	; void SlidePiece(int ID, int direction)
  1113 | 00000886 | 55                        | 	push	bp
  1114 | 00000887 | 89E5                      | 	mov	bp, sp
  1115 | 00000889 | 50                        | 	push	ax
  1116 | 0000088A | 52                        | 	push	dx
  1117 | 0000088B | B400                      |  	mov	ah, 0		; Slide piece operation
  1118 | 0000088D | 8A4606                    |   	mov	al, [bp+6]	; Move direction (loword only)
  1119 | 00000890 | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  1120 | 00000893 | CD1B                      | 	int	1Bh		; Call Simptris services
  1121 | 00000895 | 5A                        | 	pop	dx
  1122 | 00000896 | 58                        | 	pop	ax
  1123 | 00000897 | 5D                        | 	pop	bp
  1124 | 00000898 | C3                        | 	ret
  1125 |          |                           | RotatePiece:	; void RotatePiece(int ID, int direction)
  1126 | 00000899 | 55                        | 	push	bp
  1127 | 0000089A | 89E5                      | 	mov	bp, sp
  1128 | 0000089C | 50                        | 	push	ax
  1129 | 0000089D | 52                        | 	push	dx
  1130 | 0000089E | B401                      |  	mov	ah, 1		; Rotate piece operation
  1131 | 000008A0 | 8A4606                    |  	mov	al, [bp+6]	; Move direction (loword only)
  1132 | 000008A3 | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  1133 | 000008A6 | CD1B                      | 	int	1Bh		; Call Simptris services
  1134 | 000008A8 | 5A                        | 	pop	dx
  1135 | 000008A9 | 58                        | 	pop	ax
  1136 | 000008AA | 5D                        | 	pop	bp
  1137 | 000008AB | C3                        | 	ret
  1138 |          |                           | SeedSimptris:	; void SeedSimptris(long seed)
  1139 | 000008AC | 55                        | 	push	bp
  1140 | 000008AD | 89E5                      | 	mov	bp, sp
  1141 | 000008AF | 50                        | 	push	ax
  1142 | 000008B0 | 51                        | 	push	cx
  1143 | 000008B1 | 52                        | 	push    dx
  1144 | 000008B2 | B402                      |  	mov	ah, 2		; Seed operation
  1145 | 000008B4 | 8B5604                    | 	mov	dx, [bp+4]	; Move loword of seed
  1146 | 000008B7 | 8B4E06                    | 	mov	cx, [bp+6]	; Move hiword of seed
  1147 | 000008BA | CD1B                      | 	int	1Bh		; Call Simptris services
  1148 | 000008BC | 5A                        | 	pop	dx
  1149 | 000008BD | 59                        | 	pop	cx
  1150 | 000008BE | 58                        | 	pop	ax
  1151 | 000008BF | 5D                        | 	pop	bp
  1152 | 000008C0 | C3                        | 	ret
  1153 |          |                           | StartSimptris:	; void StartSimptris(void)
  1154 | 000008C1 | 50                        | 	push	ax
  1155 | 000008C2 | B403                      |  	mov	ah, 3		; Start Simptris operation
  1156 | 000008C4 | CD1B                      | 	int	1Bh		; Call Simptris services
  1157 | 000008C6 | 58                        | 	pop	ax
  1158 | 000008C7 | C3                        | 	ret
  1159 |          |                           | ; ISR file
  1160 |          |                           | ;1 Save the context of whatever was running by pushing all registers onto the stack, except SP, SS, CS, IP, and the flags.
  1161 |          |                           | ;2 Enable interrupts to allow higher priority IRQs to interrupt.
  1162 |          |                           | ;3 Run the interrupt handler, which is usually a C function that does the work for this interrupt.
  1163 |          |                           | ;4 Disable interrupts.
  1164 |          |                           | ;5 Send the EOI command to the PIC, informing it that the handler is finished.
  1165 |          |                           | ;6 Restore the context of what was running before the interrupt occurred by popping the registers saved in step 1 off the stack.
  1166 |          |                           | ;7 Execute the iret instruction. This restores in one atomic operation the values for IP, CS, and the flags, which were automatically -
  1167 |          |                           | ;	; - saved on the stack by the processor when the interrupt occurred. This effectively restores execution to the point where the interrupt occurred.
  1168 |          |                           | 
  1169 |          |                           | RESET:
  1170 | 000008C8 | 50                        | 	push ax
  1171 | 000008C9 | 53                        | 	push bx
  1172 | 000008CA | 51                        | 	push cx
  1173 | 000008CB | 52                        | 	push dx
  1174 | 000008CC | 55                        | 	push bp
  1175 | 000008CD | 56                        | 	push si
  1176 | 000008CE | 57                        | 	push di
  1177 | 000008CF | 1E                        | 	push ds
  1178 | 000008D0 | 06                        | 	push es
  1179 |          |                           | 
  1180 | 000008D1 | E86606                    | 	call YKEnterISR
  1181 |          |                           | 
  1182 | 000008D4 | FB                        | 	sti
  1183 | 000008D5 | E81001                    | 	call c_reset_handler
  1184 | 000008D8 | FA                        | 	cli
  1185 |          |                           | 
  1186 | 000008D9 | B020                      | 	mov al, 0x20        ; send eoi to pic
  1187 | 000008DB | E620                      | 	out 0x20, al        ; send eoi to pic
  1188 |          |                           | 
  1189 | 000008DD | E86C06                    | 	call YKExitISR
  1190 |          |                           | 
  1191 | 000008E0 | 07                        | 	pop es
  1192 | 000008E1 | 1F                        | 	pop ds
  1193 | 000008E2 | 5F                        | 	pop di
  1194 | 000008E3 | 5E                        | 	pop si
  1195 | 000008E4 | 5D                        | 	pop bp
  1196 | 000008E5 | 5A                        | 	pop dx
  1197 | 000008E6 | 59                        | 	pop cx
  1198 | 000008E7 | 5B                        | 	pop bx
  1199 | 000008E8 | 58                        | 	pop ax
  1200 |          |                           | 
  1201 | 000008E9 | CF                        | 	iret
  1202 |          |                           | 
  1203 |          |                           | 
  1204 |          |                           | KEY:
  1205 |          |                           | 
  1206 | 000008EA | 50                        | 	push ax
  1207 | 000008EB | 53                        | 	push bx
  1208 | 000008EC | 51                        | 	push cx
  1209 | 000008ED | 52                        | 	push dx
  1210 | 000008EE | 55                        | 	push bp
  1211 | 000008EF | 56                        | 	push si
  1212 | 000008F0 | 57                        | 	push di
  1213 | 000008F1 | 1E                        | 	push ds
  1214 | 000008F2 | 06                        | 	push es
  1215 |          |                           | 
  1216 | 000008F3 | A1[9A1C]                  |         mov ax, [YKISRDepth]          ;save the depth counter
  1217 | 000008F6 | 83F800                    | 	cmp ax, 0                     ; check if the depth is zero, if it is save the SP of the task we are interupting
  1218 | 000008F9 | 7506                      | 	jnz key_not_lowest_interrupt  ; skip saving the stack because we are not interupting that task
  1219 |          |                           | 
  1220 | 000008FB | 8B1E[B619]                | 	mov bx, [YKRdyList] ; save the sp
  1221 | 000008FF | 8927                      | 	mov [bx], sp
  1222 |          |                           | 
  1223 |          |                           | key_not_lowest_interrupt:
  1224 | 00000901 | E83606                    | 	call YKEnterISR
  1225 |          |                           | 
  1226 | 00000904 | FB                        | 	sti                 ; enable interrupts for higher priority IRQs ?
  1227 | 00000905 | E81A01                    | 	call c_key_handler  ; run
  1228 | 00000908 | FA                        | 	cli                 ; disable interrupts ?
  1229 |          |                           | 
  1230 | 00000909 | B020                      | 	mov al, 0x20        ; send eoi to pic
  1231 | 0000090B | E620                      | 	out 0x20, al        ; send eoi to pic
  1232 |          |                           | 
  1233 | 0000090D | E83C06                    | 	call YKExitISR
  1234 |          |                           | 
  1235 |          |                           | 	;restore reg
  1236 | 00000910 | 07                        | 	pop es
  1237 | 00000911 | 1F                        | 	pop ds
  1238 | 00000912 | 5F                        | 	pop di
  1239 | 00000913 | 5E                        | 	pop si
  1240 | 00000914 | 5D                        | 	pop bp
  1241 | 00000915 | 5A                        | 	pop dx
  1242 | 00000916 | 59                        | 	pop cx
  1243 | 00000917 | 5B                        | 	pop bx
  1244 | 00000918 | 58                        | 	pop ax
  1245 |          |                           | 
  1246 | 00000919 | CF                        | 	iret
  1247 |          |                           | 
  1248 |          |                           | TICK:
  1249 |          |                           | 	; save reg
  1250 | 0000091A | 50                        | 	push ax
  1251 | 0000091B | 53                        | 	push bx
  1252 | 0000091C | 51                        | 	push cx
  1253 | 0000091D | 52                        | 	push dx
  1254 | 0000091E | 55                        | 	push bp
  1255 | 0000091F | 56                        | 	push si
  1256 | 00000920 | 57                        | 	push di
  1257 | 00000921 | 1E                        | 	push ds
  1258 | 00000922 | 06                        | 	push es
  1259 |          |                           | 
  1260 | 00000923 | A1[9A1C]                  |   mov ax, [YKISRDepth] ;save the depth counter
  1261 | 00000926 | 83F800                    | 	cmp ax, 0            ; check if the depth is zero, if it is save the SP of the task we are interupting
  1262 | 00000929 | 7506                      | 	jnz not_lowest_interrupt
  1263 |          |                           | 
  1264 |          |                           | 
  1265 | 0000092B | 8B1E[B619]                | 	mov bx, [YKRdyList] ; save SP of interupted task
  1266 | 0000092F | 8927                      | 	mov [bx], sp
  1267 |          |                           | 
  1268 |          |                           | not_lowest_interrupt:
  1269 | 00000931 | E80606                    | 	call YKEnterISR
  1270 |          |                           | 
  1271 | 00000934 | FB                        | 	sti                 ; enable interrupts for higher priority IRQs ?
  1272 |          |                           | 
  1273 |          |                           | 	;call YKTickHandler;
  1274 | 00000935 | E8C400                    | 	call c_tick_handler ; run interrupt handler ? I think this is the c file
  1275 |          |                           | 
  1276 | 00000938 | FA                        | 	cli                 ; disable interrupts
  1277 |          |                           | 
  1278 | 00000939 | B020                      | 	mov al, 0x20        ; send eoi to pic
  1279 | 0000093B | E620                      | 	out 0x20, al        ; send eoi to pic
  1280 |          |                           | 
  1281 | 0000093D | E80C06                    | 	call YKExitISR
  1282 |          |                           | 
  1283 |          |                           | 	;restore
  1284 | 00000940 | 07                        | 	pop es
  1285 | 00000941 | 1F                        | 	pop ds
  1286 | 00000942 | 5F                        | 	pop di
  1287 | 00000943 | 5E                        | 	pop si
  1288 | 00000944 | 5D                        | 	pop bp
  1289 | 00000945 | 5A                        | 	pop dx
  1290 | 00000946 | 59                        | 	pop cx
  1291 | 00000947 | 5B                        | 	pop bx
  1292 | 00000948 | 58                        | 	pop ax
  1293 |          |                           | 
  1294 | 00000949 | CF                        | 	iret
  1295 |          |                           | 	
  1296 |          |                           | 	
  1297 |          |                           | 	
  1298 |          |                           | 	
  1299 |          |                           | 	
  1300 |          |                           | 	
  1301 |          |                           | GAME_OVER:
  1302 |          |                           | 	; save context
  1303 | 0000094A | 50                        | 	push ax
  1304 | 0000094B | 53                        | 	push bx
  1305 | 0000094C | 51                        | 	push cx
  1306 | 0000094D | 52                        | 	push dx
  1307 | 0000094E | 55                        | 	push bp
  1308 | 0000094F | 56                        | 	push si
  1309 | 00000950 | 57                        | 	push di
  1310 | 00000951 | 1E                        | 	push ds
  1311 | 00000952 | 06                        | 	push es
  1312 |          |                           | 
  1313 | 00000953 | A1[9A1C]                  | 	mov ax, [YKISRDepth]
  1314 | 00000956 | 83F800                    | 	cmp ax, 0
  1315 | 00000959 | 7506                      | 	jnz game_over_not_lowest_interrupt
  1316 |          |                           | 
  1317 | 0000095B | 8B1E[B619]                | 	mov bx, [YKRdyList]
  1318 | 0000095F | 8927                      | 	mov [bx], sp
  1319 |          |                           | 
  1320 |          |                           | game_over_not_lowest_interrupt:
  1321 | 00000961 | E8D605                    | 	call YKEnterISR
  1322 |          |                           | 
  1323 | 00000964 | FB                        | 	sti 
  1324 | 00000965 | E8FE00                    | 	call c_game_over_handler 
  1325 | 00000968 | FA                        | 	cli 
  1326 |          |                           | 
  1327 | 00000969 | B020                      | 	mov	al, 0x20 
  1328 | 0000096B | E620                      | 	out	0x20, al
  1329 |          |                           | 
  1330 | 0000096D | E8DC05                    | 	call YKExitISR
  1331 |          |                           | 
  1332 | 00000970 | 07                        | 	pop es	
  1333 | 00000971 | 1F                        | 	pop ds
  1334 | 00000972 | 5F                        | 	pop di
  1335 | 00000973 | 5E                        | 	pop si
  1336 | 00000974 | 5D                        | 	pop bp
  1337 | 00000975 | 5A                        | 	pop dx
  1338 | 00000976 | 59                        | 	pop cx
  1339 | 00000977 | 5B                        | 	pop bx
  1340 | 00000978 | 58                        | 	pop ax
  1341 |          |                           | 
  1342 | 00000979 | CF                        | 	iret 
  1343 |          |                           | 
  1344 |          |                           | 
  1345 |          |                           | NEW_PIECE:
  1346 | 0000097A | 50                        | 	push ax 
  1347 | 0000097B | 53                        | 	push bx
  1348 | 0000097C | 51                        | 	push cx
  1349 | 0000097D | 52                        | 	push dx
  1350 | 0000097E | 55                        | 	push bp
  1351 | 0000097F | 56                        | 	push si
  1352 | 00000980 | 57                        | 	push di
  1353 | 00000981 | 1E                        | 	push ds
  1354 | 00000982 | 06                        | 	push es
  1355 |          |                           | 
  1356 |          |                           | 
  1357 | 00000983 | A1[9A1C]                  | 	mov ax, [YKISRDepth]
  1358 | 00000986 | 83F800                    | 	cmp ax, 0
  1359 | 00000989 | 7506                      | 	jnz new_piece_not_lowest_interrupt
  1360 |          |                           | 
  1361 | 0000098B | 8B1E[B619]                | 	mov bx, [YKRdyList]
  1362 | 0000098F | 8927                      | 	mov [bx], sp
  1363 |          |                           | 
  1364 |          |                           | new_piece_not_lowest_interrupt:
  1365 | 00000991 | E8A605                    | 	call YKEnterISR
  1366 |          |                           | 
  1367 | 00000994 | FB                        | 	sti 
  1368 | 00000995 | E8EE00                    | 	call c_new_piece_handler 
  1369 | 00000998 | FA                        | 	cli 
  1370 |          |                           | 
  1371 | 00000999 | B020                      | 	mov	al, 0x20 
  1372 | 0000099B | E620                      | 	out	0x20, al
  1373 |          |                           | 	
  1374 | 0000099D | E8AC05                    | 	call YKExitISR
  1375 |          |                           | 
  1376 | 000009A0 | 07                        | 	pop es	
  1377 | 000009A1 | 1F                        | 	pop ds
  1378 | 000009A2 | 5F                        | 	pop di
  1379 | 000009A3 | 5E                        | 	pop si
  1380 | 000009A4 | 5D                        | 	pop bp
  1381 | 000009A5 | 5A                        | 	pop dx
  1382 | 000009A6 | 59                        | 	pop cx
  1383 | 000009A7 | 5B                        | 	pop bx
  1384 | 000009A8 | 58                        | 	pop ax
  1385 |          |                           | 
  1386 | 000009A9 | CF                        | 	iret 
  1387 |          |                           | 
  1388 |          |                           | RECEIVED:
  1389 | 000009AA | 50                        | 	push ax 
  1390 | 000009AB | 53                        | 	push bx
  1391 | 000009AC | 51                        | 	push cx
  1392 | 000009AD | 52                        | 	push dx
  1393 | 000009AE | 55                        | 	push bp
  1394 | 000009AF | 56                        | 	push si
  1395 | 000009B0 | 57                        | 	push di
  1396 | 000009B1 | 1E                        | 	push ds
  1397 | 000009B2 | 06                        | 	push es
  1398 |          |                           | 
  1399 | 000009B3 | A1[9A1C]                  | 	mov ax, [YKISRDepth]
  1400 | 000009B6 | 83F800                    | 	cmp ax, 0
  1401 | 000009B9 | 7506                      | 	jnz received_not_lowest_interrupt
  1402 |          |                           | 
  1403 | 000009BB | 8B1E[B619]                | 	mov bx, [YKRdyList]
  1404 | 000009BF | 8927                      | 	mov [bx], sp
  1405 |          |                           | 
  1406 |          |                           | received_not_lowest_interrupt:
  1407 |          |                           | 
  1408 | 000009C1 | E87605                    | 	call YKEnterISR
  1409 |          |                           | 
  1410 | 000009C4 | FB                        | 	sti ;
  1411 | 000009C5 | E84401                    | 	call c_received_handler ; 
  1412 | 000009C8 | FA                        | 	cli ; 
  1413 |          |                           | 	
  1414 | 000009C9 | B020                      | 	mov	al, 0x20
  1415 | 000009CB | E620                      | 	out	0x20, al	
  1416 |          |                           | 
  1417 | 000009CD | E87C05                    | 	call YKExitISR
  1418 |          |                           | 
  1419 | 000009D0 | 07                        | 	pop es
  1420 | 000009D1 | 1F                        | 	pop ds
  1421 | 000009D2 | 5F                        | 	pop di
  1422 | 000009D3 | 5E                        | 	pop si
  1423 | 000009D4 | 5D                        | 	pop bp
  1424 | 000009D5 | 5A                        | 	pop dx
  1425 | 000009D6 | 59                        | 	pop cx
  1426 | 000009D7 | 5B                        | 	pop bx
  1427 | 000009D8 | 58                        | 	pop ax
  1428 |          |                           | 
  1429 | 000009D9 | CF                        | 	iret
  1430 |          |                           | 
  1431 |          |                           | 
  1432 |          |                           | TOUCHDOWN:
  1433 |          |                           | 
  1434 | 000009DA | B020                      | 	mov	al, 0x20
  1435 | 000009DC | E620                      | 	out	0x20, al	
  1436 |          |                           | 
  1437 | 000009DE | CF                        | 	iret
  1438 |          |                           | 
  1439 |          |                           | 
  1440 |          |                           | CLEAR:
  1441 |          |                           | 
  1442 | 000009DF | B020                      | 	mov	al, 0x20
  1443 | 000009E1 | E620                      | 	out	0x20, al	
  1444 |          |                           | 
  1445 | 000009E3 | CF                        | 	iret
  1446 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
  1447 |          |                           | 	CPU	8086
  1448 |          |                           | 	ALIGN	2
  1449 | 000009E4 | E9211C                    | 	jmp	main	; Jump to program start
  1450 | 000009E7 | 90                        | 	ALIGN	2
  1451 |          |                           | c_reset_handler:
  1452 |          |                           | 	; >>>>> Line:	15
  1453 |          |                           | 	; >>>>> void c_reset_handler(){ 
  1454 | 000009E8 | EB0D                      | 	jmp	L_myinth_1
  1455 |          |                           | L_myinth_2:
  1456 |          |                           | 	; >>>>> Line:	16
  1457 |          |                           | 	; >>>>> exit(0); 
  1458 | 000009EA | 30C0                      | 	xor	al, al
  1459 | 000009EC | 50                        | 	push	ax
  1460 | 000009ED | E8EAF9                    | 	call	exit
  1461 | 000009F0 | 83C402                    | 	add	sp, 2
  1462 | 000009F3 | 89EC                      | 	mov	sp, bp
  1463 | 000009F5 | 5D                        | 	pop	bp
  1464 | 000009F6 | C3                        | 	ret
  1465 |          |                           | L_myinth_1:
  1466 | 000009F7 | 55                        | 	push	bp
  1467 | 000009F8 | 89E5                      | 	mov	bp, sp
  1468 | 000009FA | EBEE                      | 	jmp	L_myinth_2
  1469 |          |                           | 	ALIGN	2
  1470 |          |                           | c_tick_handler:
  1471 |          |                           | 	; >>>>> Line:	19
  1472 |          |                           | 	; >>>>> void c_tick_handler(){ 
  1473 | 000009FC | EB07                      | 	jmp	L_myinth_4
  1474 |          |                           | L_myinth_5:
  1475 |          |                           | 	; >>>>> Line:	20
  1476 |          |                           | 	; >>>>> YKTickHandler(); 
  1477 | 000009FE | E86D05                    | 	call	YKTickHandler
  1478 | 00000A01 | 89EC                      | 	mov	sp, bp
  1479 | 00000A03 | 5D                        | 	pop	bp
  1480 | 00000A04 | C3                        | 	ret
  1481 |          |                           | L_myinth_4:
  1482 | 00000A05 | 55                        | 	push	bp
  1483 | 00000A06 | 89E5                      | 	mov	bp, sp
  1484 | 00000A08 | EBF4                      | 	jmp	L_myinth_5
  1485 |          |                           | L_myinth_8:
  1486 | 00000A0A | 292049474E4F524544-       | 	DB	") IGNORED",0xA,0
  1487 | 00000A13 | 0A00                      | ...
  1488 |          |                           | L_myinth_7:
  1489 | 00000A15 | 0A4B45595052455353-       | 	DB	0xA,"KEYPRESS (",0
  1490 | 00000A1E | 202800                    | ...
  1491 | 00000A21 | 90                        | 	ALIGN	2
  1492 |          |                           | c_key_handler:
  1493 |          |                           | 	; >>>>> Line:	23
  1494 |          |                           | 	; >>>>> void c_key_handler(){ 
  1495 | 00000A22 | EB2F                      | 	jmp	L_myinth_9
  1496 |          |                           | L_myinth_10:
  1497 |          |                           | 	; >>>>> Line:	25
  1498 |          |                           | 	; >>>>> c = KeyBuffer; 
  1499 | 00000A24 | A0[C000]                  | 	mov	al, byte [KeyBuffer]
  1500 | 00000A27 | 8846FF                    | 	mov	byte [bp-1], al
  1501 |          |                           | 	; >>>>> Line:	27
  1502 |          |                           | 	; >>>>> print("\nKEYPRESS (", 11); 
  1503 | 00000A2A | B80B00                    | 	mov	ax, 11
  1504 | 00000A2D | 50                        | 	push	ax
  1505 | 00000A2E | B8[150A]                  | 	mov	ax, L_myinth_7
  1506 | 00000A31 | 50                        | 	push	ax
  1507 | 00000A32 | E8B7F9                    | 	call	print
  1508 | 00000A35 | 83C404                    | 	add	sp, 4
  1509 |          |                           | 	; >>>>> Line:	28
  1510 |          |                           | 	; >>>>> printChar(c); 
  1511 | 00000A38 | FF76FF                    | 	push	word [bp-1]
  1512 | 00000A3B | E8C6F9                    | 	call	printChar
  1513 | 00000A3E | 83C402                    | 	add	sp, 2
  1514 |          |                           | 	; >>>>> Line:	29
  1515 |          |                           | 	; >>>>> print(") IGNORED\n", 10); 
  1516 | 00000A41 | B80A00                    | 	mov	ax, 10
  1517 | 00000A44 | 50                        | 	push	ax
  1518 | 00000A45 | B8[0A0A]                  | 	mov	ax, L_myinth_8
  1519 | 00000A48 | 50                        | 	push	ax
  1520 | 00000A49 | E8A0F9                    | 	call	print
  1521 | 00000A4C | 83C404                    | 	add	sp, 4
  1522 | 00000A4F | 89EC                      | 	mov	sp, bp
  1523 | 00000A51 | 5D                        | 	pop	bp
  1524 | 00000A52 | C3                        | 	ret
  1525 |          |                           | L_myinth_9:
  1526 | 00000A53 | 55                        | 	push	bp
  1527 | 00000A54 | 89E5                      | 	mov	bp, sp
  1528 | 00000A56 | 51                        | 	push	cx
  1529 | 00000A57 | EBCB                      | 	jmp	L_myinth_10
  1530 |          |                           | L_myinth_12:
  1531 | 00000A59 | 0A47414D45204F5645-       | 	DB	0xA,"GAME OVER",0xA,0
  1532 | 00000A62 | 520A00                    | ...
  1533 | 00000A65 | 90                        | 	ALIGN	2
  1534 |          |                           | c_game_over_handler:
  1535 |          |                           | 	; >>>>> Line:	32
  1536 |          |                           | 	; >>>>> void c_game_over_handler(void){ 
  1537 | 00000A66 | EB17                      | 	jmp	L_myinth_13
  1538 |          |                           | L_myinth_14:
  1539 |          |                           | 	; >>>>> Line:	33
  1540 |          |                           | 	; >>>>>  
  1541 | 00000A68 | B8[590A]                  | 	mov	ax, L_myinth_12
  1542 | 00000A6B | 50                        | 	push	ax
  1543 | 00000A6C | E8B9F9                    | 	call	printString
  1544 | 00000A6F | 83C402                    | 	add	sp, 2
  1545 |          |                           | 	; >>>>> Line:	34
  1546 |          |                           | 	; >>>>> exit(0); 
  1547 | 00000A72 | 30C0                      | 	xor	al, al
  1548 | 00000A74 | 50                        | 	push	ax
  1549 | 00000A75 | E862F9                    | 	call	exit
  1550 | 00000A78 | 83C402                    | 	add	sp, 2
  1551 | 00000A7B | 89EC                      | 	mov	sp, bp
  1552 | 00000A7D | 5D                        | 	pop	bp
  1553 | 00000A7E | C3                        | 	ret
  1554 |          |                           | L_myinth_13:
  1555 | 00000A7F | 55                        | 	push	bp
  1556 | 00000A80 | 89E5                      | 	mov	bp, sp
  1557 | 00000A82 | EBE4                      | 	jmp	L_myinth_14
  1558 |          |                           | 	ALIGN	2
  1559 |          |                           | L_myinth_16:
  1560 | 00000A84 | 0000                      | 	DW	0
  1561 |          |                           | 	ALIGN	2
  1562 |          |                           | c_new_piece_handler:
  1563 |          |                           | 	; >>>>> Line:	37
  1564 |          |                           | 	; >>>>> void c_new_piece_handler(void){ 
  1565 | 00000A86 | EB7D                      | 	jmp	L_myinth_17
  1566 |          |                           | L_myinth_18:
  1567 |          |                           | 	; >>>>> Line:	39
  1568 |          |                           | 	; >>>>> newPieceList[i].id = NewPieceID; 
  1569 | 00000A88 | A1[840A]                  | 	mov	ax, word [L_myinth_16]
  1570 | 00000A8B | B90300                    | 	mov	cx, 3
  1571 | 00000A8E | D3E0                      | 	shl	ax, cl
  1572 | 00000A90 | 89C6                      | 	mov	si, ax
  1573 | 00000A92 | 81C6[9833]                | 	add	si, newPieceList
  1574 | 00000A96 | A1[C400]                  | 	mov	ax, word [NewPieceID]
  1575 | 00000A99 | 8904                      | 	mov	word [si], ax
  1576 |          |                           | 	; >>>>> Line:	40
  1577 |          |                           | 	; >>>>> newPieceList[i].type = NewPieceType; 
  1578 | 00000A9B | A1[840A]                  | 	mov	ax, word [L_myinth_16]
  1579 | 00000A9E | B90300                    | 	mov	cx, 3
  1580 | 00000AA1 | D3E0                      | 	shl	ax, cl
  1581 | 00000AA3 | 05[9833]                  | 	add	ax, newPieceList
  1582 | 00000AA6 | 89C6                      | 	mov	si, ax
  1583 | 00000AA8 | 83C602                    | 	add	si, 2
  1584 | 00000AAB | A1[C200]                  | 	mov	ax, word [NewPieceType]
  1585 | 00000AAE | 8904                      | 	mov	word [si], ax
  1586 |          |                           | 	; >>>>> Line:	41
  1587 |          |                           | 	; >>>>> newPieceList[i].orient = NewPieceOrientation; 
  1588 | 00000AB0 | A1[840A]                  | 	mov	ax, word [L_myinth_16]
  1589 | 00000AB3 | B90300                    | 	mov	cx, 3
  1590 | 00000AB6 | D3E0                      | 	shl	ax, cl
  1591 | 00000AB8 | 05[9833]                  | 	add	ax, newPieceList
  1592 | 00000ABB | 89C6                      | 	mov	si, ax
  1593 | 00000ABD | 83C604                    | 	add	si, 4
  1594 | 00000AC0 | A1[C600]                  | 	mov	ax, word [NewPieceOrientation]
  1595 | 00000AC3 | 8904                      | 	mov	word [si], ax
  1596 |          |                           | 	; >>>>> Line:	42
  1597 |          |                           | 	; >>>>> newPieceList[i].col = NewPieceColumn; 
  1598 | 00000AC5 | A1[840A]                  | 	mov	ax, word [L_myinth_16]
  1599 | 00000AC8 | B90300                    | 	mov	cx, 3
  1600 | 00000ACB | D3E0                      | 	shl	ax, cl
  1601 | 00000ACD | 05[9833]                  | 	add	ax, newPieceList
  1602 | 00000AD0 | 89C6                      | 	mov	si, ax
  1603 | 00000AD2 | 83C606                    | 	add	si, 6
  1604 | 00000AD5 | A1[C800]                  | 	mov	ax, word [NewPieceColumn]
  1605 | 00000AD8 | 8904                      | 	mov	word [si], ax
  1606 |          |                           | 	; >>>>> Line:	44
  1607 |          |                           | 	; >>>>> YKQPost(newPieceQueue, (void *) &(newPieceList[i])); 
  1608 | 00000ADA | A1[840A]                  | 	mov	ax, word [L_myinth_16]
  1609 | 00000ADD | B90300                    | 	mov	cx, 3
  1610 | 00000AE0 | D3E0                      | 	shl	ax, cl
  1611 | 00000AE2 | 05[9833]                  | 	add	ax, newPieceList
  1612 | 00000AE5 | 50                        | 	push	ax
  1613 | 00000AE6 | FF36[6626]                | 	push	word [newPieceQueue]
  1614 | 00000AEA | E8290A                    | 	call	YKQPost
  1615 | 00000AED | 83C404                    | 	add	sp, 4
  1616 |          |                           | 	; >>>>> Line:	45
  1617 |          |                           | 	; >>>>> i++; 
  1618 | 00000AF0 | FF06[840A]                | 	inc	word [L_myinth_16]
  1619 |          |                           | 	; >>>>> Line:	46
  1620 |          |                           | 	; >>>>> if(i == 50){ 
  1621 | 00000AF4 | 833E[840A]32              | 	cmp	word [L_myinth_16], 50
  1622 | 00000AF9 | 7506                      | 	jne	L_myinth_19
  1623 |          |                           | 	; >>>>> Line:	47
  1624 |          |                           | 	; >>>>> i = 0; 
  1625 | 00000AFB | C706[840A]0000            | 	mov	word [L_myinth_16], 0
  1626 |          |                           | L_myinth_19:
  1627 | 00000B01 | 89EC                      | 	mov	sp, bp
  1628 | 00000B03 | 5D                        | 	pop	bp
  1629 | 00000B04 | C3                        | 	ret
  1630 |          |                           | L_myinth_17:
  1631 | 00000B05 | 55                        | 	push	bp
  1632 | 00000B06 | 89E5                      | 	mov	bp, sp
  1633 | 00000B08 | E97DFF                    | 	jmp	L_myinth_18
  1634 | 00000B0B | 90                        | 	ALIGN	2
  1635 |          |                           | c_received_handler:
  1636 |          |                           | 	; >>>>> Line:	51
  1637 |          |                           | 	; >>>>> void c_received_handler(void){ 
  1638 | 00000B0C | EB0E                      | 	jmp	L_myinth_21
  1639 |          |                           | L_myinth_22:
  1640 |          |                           | 	; >>>>> Line:	52
  1641 |          |                           | 	; >>>>> YKSemPost(movePieceSem); 
  1642 | 00000B0E | FF36[6826]                | 	push	word [movePieceSem]
  1643 | 00000B12 | E88506                    | 	call	YKSemPost
  1644 | 00000B15 | 83C402                    | 	add	sp, 2
  1645 | 00000B18 | 89EC                      | 	mov	sp, bp
  1646 | 00000B1A | 5D                        | 	pop	bp
  1647 | 00000B1B | C3                        | 	ret
  1648 |          |                           | L_myinth_21:
  1649 | 00000B1C | 55                        | 	push	bp
  1650 | 00000B1D | 89E5                      | 	mov	bp, sp
  1651 | 00000B1F | EBED                      | 	jmp	L_myinth_22
  1652 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1653 |          |                           | 	CPU	8086
  1654 | 00000B21 | 90                        | 	ALIGN	2
  1655 | 00000B22 | E9E31A                    | 	jmp	main	; Jump to program start
  1656 |          |                           | run_flag:
  1657 | 00000B25 | 00                        | 	DB	0
  1658 |          |                           | 	ALIGN	2
  1659 |          |                           | YKInitialize:
  1660 |          |                           | 	; >>>>> Line:	29
  1661 |          |                           | 	; >>>>> void YKInitialize(void){ 
  1662 | 00000B26 | E96601                    | 	jmp	L_yakc_1
  1663 |          |                           | L_yakc_2:
  1664 |          |                           | 	; >>>>> Line:	31
  1665 |          |                           | 	; >>>>> YKCtxSwCount = 0; 
  1666 | 00000B29 | C706[B019]0000            | 	mov	word [YKCtxSwCount], 0
  1667 |          |                           | 	; >>>>> Line:	32
  1668 |          |                           | 	; >>>>> YKIdleCount = 0; 
  1669 | 00000B2F | C706[B219]0000            | 	mov	word [YKIdleCount], 0
  1670 |          |                           | 	; >>>>> Line:	33
  1671 |          |                           | 	; >>>>> TKCurrentlyRunning = 0; 
  1672 | 00000B35 | C706[221D]0000            | 	mov	word [TKCurrentlyRunning], 0
  1673 |          |                           | 	; >>>>> Line:	34
  1674 |          |                           | 	; >>>>> YKISRDepth = 0; 
  1675 | 00000B3B | C706[9A1C]0000            | 	mov	word [YKISRDepth], 0
  1676 |          |                           | 	; >>>>> Line:	35
  1677 |          |                           | 	; >>>>> YKTickNum = 0; 
  1678 | 00000B41 | C706[B419]0000            | 	mov	word [YKTickNum], 0
  1679 |          |                           | 	; >>>>> Line:	37
  1680 |          |                           | 	; >>>>> YKEnterMutex(); 
  1681 | 00000B47 | E8DA11                    | 	call	YKEnterMutex
  1682 |          |                           | 	; >>>>> Line:	39
  1683 |          |                           | 	; >>>>> YKAvailTCBList = &(YKTCBArray[0]); 
  1684 | 00000B4A | C706[BC19][BE19]          | 	mov	word [YKAvailTCBList], YKTCBArray
  1685 |          |                           | 	; >>>>> Line:	41
  1686 |          |                           | 	; >>>>> for (i = 0; i < 9; i++){ 
  1687 | 00000B50 | C746FE0000                | 	mov	word [bp-2], 0
  1688 | 00000B55 | EB26                      | 	jmp	L_yakc_4
  1689 |          |                           | L_yakc_3:
  1690 |          |                           | 	; >>>>> Line:	42
  1691 |          |                           | 	; >>>>> YKTCBArray[i].next = &(YKTCBArray[i+1]); 
  1692 | 00000B57 | 8B46FE                    | 	mov	ax, word [bp-2]
  1693 | 00000B5A | 40                        | 	inc	ax
  1694 | 00000B5B | B91600                    | 	mov	cx, 22
  1695 | 00000B5E | F7E9                      | 	imul	cx
  1696 | 00000B60 | 05[BE19]                  | 	add	ax, YKTCBArray
  1697 | 00000B63 | 50                        | 	push	ax
  1698 | 00000B64 | 8B46FE                    | 	mov	ax, word [bp-2]
  1699 | 00000B67 | B91600                    | 	mov	cx, 22
  1700 | 00000B6A | F7E9                      | 	imul	cx
  1701 | 00000B6C | 89C2                      | 	mov	dx, ax
  1702 | 00000B6E | 81C2[BE19]                | 	add	dx, YKTCBArray
  1703 | 00000B72 | 89D6                      | 	mov	si, dx
  1704 | 00000B74 | 83C608                    | 	add	si, 8
  1705 | 00000B77 | 58                        | 	pop	ax
  1706 | 00000B78 | 8904                      | 	mov	word [si], ax
  1707 |          |                           | L_yakc_6:
  1708 | 00000B7A | FF46FE                    | 	inc	word [bp-2]
  1709 |          |                           | L_yakc_4:
  1710 | 00000B7D | 837EFE09                  | 	cmp	word [bp-2], 9
  1711 | 00000B81 | 7CD4                      | 	jl	L_yakc_3
  1712 |          |                           | L_yakc_5:
  1713 |          |                           | 	; >>>>> Line:	44
  1714 |          |                           | 	; >>>>> YKTCBArray[9].next = 0; 
  1715 | 00000B83 | C706[8C1A]0000            | 	mov	word [(206+YKTCBArray)], 0
  1716 |          |                           | 	; >>>>> Line:	47
  1717 |          |                           | 	; >>>>> for (i = 0; i < 10; i++){ 
  1718 | 00000B89 | C746FE0000                | 	mov	word [bp-2], 0
  1719 | 00000B8E | EB3E                      | 	jmp	L_yakc_8
  1720 |          |                           | L_yakc_7:
  1721 |          |                           | 	; >>>>> Line:	48
  1722 |          |                           | 	; >>>>> YKSemArray[i].val = -10; 
  1723 | 00000B90 | 8B46FE                    | 	mov	ax, word [bp-2]
  1724 | 00000B93 | B90600                    | 	mov	cx, 6
  1725 | 00000B96 | F7E9                      | 	imul	cx
  1726 | 00000B98 | 89C6                      | 	mov	si, ax
  1727 | 00000B9A | 81C6[9C1C]                | 	add	si, YKSemArray
  1728 | 00000B9E | C704F6FF                  | 	mov	word [si], -10
  1729 |          |                           | 	; >>>>> Line:	49
  1730 |          |                           | 	; >>>>> YKSemArray[i].active = 0; 
  1731 | 00000BA2 | 8B46FE                    | 	mov	ax, word [bp-2]
  1732 | 00000BA5 | B90600                    | 	mov	cx, 6
  1733 | 00000BA8 | F7E9                      | 	imul	cx
  1734 | 00000BAA | 05[9C1C]                  | 	add	ax, YKSemArray
  1735 | 00000BAD | 89C6                      | 	mov	si, ax
  1736 | 00000BAF | 83C602                    | 	add	si, 2
  1737 | 00000BB2 | C7040000                  | 	mov	word [si], 0
  1738 |          |                           | 	; >>>>> Line:	50
  1739 |          |                           | 	; >>>>> YKSemArray[i].id = i; 
  1740 | 00000BB6 | 8B46FE                    | 	mov	ax, word [bp-2]
  1741 | 00000BB9 | B90600                    | 	mov	cx, 6
  1742 | 00000BBC | F7E9                      | 	imul	cx
  1743 | 00000BBE | 05[9C1C]                  | 	add	ax, YKSemArray
  1744 | 00000BC1 | 89C6                      | 	mov	si, ax
  1745 | 00000BC3 | 83C604                    | 	add	si, 4
  1746 | 00000BC6 | 8B46FE                    | 	mov	ax, word [bp-2]
  1747 | 00000BC9 | 8904                      | 	mov	word [si], ax
  1748 |          |                           | L_yakc_10:
  1749 | 00000BCB | FF46FE                    | 	inc	word [bp-2]
  1750 |          |                           | L_yakc_8:
  1751 | 00000BCE | 837EFE0A                  | 	cmp	word [bp-2], 10
  1752 | 00000BD2 | 7CBC                      | 	jl	L_yakc_7
  1753 |          |                           | L_yakc_9:
  1754 |          |                           | 	; >>>>> Line:	53
  1755 |          |                           | 	; >>>>> for (i = 0; i < 5; i++){ 
  1756 | 00000BD4 | C746FE0000                | 	mov	word [bp-2], 0
  1757 | 00000BD9 | EB65                      | 	jmp	L_yakc_12
  1758 |          |                           | L_yakc_11:
  1759 |          |                           | 	; >>>>> Line:	54
  1760 |          |                           | 	; >>>>> CBptr tmp, 
  1761 | 00000BDB | 8B46FE                    | 	mov	ax, word [bp-2]
  1762 | 00000BDE | B90A00                    | 	mov	cx, 10
  1763 | 00000BE1 | F7E9                      | 	imul	cx
  1764 | 00000BE3 | 89C6                      | 	mov	si, ax
  1765 | 00000BE5 | 81C6[D81C]                | 	add	si, YKQueueArray
  1766 | 00000BE9 | C7040000                  | 	mov	word [si], 0
  1767 |          |                           | 	; >>>>> Line:	55
  1768 |          |                           | 	; >>>>> YKQueueArray[i].cur_length = 0; 
  1769 | 00000BED | 8B46FE                    | 	mov	ax, word [bp-2]
  1770 | 00000BF0 | B90A00                    | 	mov	cx, 10
  1771 | 00000BF3 | F7E9                      | 	imul	cx
  1772 | 00000BF5 | 05[D81C]                  | 	add	ax, YKQueueArray
  1773 | 00000BF8 | 89C6                      | 	mov	si, ax
  1774 | 00000BFA | 83C602                    | 	add	si, 2
  1775 | 00000BFD | C7040000                  | 	mov	word [si], 0
  1776 |          |                           | 	; >>>>> Line:	56
  1777 |          |                           | 	; >>>>> YKQueueArray[i].base_addr = 0; 
  1778 | 00000C01 | 8B46FE                    | 	mov	ax, word [bp-2]
  1779 | 00000C04 | B90A00                    | 	mov	cx, 10
  1780 | 00000C07 | F7E9                      | 	imul	cx
  1781 | 00000C09 | 05[D81C]                  | 	add	ax, YKQueueArray
  1782 | 00000C0C | 89C6                      | 	mov	si, ax
  1783 | 00000C0E | 83C604                    | 	add	si, 4
  1784 | 00000C11 | C7040000                  | 	mov	word [si], 0
  1785 |          |                           | 	; >>>>> Line:	57
  1786 |          |                           | 	; >>>>> YKQueueArray[i].head = 0; 
  1787 | 00000C15 | 8B46FE                    | 	mov	ax, word [bp-2]
  1788 | 00000C18 | B90A00                    | 	mov	cx, 10
  1789 | 00000C1B | F7E9                      | 	imul	cx
  1790 | 00000C1D | 05[D81C]                  | 	add	ax, YKQueueArray
  1791 | 00000C20 | 89C6                      | 	mov	si, ax
  1792 | 00000C22 | 83C606                    | 	add	si, 6
  1793 | 00000C25 | C7040000                  | 	mov	word [si], 0
  1794 |          |                           | 	; >>>>> Line:	58
  1795 |          |                           | 	; >>>>> YKQueueArray[i].tail = 0; 
  1796 | 00000C29 | 8B46FE                    | 	mov	ax, word [bp-2]
  1797 | 00000C2C | B90A00                    | 	mov	cx, 10
  1798 | 00000C2F | F7E9                      | 	imul	cx
  1799 | 00000C31 | 05[D81C]                  | 	add	ax, YKQueueArray
  1800 | 00000C34 | 89C6                      | 	mov	si, ax
  1801 | 00000C36 | 83C608                    | 	add	si, 8
  1802 | 00000C39 | C7040000                  | 	mov	word [si], 0
  1803 |          |                           | L_yakc_14:
  1804 | 00000C3D | FF46FE                    | 	inc	word [bp-2]
  1805 |          |                           | L_yakc_12:
  1806 | 00000C40 | 837EFE05                  | 	cmp	word [bp-2], 5
  1807 | 00000C44 | 7C95                      | 	jl	L_yakc_11
  1808 |          |                           | L_yakc_13:
  1809 |          |                           | 	; >>>>> Line:	61
  1810 |          |                           | 	; >>>>> for (i = 0; i < 5; i++){ 
  1811 | 00000C46 | C746FE0000                | 	mov	word [bp-2], 0
  1812 | 00000C4B | EB27                      | 	jmp	L_yakc_16
  1813 |          |                           | L_yakc_15:
  1814 |          |                           | 	; >>>>> Line:	62
  1815 |          |                           | 	; >>>>> YKEVENTArray[i].active = 0; 
  1816 | 00000C4D | 8B46FE                    | 	mov	ax, word [bp-2]
  1817 | 00000C50 | D1E0                      | 	shl	ax, 1
  1818 | 00000C52 | D1E0                      | 	shl	ax, 1
  1819 | 00000C54 | 89C6                      | 	mov	si, ax
  1820 | 00000C56 | 81C6[0A1D]                | 	add	si, YKEVENTArray
  1821 | 00000C5A | C7040000                  | 	mov	word [si], 0
  1822 |          |                           | 	; >>>>> Line:	63
  1823 |          |                           | 	; >>>>> YKEVENTArray[i].flag = 0; 
  1824 | 00000C5E | 8B46FE                    | 	mov	ax, word [bp-2]
  1825 | 00000C61 | D1E0                      | 	shl	ax, 1
  1826 | 00000C63 | D1E0                      | 	shl	ax, 1
  1827 | 00000C65 | 05[0A1D]                  | 	add	ax, YKEVENTArray
  1828 | 00000C68 | 89C6                      | 	mov	si, ax
  1829 | 00000C6A | 83C602                    | 	add	si, 2
  1830 | 00000C6D | C7040000                  | 	mov	word [si], 0
  1831 |          |                           | L_yakc_18:
  1832 | 00000C71 | FF46FE                    | 	inc	word [bp-2]
  1833 |          |                           | L_yakc_16:
  1834 | 00000C74 | 837EFE05                  | 	cmp	word [bp-2], 5
  1835 | 00000C78 | 7CD3                      | 	jl	L_yakc_15
  1836 |          |                           | L_yakc_17:
  1837 |          |                           | 	; >>>>> Line:	67
  1838 |          |                           | 	; >>>>> YKNewTask(YKIdleTask, (void*)&idleStack[256], 100); 
  1839 | 00000C7A | B064                      | 	mov	al, 100
  1840 | 00000C7C | 50                        | 	push	ax
  1841 | 00000C7D | B8[9A1C]                  | 	mov	ax, (idleStack+512)
  1842 | 00000C80 | 50                        | 	push	ax
  1843 | 00000C81 | B8[960C]                  | 	mov	ax, YKIdleTask
  1844 | 00000C84 | 50                        | 	push	ax
  1845 | 00000C85 | E82A00                    | 	call	YKNewTask
  1846 | 00000C88 | 83C406                    | 	add	sp, 6
  1847 | 00000C8B | 89EC                      | 	mov	sp, bp
  1848 | 00000C8D | 5D                        | 	pop	bp
  1849 | 00000C8E | C3                        | 	ret
  1850 |          |                           | L_yakc_1:
  1851 | 00000C8F | 55                        | 	push	bp
  1852 | 00000C90 | 89E5                      | 	mov	bp, sp
  1853 | 00000C92 | 51                        | 	push	cx
  1854 | 00000C93 | E993FE                    | 	jmp	L_yakc_2
  1855 |          |                           | 	ALIGN	2
  1856 |          |                           | YKIdleTask:
  1857 |          |                           | 	; >>>>> Line:	70
  1858 |          |                           | 	; >>>>> void YKIdleTask(void){ 
  1859 | 00000C96 | EB15                      | 	jmp	L_yakc_20
  1860 |          |                           | L_yakc_21:
  1861 |          |                           | 	; >>>>> Line:	71
  1862 |          |                           | 	; >>>>> while(1){ 
  1863 | 00000C98 | EB0D                      | 	jmp	L_yakc_23
  1864 |          |                           | L_yakc_22:
  1865 |          |                           | 	; >>>>> Line:	72
  1866 |          |                           | 	; >>>>> YKEnterMutex(); 
  1867 | 00000C9A | E88710                    | 	call	YKEnterMutex
  1868 |          |                           | 	; >>>>> Line:	73
  1869 |          |                           | 	; >>>>> YKIdleCount=YKIdleCount+1; 
  1870 | 00000C9D | A1[B219]                  | 	mov	ax, word [YKIdleCount]
  1871 | 00000CA0 | 40                        | 	inc	ax
  1872 | 00000CA1 | A3[B219]                  | 	mov	word [YKIdleCount], ax
  1873 |          |                           | 	; >>>>> Line:	74
  1874 |          |                           | 	; >>>>> YKExitMutex(); 
  1875 | 00000CA4 | E87F10                    | 	call	YKExitMutex
  1876 |          |                           | L_yakc_23:
  1877 | 00000CA7 | EBF1                      | 	jmp	L_yakc_22
  1878 |          |                           | L_yakc_24:
  1879 | 00000CA9 | 89EC                      | 	mov	sp, bp
  1880 | 00000CAB | 5D                        | 	pop	bp
  1881 | 00000CAC | C3                        | 	ret
  1882 |          |                           | L_yakc_20:
  1883 | 00000CAD | 55                        | 	push	bp
  1884 | 00000CAE | 89E5                      | 	mov	bp, sp
  1885 | 00000CB0 | EBE6                      | 	jmp	L_yakc_21
  1886 |          |                           | 	ALIGN	2
  1887 |          |                           | YKNewTask:
  1888 |          |                           | 	; >>>>> Line:	78
  1889 |          |                           | 	; >>>>> void YKNewTask( void (*task)(void), void *taskStack, unsigned char priority){ 
  1890 | 00000CB2 | E94F01                    | 	jmp	L_yakc_26
  1891 |          |                           | L_yakc_27:
  1892 |          |                           | 	; >>>>> Line:	82
  1893 |          |                           | 	; >>>>> taskStack = ((int *)taskStack) - 1; 
  1894 | 00000CB5 | 8B4606                    | 	mov	ax, word [bp+6]
  1895 | 00000CB8 | 83E802                    | 	sub	ax, 2
  1896 | 00000CBB | 894606                    | 	mov	word [bp+6], ax
  1897 |          |                           | 	; >>>>> Line:	85
  1898 |          |                           | 	; >>>>> tmp = YKAvailTCBList; 
  1899 | 00000CBE | A1[BC19]                  | 	mov	ax, word [YKAvailTCBList]
  1900 | 00000CC1 | 8946FE                    | 	mov	word [bp-2], ax
  1901 |          |                           | 	; >>>>> Line:	86
  1902 |          |                           | 	; >>>>> YKAvailTCBList = tmp->next; 
  1903 | 00000CC4 | 8B76FE                    | 	mov	si, word [bp-2]
  1904 | 00000CC7 | 83C608                    | 	add	si, 8
  1905 | 00000CCA | 8B04                      | 	mov	ax, word [si]
  1906 | 00000CCC | A3[BC19]                  | 	mov	word [YKAvailTCBList], ax
  1907 |          |                           | 	; >>>>> Line:	88
  1908 |          |                           | 	; >>>>> tmp->priority = priority; 
  1909 | 00000CCF | 8A4608                    | 	mov	al, byte [bp+8]
  1910 | 00000CD2 | 30E4                      | 	xor	ah, ah
  1911 | 00000CD4 | 8B76FE                    | 	mov	si, word [bp-2]
  1912 | 00000CD7 | 83C604                    | 	add	si, 4
  1913 | 00000CDA | 8904                      | 	mov	word [si], ax
  1914 |          |                           | 	; >>>>> Line:	89
  1915 |          |                           | 	; >>>>> tmp->delay = 0; 
  1916 | 00000CDC | 8B76FE                    | 	mov	si, word [bp-2]
  1917 | 00000CDF | 83C606                    | 	add	si, 6
  1918 | 00000CE2 | C7040000                  | 	mov	word [si], 0
  1919 |          |                           | 	; >>>>> Line:	91
  1920 |          |                           | 	; >>>>> YKEnterMutex(); 
  1921 | 00000CE6 | E83B10                    | 	call	YKEnterMutex
  1922 |          |                           | 	; >>>>> Line:	93
  1923 |          |                           | 	; >>>>> if (YKRdyList == 0){ 
  1924 | 00000CE9 | A1[B619]                  | 	mov	ax, word [YKRdyList]
  1925 | 00000CEC | 85C0                      | 	test	ax, ax
  1926 | 00000CEE | 751C                      | 	jne	L_yakc_28
  1927 |          |                           | 	; >>>>> Line:	94
  1928 |          |                           | 	; >>>>> YKRdyList = tmp; 
  1929 | 00000CF0 | 8B46FE                    | 	mov	ax, word [bp-2]
  1930 | 00000CF3 | A3[B619]                  | 	mov	word [YKRdyList], ax
  1931 |          |                           | 	; >>>>> Line:	95
  1932 |          |                           | 	; >>>>> tmp->next = 0; 
  1933 | 00000CF6 | 8B76FE                    | 	mov	si, word [bp-2]
  1934 | 00000CF9 | 83C608                    | 	add	si, 8
  1935 | 00000CFC | C7040000                  | 	mov	word [si], 0
  1936 |          |                           | 	; >>>>> Line:	96
  1937 |          |                           | 	; >>>>> tmp->prev = 0; 
  1938 | 00000D00 | 8B76FE                    | 	mov	si, word [bp-2]
  1939 | 00000D03 | 83C60A                    | 	add	si, 10
  1940 | 00000D06 | C7040000                  | 	mov	word [si], 0
  1941 | 00000D0A | EB6F                      | 	jmp	L_yakc_29
  1942 |          |                           | L_yakc_28:
  1943 |          |                           | 	; >>>>> Line:	99
  1944 |          |                           | 	; >>>>> tmp2 = YKRdyList; 
  1945 | 00000D0C | A1[B619]                  | 	mov	ax, word [YKRdyList]
  1946 | 00000D0F | 8946FC                    | 	mov	word [bp-4], ax
  1947 |          |                           | 	; >>>>> Line:	100
  1948 |          |                           | 	; >>>>> while (tmp2->priority < tmp->priority){ 
  1949 | 00000D12 | EB0B                      | 	jmp	L_yakc_31
  1950 |          |                           | L_yakc_30:
  1951 |          |                           | 	; >>>>> Line:	101
  1952 |          |                           | 	; >>>>> tmp2 = tmp2->next; 
  1953 | 00000D14 | 8B76FC                    | 	mov	si, word [bp-4]
  1954 | 00000D17 | 83C608                    | 	add	si, 8
  1955 | 00000D1A | 8B04                      | 	mov	ax, word [si]
  1956 | 00000D1C | 8946FC                    | 	mov	word [bp-4], ax
  1957 |          |                           | L_yakc_31:
  1958 | 00000D1F | 8B76FC                    | 	mov	si, word [bp-4]
  1959 | 00000D22 | 83C604                    | 	add	si, 4
  1960 | 00000D25 | 8B7EFE                    | 	mov	di, word [bp-2]
  1961 | 00000D28 | 83C704                    | 	add	di, 4
  1962 | 00000D2B | 8B05                      | 	mov	ax, word [di]
  1963 | 00000D2D | 3B04                      | 	cmp	ax, word [si]
  1964 | 00000D2F | 7FE3                      | 	jg	L_yakc_30
  1965 |          |                           | L_yakc_32:
  1966 |          |                           | 	; >>>>> Line:	103
  1967 |          |                           | 	; >>>>> if (tmp2->prev == 0){ 
  1968 | 00000D31 | 8B76FC                    | 	mov	si, word [bp-4]
  1969 | 00000D34 | 83C60A                    | 	add	si, 10
  1970 | 00000D37 | 8B04                      | 	mov	ax, word [si]
  1971 | 00000D39 | 85C0                      | 	test	ax, ax
  1972 | 00000D3B | 7508                      | 	jne	L_yakc_33
  1973 |          |                           | 	; >>>>> Line:	104
  1974 |          |                           | 	; >>>>> YKRdyList = tmp; 
  1975 | 00000D3D | 8B46FE                    | 	mov	ax, word [bp-2]
  1976 | 00000D40 | A3[B619]                  | 	mov	word [YKRdyList], ax
  1977 | 00000D43 | EB10                      | 	jmp	L_yakc_34
  1978 |          |                           | L_yakc_33:
  1979 |          |                           | 	; >>>>> Line:	107
  1980 |          |                           | 	; >>>>> tmp2->prev->next = tmp; 
  1981 | 00000D45 | 8B76FC                    | 	mov	si, word [bp-4]
  1982 | 00000D48 | 83C60A                    | 	add	si, 10
  1983 | 00000D4B | 8B34                      | 	mov	si, word [si]
  1984 | 00000D4D | 83C608                    | 	add	si, 8
  1985 | 00000D50 | 8B46FE                    | 	mov	ax, word [bp-2]
  1986 | 00000D53 | 8904                      | 	mov	word [si], ax
  1987 |          |                           | L_yakc_34:
  1988 |          |                           | 	; >>>>> Line:	109
  1989 |          |                           | 	; >>>>> tmp->prev = tmp2->prev; 
  1990 | 00000D55 | 8B76FC                    | 	mov	si, word [bp-4]
  1991 | 00000D58 | 83C60A                    | 	add	si, 10
  1992 | 00000D5B | 8B7EFE                    | 	mov	di, word [bp-2]
  1993 | 00000D5E | 83C70A                    | 	add	di, 10
  1994 | 00000D61 | 8B04                      | 	mov	ax, word [si]
  1995 | 00000D63 | 8905                      | 	mov	word [di], ax
  1996 |          |                           | 	; >>>>> Line:	110
  1997 |          |                           | 	; >>>>> tmp->next  
  1998 | 00000D65 | 8B76FE                    | 	mov	si, word [bp-2]
  1999 | 00000D68 | 83C608                    | 	add	si, 8
  2000 | 00000D6B | 8B46FC                    | 	mov	ax, word [bp-4]
  2001 | 00000D6E | 8904                      | 	mov	word [si], ax
  2002 |          |                           | 	; >>>>> Line:	111
  2003 |          |                           | 	; >>>>> tmp2->prev = tmp; 
  2004 | 00000D70 | 8B76FC                    | 	mov	si, word [bp-4]
  2005 | 00000D73 | 83C60A                    | 	add	si, 10
  2006 | 00000D76 | 8B46FE                    | 	mov	ax, word [bp-2]
  2007 | 00000D79 | 8904                      | 	mov	word [si], ax
  2008 |          |                           | L_yakc_29:
  2009 |          |                           | 	; >>>>> Line:	115
  2010 |          |                           | 	; >>>>> tmp->stackptr = taskStack; 
  2011 | 00000D7B | 8B76FE                    | 	mov	si, word [bp-2]
  2012 | 00000D7E | 8B4606                    | 	mov	ax, word [bp+6]
  2013 | 00000D81 | 8904                      | 	mov	word [si], ax
  2014 |          |                           | 	; >>>>> Line:	118
  2015 |          |                           | 	; >>>>> tmp->stackptr = tmp->stackptr - 11; 
  2016 | 00000D83 | 8B76FE                    | 	mov	si, word [bp-2]
  2017 | 00000D86 | 8B04                      | 	mov	ax, word [si]
  2018 | 00000D88 | 83E816                    | 	sub	ax, 22
  2019 | 00000D8B | 8904                      | 	mov	word [si], ax
  2020 |          |                           | 	; >>>>> Line:	119
  2021 |          |                           | 	; >>>>> for(i=11; i>=0;i--){ 
  2022 | 00000D8D | C746FA0B00                | 	mov	word [bp-6], 11
  2023 | 00000D92 | EB5C                      | 	jmp	L_yakc_36
  2024 |          |                           | L_yakc_35:
  2025 |          |                           | 	; >>>>> Line:	120
  2026 |          |                           | 	; >>>>> if(i == 11){ 
  2027 | 00000D94 | 837EFA0B                  | 	cmp	word [bp-6], 11
  2028 | 00000D98 | 7512                      | 	jne	L_yakc_39
  2029 |          |                           | 	; >>>>> Line:	121
  2030 |          |                           | 	; >>>>> *(tmp->stackptr+i) = 0x200; 
  2031 | 00000D9A | 8B46FA                    | 	mov	ax, word [bp-6]
  2032 | 00000D9D | D1E0                      | 	shl	ax, 1
  2033 | 00000D9F | 89C6                      | 	mov	si, ax
  2034 | 00000DA1 | 8B7EFE                    | 	mov	di, word [bp-2]
  2035 | 00000DA4 | 0335                      | 	add	si, word [di]
  2036 | 00000DA6 | C7040002                  | 	mov	word [si], 512
  2037 | 00000DAA | EB41                      | 	jmp	L_yakc_40
  2038 |          |                           | L_yakc_39:
  2039 |          |                           | 	; >>>>> Line:	123
  2040 |          |                           | 	; >>>>> else if(i == 10){ 
  2041 | 00000DAC | 837EFA0A                  | 	cmp	word [bp-6], 10
  2042 | 00000DB0 | 7512                      | 	jne	L_yakc_41
  2043 |          |                           | 	; >>>>> Line:	124
  2044 |          |                           | 	; >>>>> *(tmp->stackptr+i) = 0; 
  2045 | 00000DB2 | 8B46FA                    | 	mov	ax, word [bp-6]
  2046 | 00000DB5 | D1E0                      | 	shl	ax, 1
  2047 | 00000DB7 | 89C6                      | 	mov	si, ax
  2048 | 00000DB9 | 8B7EFE                    | 	mov	di, word [bp-2]
  2049 | 00000DBC | 0335                      | 	add	si, word [di]
  2050 | 00000DBE | C7040000                  | 	mov	word [si], 0
  2051 | 00000DC2 | EB29                      | 	jmp	L_yakc_42
  2052 |          |                           | L_yakc_41:
  2053 |          |                           | 	; >>>>> Line:	126
  2054 |          |                           | 	; >>>>> else if(i == 9){ 
  2055 | 00000DC4 | 837EFA09                  | 	cmp	word [bp-6], 9
  2056 | 00000DC8 | 7513                      | 	jne	L_yakc_43
  2057 |          |                           | 	; >>>>> Line:	127
  2058 |          |                           | 	; >>>>> *(tmp->stackptr+i) = (int)task; 
  2059 | 00000DCA | 8B46FA                    | 	mov	ax, word [bp-6]
  2060 | 00000DCD | D1E0                      | 	shl	ax, 1
  2061 | 00000DCF | 89C6                      | 	mov	si, ax
  2062 | 00000DD1 | 8B7EFE                    | 	mov	di, word [bp-2]
  2063 | 00000DD4 | 0335                      | 	add	si, word [di]
  2064 | 00000DD6 | 8B4604                    | 	mov	ax, word [bp+4]
  2065 | 00000DD9 | 8904                      | 	mov	word [si], ax
  2066 | 00000DDB | EB10                      | 	jmp	L_yakc_44
  2067 |          |                           | L_yakc_43:
  2068 |          |                           | 	; >>>>> Line:	130
  2069 |          |                           | 	; >>>>> *(tmp->stackptr+i) = 0; 
  2070 | 00000DDD | 8B46FA                    | 	mov	ax, word [bp-6]
  2071 | 00000DE0 | D1E0                      | 	shl	ax, 1
  2072 | 00000DE2 | 89C6                      | 	mov	si, ax
  2073 | 00000DE4 | 8B7EFE                    | 	mov	di, word [bp-2]
  2074 | 00000DE7 | 0335                      | 	add	si, word [di]
  2075 | 00000DE9 | C7040000                  | 	mov	word [si], 0
  2076 |          |                           | L_yakc_44:
  2077 |          |                           | L_yakc_42:
  2078 |          |                           | L_yakc_40:
  2079 |          |                           | L_yakc_38:
  2080 | 00000DED | FF4EFA                    | 	dec	word [bp-6]
  2081 |          |                           | L_yakc_36:
  2082 | 00000DF0 | 837EFA00                  | 	cmp	word [bp-6], 0
  2083 | 00000DF4 | 7D9E                      | 	jge	L_yakc_35
  2084 |          |                           | L_yakc_37:
  2085 |          |                           | 	; >>>>> Line:	135
  2086 |          |                           | 	; >>>>> YKScheduler(1); 
  2087 | 00000DF6 | B80100                    | 	mov	ax, 1
  2088 | 00000DF9 | 50                        | 	push	ax
  2089 | 00000DFA | E85300                    | 	call	YKScheduler
  2090 | 00000DFD | 83C402                    | 	add	sp, 2
  2091 | 00000E00 | 89EC                      | 	mov	sp, bp
  2092 | 00000E02 | 5D                        | 	pop	bp
  2093 | 00000E03 | C3                        | 	ret
  2094 |          |                           | L_yakc_26:
  2095 | 00000E04 | 55                        | 	push	bp
  2096 | 00000E05 | 89E5                      | 	mov	bp, sp
  2097 | 00000E07 | 83EC06                    | 	sub	sp, 6
  2098 | 00000E0A | E9A8FE                    | 	jmp	L_yakc_27
  2099 |          |                           | L_yakc_46:
  2100 | 00000E0D | 53746172742052756E-       | 	DB	"Start Run and call scheduler",0xA,0
  2101 | 00000E16 | 20616E642063616C6C-       | ...
  2102 | 00000E1F | 207363686564756C65-       | ...
  2103 | 00000E28 | 720A00                    | ...
  2104 | 00000E2B | 90                        | 	ALIGN	2
  2105 |          |                           | YKRun:
  2106 |          |                           | 	; >>>>> Line:	138
  2107 |          |                           | 	; >>>>> void YKRun(void){ 
  2108 | 00000E2C | EB1C                      | 	jmp	L_yakc_47
  2109 |          |                           | L_yakc_48:
  2110 |          |                           | 	; >>>>> Line:	139
  2111 |          |                           | 	; >>>>> printString("Start Run and call scheduler\n"); 
  2112 | 00000E2E | B8[0D0E]                  | 	mov	ax, L_yakc_46
  2113 | 00000E31 | 50                        | 	push	ax
  2114 | 00000E32 | E8F3F5                    | 	call	printString
  2115 | 00000E35 | 83C402                    | 	add	sp, 2
  2116 |          |                           | 	; >>>>> Line:	140
  2117 |          |                           | 	; >>>>> run_flag = 1; 
  2118 | 00000E38 | C606[250B]01              | 	mov	byte [run_flag], 1
  2119 |          |                           | 	; >>>>> Line:	141
  2120 |          |                           | 	; >>>>> YKScheduler(0); 
  2121 | 00000E3D | 31C0                      | 	xor	ax, ax
  2122 | 00000E3F | 50                        | 	push	ax
  2123 | 00000E40 | E80D00                    | 	call	YKScheduler
  2124 | 00000E43 | 83C402                    | 	add	sp, 2
  2125 | 00000E46 | 89EC                      | 	mov	sp, bp
  2126 | 00000E48 | 5D                        | 	pop	bp
  2127 | 00000E49 | C3                        | 	ret
  2128 |          |                           | L_yakc_47:
  2129 | 00000E4A | 55                        | 	push	bp
  2130 | 00000E4B | 89E5                      | 	mov	bp, sp
  2131 | 00000E4D | EBDF                      | 	jmp	L_yakc_48
  2132 | 00000E4F | 90                        | 	ALIGN	2
  2133 |          |                           | YKScheduler:
  2134 |          |                           | 	; >>>>> Line:	144
  2135 |          |                           | 	; >>>>> ity_task->stackptr); 
  2136 | 00000E50 | EB54                      | 	jmp	L_yakc_50
  2137 |          |                           | L_yakc_51:
  2138 |          |                           | 	; >>>>> Line:	148
  2139 |          |                           | 	; >>>>> YKEnterMutex(); 
  2140 | 00000E52 | E8CF0E                    | 	call	YKEnterMutex
  2141 |          |                           | 	; >>>>> Line:	150
  2142 |          |                           | 	; >>>>> highest_priority_task = YKRdyList; 
  2143 | 00000E55 | A1[B619]                  | 	mov	ax, word [YKRdyList]
  2144 | 00000E58 | 8946FE                    | 	mov	word [bp-2], ax
  2145 |          |                           | 	; >>>>> Line:	151
  2146 |          |                           | 	; >>>>> currentlyRunning = TKCurrentlyRunning; 
  2147 | 00000E5B | A1[221D]                  | 	mov	ax, word [TKCurrentlyRunning]
  2148 | 00000E5E | 8946FC                    | 	mov	word [bp-4], ax
  2149 |          |                           | 	; >>>>> Line:	153
  2150 |          |                           | 	; >>>>> if(!run_flag || (TKCurrentlyRunning == highest_priority_task)){ 
  2151 | 00000E61 | A0[250B]                  | 	mov	al, byte [run_flag]
  2152 | 00000E64 | 84C0                      | 	test	al, al
  2153 | 00000E66 | 7409                      | 	je	L_yakc_53
  2154 | 00000E68 | 8B46FE                    | 	mov	ax, word [bp-2]
  2155 | 00000E6B | 3B06[221D]                | 	cmp	ax, word [TKCurrentlyRunning]
  2156 | 00000E6F | 7502                      | 	jne	L_yakc_52
  2157 |          |                           | L_yakc_53:
  2158 |          |                           | 	; >>>>> Line:	154
  2159 |          |                           | 	; >>>>> return; 
  2160 | 00000E71 | EB2F                      | 	jmp	L_yakc_54
  2161 |          |                           | L_yakc_52:
  2162 |          |                           | 	; >>>>> Line:	157
  2163 |          |                           | 	; >>>>> YKCtxSwCount = YKCtxSwCount + 1; 
  2164 | 00000E73 | A1[B019]                  | 	mov	ax, word [YKCtxSwCount]
  2165 | 00000E76 | 40                        | 	inc	ax
  2166 | 00000E77 | A3[B019]                  | 	mov	word [YKCtxSwCount], ax
  2167 |          |                           | 	; >>>>> Line:	158
  2168 |          |                           | 	; >>>>> TKCurrentlyRunning = highest_priority_task; 
  2169 | 00000E7A | 8B46FE                    | 	mov	ax, word [bp-2]
  2170 | 00000E7D | A3[221D]                  | 	mov	word [TKCurrentlyRunning], ax
  2171 |          |                           | 	; >>>>> Line:	159
  2172 |          |                           | 	; >>>>> if(!save_flag){ 
  2173 | 00000E80 | 8B4604                    | 	mov	ax, word [bp+4]
  2174 | 00000E83 | 85C0                      | 	test	ax, ax
  2175 | 00000E85 | 750D                      | 	jne	L_yakc_55
  2176 |          |                           | 	; >>>>> Line:	160
  2177 |          |                           | 	; >>>>> YKDispatcherNSave(highest_priority_task->stackptr); 
  2178 | 00000E87 | 8B76FE                    | 	mov	si, word [bp-2]
  2179 | 00000E8A | FF34                      | 	push	word [si]
  2180 | 00000E8C | E8990E                    | 	call	YKDispatcherNSave
  2181 | 00000E8F | 83C402                    | 	add	sp, 2
  2182 | 00000E92 | EB0E                      | 	jmp	L_yakc_56
  2183 |          |                           | L_yakc_55:
  2184 |          |                           | 	; >>>>> Line:	163
  2185 |          |                           | 	; >>>>> YKDispatcherSave(&(currentlyRunning->stackptr), highest_priority_task->stackptr); 
  2186 | 00000E94 | 8B76FE                    | 	mov	si, word [bp-2]
  2187 | 00000E97 | FF34                      | 	push	word [si]
  2188 | 00000E99 | FF76FC                    | 	push	word [bp-4]
  2189 | 00000E9C | E89A0E                    | 	call	YKDispatcherSave
  2190 | 00000E9F | 83C404                    | 	add	sp, 4
  2191 |          |                           | L_yakc_56:
  2192 |          |                           | L_yakc_54:
  2193 | 00000EA2 | 89EC                      | 	mov	sp, bp
  2194 | 00000EA4 | 5D                        | 	pop	bp
  2195 | 00000EA5 | C3                        | 	ret
  2196 |          |                           | L_yakc_50:
  2197 | 00000EA6 | 55                        | 	push	bp
  2198 | 00000EA7 | 89E5                      | 	mov	bp, sp
  2199 | 00000EA9 | 83EC04                    | 	sub	sp, 4
  2200 | 00000EAC | EBA4                      | 	jmp	L_yakc_51
  2201 |          |                           | 	ALIGN	2
  2202 |          |                           | YKDelayTask:
  2203 |          |                           | 	; >>>>> Line:	167
  2204 |          |                           | 	; >>>>> void  
  2205 | 00000EAE | E98200                    | 	jmp	L_yakc_58
  2206 |          |                           | L_yakc_59:
  2207 |          |                           | 	; >>>>> Line:	169
  2208 |          |                           | 	; >>>>> YKEnterMutex(); 
  2209 | 00000EB1 | E8700E                    | 	call	YKEnterMutex
  2210 |          |                           | 	; >>>>> Line:	171
  2211 |          |                           | 	; >>>>> if(count == 0){ 
  2212 | 00000EB4 | 8B4604                    | 	mov	ax, word [bp+4]
  2213 | 00000EB7 | 85C0                      | 	test	ax, ax
  2214 | 00000EB9 | 7505                      | 	jne	L_yakc_60
  2215 |          |                           | 	; >>>>> Line:	172
  2216 |          |                           | 	; >>>>> YKExitMutex(); 
  2217 | 00000EBB | E8680E                    | 	call	YKExitMutex
  2218 |          |                           | 	; >>>>> Line:	173
  2219 |          |                           | 	; >>>>> return; 
  2220 | 00000EBE | EB6F                      | 	jmp	L_yakc_61
  2221 |          |                           | L_yakc_60:
  2222 |          |                           | 	; >>>>> Line:	176
  2223 |          |                           | 	; >>>>> ready = YKRdyList; 
  2224 | 00000EC0 | A1[B619]                  | 	mov	ax, word [YKRdyList]
  2225 | 00000EC3 | 8946FE                    | 	mov	word [bp-2], ax
  2226 |          |                           | 	; >>>>> Line:	177
  2227 |          |                           | 	; >>>>> YKRdyList = ready->next; 
  2228 | 00000EC6 | 8B76FE                    | 	mov	si, word [bp-2]
  2229 | 00000EC9 | 83C608                    | 	add	si, 8
  2230 | 00000ECC | 8B04                      | 	mov	ax, word [si]
  2231 | 00000ECE | A3[B619]                  | 	mov	word [YKRdyList], ax
  2232 |          |                           | 	; >>>>> Line:	178
  2233 |          |                           | 	; >>>>> ready->next->prev = 0; 
  2234 | 00000ED1 | 8B76FE                    | 	mov	si, word [bp-2]
  2235 | 00000ED4 | 83C608                    | 	add	si, 8
  2236 | 00000ED7 | 8B34                      | 	mov	si, word [si]
  2237 | 00000ED9 | 83C60A                    | 	add	si, 10
  2238 | 00000EDC | C7040000                  | 	mov	word [si], 0
  2239 |          |                           | 	; >>>>> Line:	180
  2240 |          |                           | 	; >>>>> ready->next = YKDelayList; 
  2241 | 00000EE0 | 8B76FE                    | 	mov	si, word [bp-2]
  2242 | 00000EE3 | 83C608                    | 	add	si, 8
  2243 | 00000EE6 | A1[B819]                  | 	mov	ax, word [YKDelayList]
  2244 | 00000EE9 | 8904                      | 	mov	word [si], ax
  2245 |          |                           | 	; >>>>> Line:	181
  2246 |          |                           | 	; >>>>> YKDelayList = ready; 
  2247 | 00000EEB | 8B46FE                    | 	mov	ax, word [bp-2]
  2248 | 00000EEE | A3[B819]                  | 	mov	word [YKDelayList], ax
  2249 |          |                           | 	; >>>>> Line:	182
  2250 |          |                           | 	; >>>>> ready->prev = 0; 
  2251 | 00000EF1 | 8B76FE                    | 	mov	si, word [bp-2]
  2252 | 00000EF4 | 83C60A                    | 	add	si, 10
  2253 | 00000EF7 | C7040000                  | 	mov	word [si], 0
  2254 |          |                           | 	; >>>>> Line:	183
  2255 |          |                           | 	; >>>>> if(ready->next != 0){ 
  2256 | 00000EFB | 8B76FE                    | 	mov	si, word [bp-2]
  2257 | 00000EFE | 83C608                    | 	add	si, 8
  2258 | 00000F01 | 8B04                      | 	mov	ax, word [si]
  2259 | 00000F03 | 85C0                      | 	test	ax, ax
  2260 | 00000F05 | 7410                      | 	je	L_yakc_62
  2261 |          |                           | 	; >>>>> Line:	184
  2262 |          |                           | 	; >>>>> ready->next->prev=ready; 
  2263 | 00000F07 | 8B76FE                    | 	mov	si, word [bp-2]
  2264 | 00000F0A | 83C608                    | 	add	si, 8
  2265 | 00000F0D | 8B34                      | 	mov	si, word [si]
  2266 | 00000F0F | 83C60A                    | 	add	si, 10
  2267 | 00000F12 | 8B46FE                    | 	mov	ax, word [bp-2]
  2268 | 00000F15 | 8904                      | 	mov	word [si], ax
  2269 |          |                           | L_yakc_62:
  2270 |          |                           | 	; >>>>> Line:	186
  2271 |          |                           | 	; >>>>> ready->delay = count; 
  2272 | 00000F17 | 8B76FE                    | 	mov	si, word [bp-2]
  2273 | 00000F1A | 83C606                    | 	add	si, 6
  2274 | 00000F1D | 8B4604                    | 	mov	ax, word [bp+4]
  2275 | 00000F20 | 8904                      | 	mov	word [si], ax
  2276 |          |                           | 	; >>>>> Line:	187
  2277 |          |                           | 	; >>>>> YKScheduler(1); 
  2278 | 00000F22 | B80100                    | 	mov	ax, 1
  2279 | 00000F25 | 50                        | 	push	ax
  2280 | 00000F26 | E827FF                    | 	call	YKScheduler
  2281 | 00000F29 | 83C402                    | 	add	sp, 2
  2282 |          |                           | 	; >>>>> Line:	188
  2283 |          |                           | 	; >>>>> YKExitMutex(); 
  2284 | 00000F2C | E8F70D                    | 	call	YKExitMutex
  2285 |          |                           | L_yakc_61:
  2286 | 00000F2F | 89EC                      | 	mov	sp, bp
  2287 | 00000F31 | 5D                        | 	pop	bp
  2288 | 00000F32 | C3                        | 	ret
  2289 |          |                           | L_yakc_58:
  2290 | 00000F33 | 55                        | 	push	bp
  2291 | 00000F34 | 89E5                      | 	mov	bp, sp
  2292 | 00000F36 | 51                        | 	push	cx
  2293 | 00000F37 | E977FF                    | 	jmp	L_yakc_59
  2294 |          |                           | 	ALIGN	2
  2295 |          |                           | YKEnterISR:
  2296 |          |                           | 	; >>>>> Line:	192
  2297 |          |                           | 	; >>>>> void YKEnterISR(void){ 
  2298 | 00000F3A | EB0B                      | 	jmp	L_yakc_64
  2299 |          |                           | L_yakc_65:
  2300 |          |                           | 	; >>>>> Line:	193
  2301 |          |                           | 	; >>>>> YKISRDepth = YKISRDepth + 1; 
  2302 | 00000F3C | A1[9A1C]                  | 	mov	ax, word [YKISRDepth]
  2303 | 00000F3F | 40                        | 	inc	ax
  2304 | 00000F40 | A3[9A1C]                  | 	mov	word [YKISRDepth], ax
  2305 | 00000F43 | 89EC                      | 	mov	sp, bp
  2306 | 00000F45 | 5D                        | 	pop	bp
  2307 | 00000F46 | C3                        | 	ret
  2308 |          |                           | L_yakc_64:
  2309 | 00000F47 | 55                        | 	push	bp
  2310 | 00000F48 | 89E5                      | 	mov	bp, sp
  2311 | 00000F4A | EBF0                      | 	jmp	L_yakc_65
  2312 |          |                           | 	ALIGN	2
  2313 |          |                           | YKExitISR:
  2314 |          |                           | 	; >>>>> Line:	196
  2315 |          |                           | 	; >>>>> void YKExitISR(void){ 
  2316 | 00000F4C | EB1B                      | 	jmp	L_yakc_67
  2317 |          |                           | L_yakc_68:
  2318 |          |                           | 	; >>>>> Line:	197
  2319 |          |                           | 	; >>>>> YKISRDepth = YKISRDepth - 1; 
  2320 | 00000F4E | A1[9A1C]                  | 	mov	ax, word [YKISRDepth]
  2321 | 00000F51 | 48                        | 	dec	ax
  2322 | 00000F52 | A3[9A1C]                  | 	mov	word [YKISRDepth], ax
  2323 |          |                           | 	; >>>>> Line:	198
  2324 |          |                           | 	; >>>>> if(YKISRDepth ==  
  2325 | 00000F55 | A1[9A1C]                  | 	mov	ax, word [YKISRDepth]
  2326 | 00000F58 | 85C0                      | 	test	ax, ax
  2327 | 00000F5A | 7509                      | 	jne	L_yakc_69
  2328 |          |                           | 	; >>>>> Line:	199
  2329 |          |                           | 	; >>>>> YKScheduler(0); 
  2330 | 00000F5C | 31C0                      | 	xor	ax, ax
  2331 | 00000F5E | 50                        | 	push	ax
  2332 | 00000F5F | E8EEFE                    | 	call	YKScheduler
  2333 | 00000F62 | 83C402                    | 	add	sp, 2
  2334 |          |                           | L_yakc_69:
  2335 | 00000F65 | 89EC                      | 	mov	sp, bp
  2336 | 00000F67 | 5D                        | 	pop	bp
  2337 | 00000F68 | C3                        | 	ret
  2338 |          |                           | L_yakc_67:
  2339 | 00000F69 | 55                        | 	push	bp
  2340 | 00000F6A | 89E5                      | 	mov	bp, sp
  2341 | 00000F6C | EBE0                      | 	jmp	L_yakc_68
  2342 |          |                           | 	ALIGN	2
  2343 |          |                           | YKTickHandler:
  2344 |          |                           | 	; >>>>> Line:	203
  2345 |          |                           | 	; >>>>> void YKTickHandler(void){ 
  2346 | 00000F6E | E91201                    | 	jmp	L_yakc_71
  2347 |          |                           | L_yakc_72:
  2348 |          |                           | 	; >>>>> Line:	205
  2349 |          |                           | 	; >>>>> tempDelay = YKDelayList; 
  2350 | 00000F71 | A1[B819]                  | 	mov	ax, word [YKDelayList]
  2351 | 00000F74 | 8946FE                    | 	mov	word [bp-2], ax
  2352 |          |                           | 	; >>>>> Line:	206
  2353 |          |                           | 	; >>>>> YKEnterMutex(); 
  2354 | 00000F77 | E8AA0D                    | 	call	YKEnterMutex
  2355 |          |                           | 	; >>>>> Line:	208
  2356 |          |                           | 	; >>>>> YKTickNum = YKTickNum + 1; 
  2357 | 00000F7A | A1[B419]                  | 	mov	ax, word [YKTickNum]
  2358 | 00000F7D | 40                        | 	inc	ax
  2359 | 00000F7E | A3[B419]                  | 	mov	word [YKTickNum], ax
  2360 |          |                           | 	; >>>>> Line:	210
  2361 |          |                           | 	; >>>>> while(tempDelay != 0){ 
  2362 | 00000F81 | E9EE00                    | 	jmp	L_yakc_74
  2363 |          |                           | L_yakc_73:
  2364 |          |                           | 	; >>>>> Line:	211
  2365 |          |                           | 	; >>>>> tempNext = tempDelay->next; 
  2366 | 00000F84 | 8B76FE                    | 	mov	si, word [bp-2]
  2367 | 00000F87 | 83C608                    | 	add	si, 8
  2368 | 00000F8A | 8B04                      | 	mov	ax, word [si]
  2369 | 00000F8C | 8946FA                    | 	mov	word [bp-6], ax
  2370 |          |                           | 	; >>>>> Line:	212
  2371 |          |                           | 	; >>>>> tempDelay->delay = tempDelay->delay - 1; 
  2372 | 00000F8F | 8B76FE                    | 	mov	si, word [bp-2]
  2373 | 00000F92 | 83C606                    | 	add	si, 6
  2374 | 00000F95 | 8B04                      | 	mov	ax, word [si]
  2375 | 00000F97 | 48                        | 	dec	ax
  2376 | 00000F98 | 8B76FE                    | 	mov	si, word [bp-2]
  2377 | 00000F9B | 83C606                    | 	add	si, 6
  2378 | 00000F9E | 8904                      | 	mov	word [si], ax
  2379 |          |                           | 	; >>>>> Line:	213
  2380 |          |                           | 	; >>>>> if(tempDelay->delay <= 0){ 
  2381 | 00000FA0 | 8B76FE                    | 	mov	si, word [bp-2]
  2382 | 00000FA3 | 83C606                    | 	add	si, 6
  2383 | 00000FA6 | 833C00                    | 	cmp	word [si], 0
  2384 | 00000FA9 | 7E03E9BE00                | 	jg	L_yakc_76
  2385 |          |                           | 	; >>>>> Line:	214
  2386 |          |                           | 	; >>>>> if(tempDelay->prev == 0){ 
  2387 | 00000FAE | 8B76FE                    | 	mov	si, word [bp-2]
  2388 | 00000FB1 | 83C60A                    | 	add	si, 10
  2389 | 00000FB4 | 8B04                      | 	mov	ax, word [si]
  2390 | 00000FB6 | 85C0                      | 	test	ax, ax
  2391 | 00000FB8 | 750D                      | 	jne	L_yakc_77
  2392 |          |                           | 	; >>>>> Line:	215
  2393 |          |                           | 	; >>>>> YKDelayList = tempDelay->next; 
  2394 | 00000FBA | 8B76FE                    | 	mov	si, word [bp-2]
  2395 | 00000FBD | 83C608                    | 	add	si, 8
  2396 | 00000FC0 | 8B04                      | 	mov	ax, word [si]
  2397 | 00000FC2 | A3[B819]                  | 	mov	word [YKDelayList], ax
  2398 | 00000FC5 | EB15                      | 	jmp	L_yakc_78
  2399 |          |                           | L_yakc_77:
  2400 |          |                           | 	; >>>>> Line:	218
  2401 |          |                           | 	; >>>>> tempDelay->prev->next = tempDelay->next; 
  2402 | 00000FC7 | 8B76FE                    | 	mov	si, word [bp-2]
  2403 | 00000FCA | 83C608                    | 	add	si, 8
  2404 | 00000FCD | 8B7EFE                    | 	mov	di, word [bp-2]
  2405 | 00000FD0 | 83C70A                    | 	add	di, 10
  2406 | 00000FD3 | 8B3D                      | 	mov	di, word [di]
  2407 | 00000FD5 | 83C708                    | 	add	di, 8
  2408 | 00000FD8 | 8B04                      | 	mov	ax, word [si]
  2409 | 00000FDA | 8905                      | 	mov	word [di], ax
  2410 |          |                           | L_yakc_78:
  2411 |          |                           | 	; >>>>> Line:	220
  2412 |          |                           | 	; >>>>> if(tempDelay->next != 0){ 
  2413 | 00000FDC | 8B76FE                    | 	mov	si, word [bp-2]
  2414 | 00000FDF | 83C608                    | 	add	si, 8
  2415 | 00000FE2 | 8B04                      | 	mov	ax, word [si]
  2416 | 00000FE4 | 85C0                      | 	test	ax, ax
  2417 | 00000FE6 | 7415                      | 	je	L_yakc_79
  2418 |          |                           | 	; >>>>> Line:	221
  2419 |          |                           | 	; >>>>> tempDelay->next- 
  2420 | 00000FE8 | 8B76FE                    | 	mov	si, word [bp-2]
  2421 | 00000FEB | 83C60A                    | 	add	si, 10
  2422 | 00000FEE | 8B7EFE                    | 	mov	di, word [bp-2]
  2423 | 00000FF1 | 83C708                    | 	add	di, 8
  2424 | 00000FF4 | 8B3D                      | 	mov	di, word [di]
  2425 | 00000FF6 | 83C70A                    | 	add	di, 10
  2426 | 00000FF9 | 8B04                      | 	mov	ax, word [si]
  2427 | 00000FFB | 8905                      | 	mov	word [di], ax
  2428 |          |                           | L_yakc_79:
  2429 |          |                           | 	; >>>>> Line:	224
  2430 |          |                           | 	; >>>>> tempReady = YKRdyList; 
  2431 | 00000FFD | A1[B619]                  | 	mov	ax, word [YKRdyList]
  2432 | 00001000 | 8946FC                    | 	mov	word [bp-4], ax
  2433 |          |                           | 	; >>>>> Line:	225
  2434 |          |                           | 	; >>>>> while(tempReady->priority < tempDelay->priority){ 
  2435 | 00001003 | EB0B                      | 	jmp	L_yakc_81
  2436 |          |                           | L_yakc_80:
  2437 |          |                           | 	; >>>>> Line:	226
  2438 |          |                           | 	; >>>>> tempReady = tempReady->next; 
  2439 | 00001005 | 8B76FC                    | 	mov	si, word [bp-4]
  2440 | 00001008 | 83C608                    | 	add	si, 8
  2441 | 0000100B | 8B04                      | 	mov	ax, word [si]
  2442 | 0000100D | 8946FC                    | 	mov	word [bp-4], ax
  2443 |          |                           | L_yakc_81:
  2444 | 00001010 | 8B76FC                    | 	mov	si, word [bp-4]
  2445 | 00001013 | 83C604                    | 	add	si, 4
  2446 | 00001016 | 8B7EFE                    | 	mov	di, word [bp-2]
  2447 | 00001019 | 83C704                    | 	add	di, 4
  2448 | 0000101C | 8B05                      | 	mov	ax, word [di]
  2449 | 0000101E | 3B04                      | 	cmp	ax, word [si]
  2450 | 00001020 | 7FE3                      | 	jg	L_yakc_80
  2451 |          |                           | L_yakc_82:
  2452 |          |                           | 	; >>>>> Line:	228
  2453 |          |                           | 	; >>>>> if(tempReady->prev == 0){ 
  2454 | 00001022 | 8B76FC                    | 	mov	si, word [bp-4]
  2455 | 00001025 | 83C60A                    | 	add	si, 10
  2456 | 00001028 | 8B04                      | 	mov	ax, word [si]
  2457 | 0000102A | 85C0                      | 	test	ax, ax
  2458 | 0000102C | 7508                      | 	jne	L_yakc_83
  2459 |          |                           | 	; >>>>> Line:	229
  2460 |          |                           | 	; >>>>> YKRdyList = tempDelay; 
  2461 | 0000102E | 8B46FE                    | 	mov	ax, word [bp-2]
  2462 | 00001031 | A3[B619]                  | 	mov	word [YKRdyList], ax
  2463 | 00001034 | EB10                      | 	jmp	L_yakc_84
  2464 |          |                           | L_yakc_83:
  2465 |          |                           | 	; >>>>> Line:	232
  2466 |          |                           | 	; >>>>> tempReady->prev->next = tempDelay; 
  2467 | 00001036 | 8B76FC                    | 	mov	si, word [bp-4]
  2468 | 00001039 | 83C60A                    | 	add	si, 10
  2469 | 0000103C | 8B34                      | 	mov	si, word [si]
  2470 | 0000103E | 83C608                    | 	add	si, 8
  2471 | 00001041 | 8B46FE                    | 	mov	ax, word [bp-2]
  2472 | 00001044 | 8904                      | 	mov	word [si], ax
  2473 |          |                           | L_yakc_84:
  2474 |          |                           | 	; >>>>> Line:	235
  2475 |          |                           | 	; >>>>> tempDelay->prev = tempReady->prev; 
  2476 | 00001046 | 8B76FC                    | 	mov	si, word [bp-4]
  2477 | 00001049 | 83C60A                    | 	add	si, 10
  2478 | 0000104C | 8B7EFE                    | 	mov	di, word [bp-2]
  2479 | 0000104F | 83C70A                    | 	add	di, 10
  2480 | 00001052 | 8B04                      | 	mov	ax, word [si]
  2481 | 00001054 | 8905                      | 	mov	word [di], ax
  2482 |          |                           | 	; >>>>> Line:	236
  2483 |          |                           | 	; >>>>> tempDelay->next = tempReady; 
  2484 | 00001056 | 8B76FE                    | 	mov	si, word [bp-2]
  2485 | 00001059 | 83C608                    | 	add	si, 8
  2486 | 0000105C | 8B46FC                    | 	mov	ax, word [bp-4]
  2487 | 0000105F | 8904                      | 	mov	word [si], ax
  2488 |          |                           | 	; >>>>> Line:	237
  2489 |          |                           | 	; >>>>> tempReady->prev = tempDelay; 
  2490 | 00001061 | 8B76FC                    | 	mov	si, word [bp-4]
  2491 | 00001064 | 83C60A                    | 	add	si, 10
  2492 | 00001067 | 8B46FE                    | 	mov	ax, word [bp-2]
  2493 | 0000106A | 8904                      | 	mov	word [si], ax
  2494 |          |                           | L_yakc_76:
  2495 |          |                           | 	; >>>>> Line:	239
  2496 |          |                           | 	; >>>>> tempDelay = tempNext; 
  2497 | 0000106C | 8B46FA                    | 	mov	ax, word [bp-6]
  2498 | 0000106F | 8946FE                    | 	mov	word [bp-2], ax
  2499 |          |                           | L_yakc_74:
  2500 | 00001072 | 8B46FE                    | 	mov	ax, word [bp-2]
  2501 | 00001075 | 85C0                      | 	test	ax, ax
  2502 | 00001077 | 7403E908FF                | 	jne	L_yakc_73
  2503 |          |                           | L_yakc_75:
  2504 |          |                           | 	; >>>>> Line:	241
  2505 |          |                           | 	; >>>>> YKExitMutex(); 
  2506 | 0000107C | E8A70C                    | 	call	YKExitMutex
  2507 | 0000107F | 89EC                      | 	mov	sp, bp
  2508 | 00001081 | 5D                        | 	pop	bp
  2509 | 00001082 | C3                        | 	ret
  2510 |          |                           | L_yakc_71:
  2511 | 00001083 | 55                        | 	push	bp
  2512 | 00001084 | 89E5                      | 	mov	bp, sp
  2513 | 00001086 | 83EC06                    | 	sub	sp, 6
  2514 | 00001089 | E9E5FE                    | 	jmp	L_yakc_72
  2515 |          |                           | 	ALIGN	2
  2516 |          |                           | YKSemCreate:
  2517 |          |                           | 	; >>>>> Line:	245
  2518 |          |                           | 	; >>>>> YKSEM* YKSemCreate(int initialValue){ 
  2519 | 0000108C | EB6E                      | 	jmp	L_yakc_86
  2520 |          |                           | L_yakc_87:
  2521 |          |                           | 	; >>>>> Line:	247
  2522 |          |                           | 	; >>>>> YKEnterMutex(); 
  2523 | 0000108E | E8930C                    | 	call	YKEnterMutex
  2524 |          |                           | 	; >>>>> Line:	248
  2525 |          |                           | 	; >>>>> for (i = 0; YKSemArray[i].active; i++){}; 
  2526 | 00001091 | C746FE0000                | 	mov	word [bp-2], 0
  2527 | 00001096 | EB03                      | 	jmp	L_yakc_89
  2528 |          |                           | L_yakc_88:
  2529 |          |                           | L_yakc_91:
  2530 |          |                           | 	; >>>>> Line:	248
  2531 |          |                           | 	; >>>>> for (i = 0; YKSemArray[i].active; i++){}; 
  2532 | 00001098 | FF46FE                    | 	inc	word [bp-2]
  2533 |          |                           | L_yakc_89:
  2534 | 0000109B | 8B46FE                    | 	mov	ax, word [bp-2]
  2535 | 0000109E | B90600                    | 	mov	cx, 6
  2536 | 000010A1 | F7E9                      | 	imul	cx
  2537 | 000010A3 | 05[9C1C]                  | 	add	ax, YKSemArray
  2538 | 000010A6 | 89C6                      | 	mov	si, ax
  2539 | 000010A8 | 83C602                    | 	add	si, 2
  2540 | 000010AB | 8B04                      | 	mov	ax, word [si]
  2541 | 000010AD | 85C0                      | 	test	ax, ax
  2542 | 000010AF | 75E7                      | 	jne	L_yakc_88
  2543 |          |                           | L_yakc_90:
  2544 |          |                           | 	; >>>>> Line:	250
  2545 |          |                           | 	; >>>>> YKSemArray[i].active = 1; 
  2546 | 000010B1 | 8B46FE                    | 	mov	ax, word [bp-2]
  2547 | 000010B4 | B90600                    | 	mov	cx, 6
  2548 | 000010B7 | F7E9                      | 	imul	cx
  2549 | 000010B9 | 05[9C1C]                  | 	add	ax, YKSemArray
  2550 | 000010BC | 89C6                      | 	mov	si, ax
  2551 | 000010BE | 83C602                    | 	add	si, 2
  2552 | 000010C1 | C7040100                  | 	mov	word [si], 1
  2553 |          |                           | 	; >>>>> Line:	251
  2554 |          |                           | 	; >>>>> YKSemArray[i].val = initialValue; 
  2555 | 000010C5 | 8B46FE                    | 	mov	ax, word [bp-2]
  2556 | 000010C8 | B90600                    | 	mov	cx, 6
  2557 | 000010CB | F7E9                      | 	imul	cx
  2558 | 000010CD | 89C6                      | 	mov	si, ax
  2559 | 000010CF | 81C6[9C1C]                | 	add	si, YKSemArray
  2560 | 000010D3 | 8B4604                    | 	mov	ax, word [bp+4]
  2561 | 000010D6 | 8904                      | 	mov	word [si], ax
  2562 |          |                           | 	; >>>>> Line:	252
  2563 |          |                           | 	; >>>>> YKSemArray[i].id = i; 
  2564 | 000010D8 | 8B46FE                    | 	mov	ax, word [bp-2]
  2565 | 000010DB | B90600                    | 	mov	cx, 6
  2566 | 000010DE | F7E9                      | 	imul	cx
  2567 | 000010E0 | 05[9C1C]                  | 	add	ax, YKSemArray
  2568 | 000010E3 | 89C6                      | 	mov	si, ax
  2569 | 000010E5 | 83C604                    | 	add	si, 4
  2570 | 000010E8 | 8B46FE                    | 	mov	ax, word [bp-2]
  2571 | 000010EB | 8904                      | 	mov	word [si], ax
  2572 |          |                           | 	; >>>>> Line:	254
  2573 |          |                           | 	; >>>>> return &(YKSemArray[i]); 
  2574 | 000010ED | 8B46FE                    | 	mov	ax, word [bp-2]
  2575 | 000010F0 | B90600                    | 	mov	cx, 6
  2576 | 000010F3 | F7E9                      | 	imul	cx
  2577 | 000010F5 | 05[9C1C]                  | 	add	ax, YKSemArray
  2578 |          |                           | L_yakc_92:
  2579 | 000010F8 | 89EC                      | 	mov	sp, bp
  2580 | 000010FA | 5D                        | 	pop	bp
  2581 | 000010FB | C3                        | 	ret
  2582 |          |                           | L_yakc_86:
  2583 | 000010FC | 55                        | 	push	bp
  2584 | 000010FD | 89E5                      | 	mov	bp, sp
  2585 | 000010FF | 51                        | 	push	cx
  2586 | 00001100 | EB8C                      | 	jmp	L_yakc_87
  2587 |          |                           | 	ALIGN	2
  2588 |          |                           | YKSemPend:
  2589 |          |                           | 	; >>>>> Line:	257
  2590 |          |                           | 	; >>>>> void YKSemPend(YKSEM *semaphore){ 
  2591 | 00001102 | E98E00                    | 	jmp	L_yakc_94
  2592 |          |                           | L_yakc_95:
  2593 |          |                           | 	; >>>>> Line:	260
  2594 |          |                           | 	; >>>>> YKEnterMutex(); 
  2595 | 00001105 | E81C0C                    | 	call	YKEnterMutex
  2596 |          |                           | 	; >>>>> Line:	261
  2597 |          |                           | 	; >>>>> semaphore->val = semaphore->val - 1; 
  2598 | 00001108 | 8B7604                    | 	mov	si, word [bp+4]
  2599 | 0000110B | 8B04                      | 	mov	ax, word [si]
  2600 | 0000110D | 48                        | 	dec	ax
  2601 | 0000110E | 8904                      | 	mov	word [si], ax
  2602 |          |                           | 	; >>>>> Line:	262
  2603 |          |                           | 	; >>>>> YKExitMutex(); 
  2604 | 00001110 | E8130C                    | 	call	YKExitMutex
  2605 |          |                           | 	; >>>>> Line:	264
  2606 |          |                           | 	; >>>>> if (semaphore->val >= 0){ return; } 
  2607 | 00001113 | 8B7604                    | 	mov	si, word [bp+4]
  2608 | 00001116 | 833C00                    | 	cmp	word [si], 0
  2609 | 00001119 | 7C02                      | 	jl	L_yakc_96
  2610 |          |                           | 	; >>>>> Line:	264
  2611 |          |                           | 	; >>>>> if (semaphore->val >= 0){ return; } 
  2612 | 0000111B | EB72                      | 	jmp	L_yakc_97
  2613 |          |                           | L_yakc_96:
  2614 |          |                           | 	; >>>>> Line:	266
  2615 |          |                           | 	; >>>>> YKEnterMutex(); 
  2616 | 0000111D | E8040C                    | 	call	YKEnterMutex
  2617 |          |                           | 	; >>>>> Line:	267
  2618 |          |                           | 	; >>>>> readyTask = YKRdyList; 
  2619 | 00001120 | A1[B619]                  | 	mov	ax, word [YKRdyList]
  2620 | 00001123 | 8946FE                    | 	mov	word [bp-2], ax
  2621 |          |                           | 	; >>>>> Line:	268
  2622 |          |                           | 	; >>>>> YKRdyList = readyTask->next; 
  2623 | 00001126 | 8B76FE                    | 	mov	si, word [bp-2]
  2624 | 00001129 | 83C608                    | 	add	si, 8
  2625 | 0000112C | 8B04                      | 	mov	ax, word [si]
  2626 | 0000112E | A3[B619]                  | 	mov	word [YKRdyList], ax
  2627 |          |                           | 	; >>>>> Line:	269
  2628 |          |                           | 	; >>>>> readyTask->next->prev = 0; 
  2629 | 00001131 | 8B76FE                    | 	mov	si, word [bp-2]
  2630 | 00001134 | 83C608                    | 	add	si, 8
  2631 | 00001137 | 8B34                      | 	mov	si, word [si]
  2632 | 00001139 | 83C60A                    | 	add	si, 10
  2633 | 0000113C | C7040000                  | 	mov	word [si], 0
  2634 |          |                           | 	; >>>>> Line:	270
  2635 |          |                           | 	; >>>>> readyTask->next = YKSemWaitList; 
  2636 | 00001140 | 8B76FE                    | 	mov	si, word [bp-2]
  2637 | 00001143 | 83C608                    | 	add	si, 8
  2638 | 00001146 | A1[BA19]                  | 	mov	ax, word [YKSemWaitList]
  2639 | 00001149 | 8904                      | 	mov	word [si], ax
  2640 |          |                           | 	; >>>>> Line:	271
  2641 |          |                           | 	; >>>>> YKSemWaitList = rea 
  2642 | 0000114B | 8B46FE                    | 	mov	ax, word [bp-2]
  2643 | 0000114E | A3[BA19]                  | 	mov	word [YKSemWaitList], ax
  2644 |          |                           | 	; >>>>> Line:	272
  2645 |          |                           | 	; >>>>> readyTask->prev = 0; 
  2646 | 00001151 | 8B76FE                    | 	mov	si, word [bp-2]
  2647 | 00001154 | 83C60A                    | 	add	si, 10
  2648 | 00001157 | C7040000                  | 	mov	word [si], 0
  2649 |          |                           | 	; >>>>> Line:	274
  2650 |          |                           | 	; >>>>> if(readyTask->next != 0){ 
  2651 | 0000115B | 8B76FE                    | 	mov	si, word [bp-2]
  2652 | 0000115E | 83C608                    | 	add	si, 8
  2653 | 00001161 | 8B04                      | 	mov	ax, word [si]
  2654 | 00001163 | 85C0                      | 	test	ax, ax
  2655 | 00001165 | 7410                      | 	je	L_yakc_98
  2656 |          |                           | 	; >>>>> Line:	275
  2657 |          |                           | 	; >>>>> readyTask->next->prev = readyTask; 
  2658 | 00001167 | 8B76FE                    | 	mov	si, word [bp-2]
  2659 | 0000116A | 83C608                    | 	add	si, 8
  2660 | 0000116D | 8B34                      | 	mov	si, word [si]
  2661 | 0000116F | 83C60A                    | 	add	si, 10
  2662 | 00001172 | 8B46FE                    | 	mov	ax, word [bp-2]
  2663 | 00001175 | 8904                      | 	mov	word [si], ax
  2664 |          |                           | L_yakc_98:
  2665 |          |                           | 	; >>>>> Line:	278
  2666 |          |                           | 	; >>>>> readyTask->semWait = semaphore; 
  2667 | 00001177 | 8B76FE                    | 	mov	si, word [bp-2]
  2668 | 0000117A | 83C60C                    | 	add	si, 12
  2669 | 0000117D | 8B4604                    | 	mov	ax, word [bp+4]
  2670 | 00001180 | 8904                      | 	mov	word [si], ax
  2671 |          |                           | 	; >>>>> Line:	280
  2672 |          |                           | 	; >>>>> YKScheduler(1); 
  2673 | 00001182 | B80100                    | 	mov	ax, 1
  2674 | 00001185 | 50                        | 	push	ax
  2675 | 00001186 | E8C7FC                    | 	call	YKScheduler
  2676 | 00001189 | 83C402                    | 	add	sp, 2
  2677 |          |                           | 	; >>>>> Line:	281
  2678 |          |                           | 	; >>>>> YKExitMutex(); 
  2679 | 0000118C | E8970B                    | 	call	YKExitMutex
  2680 |          |                           | L_yakc_97:
  2681 | 0000118F | 89EC                      | 	mov	sp, bp
  2682 | 00001191 | 5D                        | 	pop	bp
  2683 | 00001192 | C3                        | 	ret
  2684 |          |                           | L_yakc_94:
  2685 | 00001193 | 55                        | 	push	bp
  2686 | 00001194 | 89E5                      | 	mov	bp, sp
  2687 | 00001196 | 51                        | 	push	cx
  2688 | 00001197 | E96BFF                    | 	jmp	L_yakc_95
  2689 |          |                           | 	ALIGN	2
  2690 |          |                           | YKSemPost:
  2691 |          |                           | 	; >>>>> Line:	285
  2692 |          |                           | 	; >>>>> void YKSemPost(YKSEM *semaphore){ 
  2693 | 0000119A | E95401                    | 	jmp	L_yakc_100
  2694 |          |                           | L_yakc_101:
  2695 |          |                           | 	; >>>>> Line:	287
  2696 |          |                           | 	; >>>>> unSuspTask = 0; 
  2697 | 0000119D | C746FC0000                | 	mov	word [bp-4], 0
  2698 |          |                           | 	; >>>>> Line:	288
  2699 |          |                           | 	; >>>>> semWaiting = YKSemWaitList; 
  2700 | 000011A2 | A1[BA19]                  | 	mov	ax, word [YKSemWaitList]
  2701 | 000011A5 | 8946FE                    | 	mov	word [bp-2], ax
  2702 |          |                           | 	; >>>>> Line:	290
  2703 |          |                           | 	; >>>>> YKEnterMutex(); 
  2704 | 000011A8 | E8790B                    | 	call	YKEnterMutex
  2705 |          |                           | 	; >>>>> Line:	291
  2706 |          |                           | 	; >>>>> semaphore->val = semaphore->val + 1; 
  2707 | 000011AB | 8B7604                    | 	mov	si, word [bp+4]
  2708 | 000011AE | 8B04                      | 	mov	ax, word [si]
  2709 | 000011B0 | 40                        | 	inc	ax
  2710 | 000011B1 | 8904                      | 	mov	word [si], ax
  2711 |          |                           | 	; >>>>> Line:	293
  2712 |          |                           | 	; >>>>> while(semWaiting != 0){ 
  2713 | 000011B3 | EB37                      | 	jmp	L_yakc_103
  2714 |          |                           | L_yakc_102:
  2715 |          |                           | 	; >>>>> Line:	294
  2716 |          |                           | 	; >>>>> if(semWaiting->semWait == semaphore){ 
  2717 | 000011B5 | 8B76FE                    | 	mov	si, word [bp-2]
  2718 | 000011B8 | 83C60C                    | 	add	si, 12
  2719 | 000011BB | 8B4604                    | 	mov	ax, word [bp+4]
  2720 | 000011BE | 3B04                      | 	cmp	ax, word [si]
  2721 | 000011C0 | 751F                      | 	jne	L_yakc_105
  2722 |          |                           | 	; >>>>> Line:	295
  2723 |          |                           | 	; >>>>> if((unSuspTask == 0) || (semWaiting->priority < unSuspTask->priority)){ 
  2724 | 000011C2 | 8B46FC                    | 	mov	ax, word [bp-4]
  2725 | 000011C5 | 85C0                      | 	test	ax, ax
  2726 | 000011C7 | 7412                      | 	je	L_yakc_107
  2727 | 000011C9 | 8B76FE                    | 	mov	si, word [bp-2]
  2728 | 000011CC | 83C604                    | 	add	si, 4
  2729 | 000011CF | 8B7EFC                    | 	mov	di, word [bp-4]
  2730 | 000011D2 | 83C704                    | 	add	di, 4
  2731 | 000011D5 | 8B05                      | 	mov	ax, word [di]
  2732 | 000011D7 | 3B04                      | 	cmp	ax, word [si]
  2733 | 000011D9 | 7E06                      | 	jle	L_yakc_106
  2734 |          |                           | L_yakc_107:
  2735 |          |                           | 	; >>>>> Line:	296
  2736 |          |                           | 	; >>>>> unSuspTask = semWaiting; 
  2737 | 000011DB | 8B46FE                    | 	mov	ax, word [bp-2]
  2738 | 000011DE | 8946FC                    | 	mov	word [bp-4], ax
  2739 |          |                           | L_yakc_106:
  2740 |          |                           | L_yakc_105:
  2741 |          |                           | 	; >>>>> Line:	299
  2742 |          |                           | 	; >>>>> semWaiting = semWaiting->next; 
  2743 | 000011E1 | 8B76FE                    | 	mov	si, word [bp-2]
  2744 | 000011E4 | 83C608                    | 	add	si, 8
  2745 | 000011E7 | 8B04                      | 	mov	ax, word [si]
  2746 | 000011E9 | 8946FE                    | 	mov	word [bp-2], ax
  2747 |          |                           | L_yakc_103:
  2748 | 000011EC | 8B46FE                    | 	mov	ax, word [bp-2]
  2749 | 000011EF | 85C0                      | 	test	ax, ax
  2750 | 000011F1 | 75C2                      | 	jne	L_yakc_102
  2751 |          |                           | L_yakc_104:
  2752 |          |                           | 	; >>>>> Line:	302
  2753 |          |                           | 	; >>>>> if(unSuspTask == 0){ 
  2754 | 000011F3 | 8B46FC                    | 	mov	ax, word [bp-4]
  2755 | 000011F6 | 85C0                      | 	test	ax, ax
  2756 | 000011F8 | 7517                      | 	jne	L_yakc_108
  2757 |          |                           | 	; >>>>> Line:	303
  2758 |          |                           | 	; >>>>> if(YKISRDepth == 0){ 
  2759 | 000011FA | A1[9A1C]                  | 	mov	ax, word [YKISRDepth]
  2760 | 000011FD | 85C0                      | 	test	ax, ax
  2761 | 000011FF | 750A                      | 	jne	L_yakc_109
  2762 |          |                           | 	; >>>>> Line:	304
  2763 |          |                           | 	; >>>>> YKScheduler(1); 
  2764 | 00001201 | B80100                    | 	mov	ax, 1
  2765 | 00001204 | 50                        | 	push	ax
  2766 | 00001205 | E848FC                    | 	call	YKScheduler
  2767 | 00001208 | 83C402                    | 	add	sp, 2
  2768 |          |                           | L_yakc_109:
  2769 |          |                           | 	; >>>>> Line:	306
  2770 |          |                           | 	; >>>>> YKExitMutex(); 
  2771 | 0000120B | E8180B                    | 	call	YKExitMutex
  2772 |          |                           | 	; >>>>> Line:	307
  2773 |          |                           | 	; >>>>> return; 
  2774 | 0000120E | E9DC00                    | 	jmp	L_yakc_110
  2775 |          |                           | L_yakc_108:
  2776 |          |                           | 	; >>>>> Line:	310
  2777 |          |                           | 	; >>>>> if(unSuspTask->prev == 0){ 
  2778 | 00001211 | 8B76FC                    | 	mov	si, word [bp-4]
  2779 | 00001214 | 83C60A                    | 	add	si, 10
  2780 | 00001217 | 8B04                      | 	mov	ax, word [si]
  2781 | 00001219 | 85C0                      | 	test	ax, ax
  2782 | 0000121B | 750D                      | 	jne	L_yakc_111
  2783 |          |                           | 	; >>>>> Line:	311
  2784 |          |                           | 	; >>>>> YKSemWaitList = unSuspTask->next; 
  2785 | 0000121D | 8B76FC                    | 	mov	si, word [bp-4]
  2786 | 00001220 | 83C608                    | 	add	si, 8
  2787 | 00001223 | 8B04                      | 	mov	ax, word [si]
  2788 | 00001225 | A3[BA19]                  | 	mov	word [YKSemWaitList], ax
  2789 | 00001228 | EB15                      | 	jmp	L_yakc_112
  2790 |          |                           | L_yakc_111:
  2791 |          |                           | 	; >>>>> Line:	314
  2792 |          |                           | 	; >>>>> unSuspTask->prev->next = unSuspTask->next; 
  2793 | 0000122A | 8B76FC                    | 	mov	si, word [bp-4]
  2794 | 0000122D | 83C608                    | 	add	si, 8
  2795 | 00001230 | 8B7EFC                    | 	mov	di, word [bp-4]
  2796 | 00001233 | 83C70A                    | 	add	di, 10
  2797 | 00001236 | 8B3D                      | 	mov	di, word [di]
  2798 | 00001238 | 83C708                    | 	add	di, 8
  2799 | 0000123B | 8B04                      | 	mov	ax, word [si]
  2800 | 0000123D | 8905                      | 	mov	word [di], ax
  2801 |          |                           | L_yakc_112:
  2802 |          |                           | 	; >>>>> Line:	317
  2803 |          |                           | 	; >>>>> if (unSuspTask->next != 0){ 
  2804 | 0000123F | 8B76FC                    | 	mov	si, word [bp-4]
  2805 | 00001242 | 83C608                    | 	add	si, 8
  2806 | 00001245 | 8B04                      | 	mov	ax, word [si]
  2807 | 00001247 | 85C0                      | 	test	ax, ax
  2808 | 00001249 | 7415                      | 	je	L_yakc_113
  2809 |          |                           | 	; >>>>> Line:	318
  2810 |          |                           | 	; >>>>> unSuspTask->next->prev = unSuspTask->prev; 
  2811 | 0000124B | 8B76FC                    | 	mov	si, word [bp-4]
  2812 | 0000124E | 83C60A                    | 	add	si, 10
  2813 | 00001251 | 8B7EFC                    | 	mov	di, word [bp-4]
  2814 | 00001254 | 83C708                    | 	add	di, 8
  2815 | 00001257 | 8B3D                      | 	mov	di, word [di]
  2816 | 00001259 | 83C70A                    | 	add	di, 10
  2817 | 0000125C | 8B04                      | 	mov	ax, word [si]
  2818 | 0000125E | 8905                      | 	mov	word [di], ax
  2819 |          |                           | L_yakc_113:
  2820 |          |                           | 	; >>>>> Line:	322
  2821 |          |                           | 	; >>>>> readyTask = YKRdyList; 
  2822 | 00001260 | A1[B619]                  | 	mov	ax, word [YKRdyList]
  2823 | 00001263 | 8946FA                    | 	mov	word [bp-6], ax
  2824 |          |                           | 	; >>>>> Line:	323
  2825 |          |                           | 	; >>>>> while (readyTask->priority < unSuspTask->priority){ 
  2826 | 00001266 | EB0B                      | 	jmp	L_yakc_115
  2827 |          |                           | L_yakc_114:
  2828 |          |                           | 	; >>>>> Line:	324
  2829 |          |                           | 	; >>>>> queue->head = 
  2830 | 00001268 | 8B76FA                    | 	mov	si, word [bp-6]
  2831 | 0000126B | 83C608                    | 	add	si, 8
  2832 | 0000126E | 8B04                      | 	mov	ax, word [si]
  2833 | 00001270 | 8946FA                    | 	mov	word [bp-6], ax
  2834 |          |                           | L_yakc_115:
  2835 | 00001273 | 8B76FA                    | 	mov	si, word [bp-6]
  2836 | 00001276 | 83C604                    | 	add	si, 4
  2837 | 00001279 | 8B7EFC                    | 	mov	di, word [bp-4]
  2838 | 0000127C | 83C704                    | 	add	di, 4
  2839 | 0000127F | 8B05                      | 	mov	ax, word [di]
  2840 | 00001281 | 3B04                      | 	cmp	ax, word [si]
  2841 | 00001283 | 7FE3                      | 	jg	L_yakc_114
  2842 |          |                           | L_yakc_116:
  2843 |          |                           | 	; >>>>> Line:	326
  2844 |          |                           | 	; >>>>> if(readyTask->prev == 0){ 
  2845 | 00001285 | 8B76FA                    | 	mov	si, word [bp-6]
  2846 | 00001288 | 83C60A                    | 	add	si, 10
  2847 | 0000128B | 8B04                      | 	mov	ax, word [si]
  2848 | 0000128D | 85C0                      | 	test	ax, ax
  2849 | 0000128F | 7508                      | 	jne	L_yakc_117
  2850 |          |                           | 	; >>>>> Line:	327
  2851 |          |                           | 	; >>>>> YKRdyList = unSuspTask; 
  2852 | 00001291 | 8B46FC                    | 	mov	ax, word [bp-4]
  2853 | 00001294 | A3[B619]                  | 	mov	word [YKRdyList], ax
  2854 | 00001297 | EB10                      | 	jmp	L_yakc_118
  2855 |          |                           | L_yakc_117:
  2856 |          |                           | 	; >>>>> Line:	330
  2857 |          |                           | 	; >>>>> readyTask->prev->next = unSuspTask; 
  2858 | 00001299 | 8B76FA                    | 	mov	si, word [bp-6]
  2859 | 0000129C | 83C60A                    | 	add	si, 10
  2860 | 0000129F | 8B34                      | 	mov	si, word [si]
  2861 | 000012A1 | 83C608                    | 	add	si, 8
  2862 | 000012A4 | 8B46FC                    | 	mov	ax, word [bp-4]
  2863 | 000012A7 | 8904                      | 	mov	word [si], ax
  2864 |          |                           | L_yakc_118:
  2865 |          |                           | 	; >>>>> Line:	332
  2866 |          |                           | 	; >>>>> unSuspTask->prev = readyTask->prev; 
  2867 | 000012A9 | 8B76FA                    | 	mov	si, word [bp-6]
  2868 | 000012AC | 83C60A                    | 	add	si, 10
  2869 | 000012AF | 8B7EFC                    | 	mov	di, word [bp-4]
  2870 | 000012B2 | 83C70A                    | 	add	di, 10
  2871 | 000012B5 | 8B04                      | 	mov	ax, word [si]
  2872 | 000012B7 | 8905                      | 	mov	word [di], ax
  2873 |          |                           | 	; >>>>> Line:	333
  2874 |          |                           | 	; >>>>> unSuspTask->next = readyTask; 
  2875 | 000012B9 | 8B76FC                    | 	mov	si, word [bp-4]
  2876 | 000012BC | 83C608                    | 	add	si, 8
  2877 | 000012BF | 8B46FA                    | 	mov	ax, word [bp-6]
  2878 | 000012C2 | 8904                      | 	mov	word [si], ax
  2879 |          |                           | 	; >>>>> Line:	334
  2880 |          |                           | 	; >>>>> readyTask->prev = unSuspTask; 
  2881 | 000012C4 | 8B76FA                    | 	mov	si, word [bp-6]
  2882 | 000012C7 | 83C60A                    | 	add	si, 10
  2883 | 000012CA | 8B46FC                    | 	mov	ax, word [bp-4]
  2884 | 000012CD | 8904                      | 	mov	word [si], ax
  2885 |          |                           | 	; >>>>> Line:	336
  2886 |          |                           | 	; >>>>> unSuspTask->semWait = 0; 
  2887 | 000012CF | 8B76FC                    | 	mov	si, word [bp-4]
  2888 | 000012D2 | 83C60C                    | 	add	si, 12
  2889 | 000012D5 | C7040000                  | 	mov	word [si], 0
  2890 |          |                           | 	; >>>>> Line:	338
  2891 |          |                           | 	; >>>>> if( YKISRDepth == 0){ 
  2892 | 000012D9 | A1[9A1C]                  | 	mov	ax, word [YKISRDepth]
  2893 | 000012DC | 85C0                      | 	test	ax, ax
  2894 | 000012DE | 750A                      | 	jne	L_yakc_119
  2895 |          |                           | 	; >>>>> Line:	339
  2896 |          |                           | 	; >>>>> YKScheduler(1); 
  2897 | 000012E0 | B80100                    | 	mov	ax, 1
  2898 | 000012E3 | 50                        | 	push	ax
  2899 | 000012E4 | E869FB                    | 	call	YKScheduler
  2900 | 000012E7 | 83C402                    | 	add	sp, 2
  2901 |          |                           | L_yakc_119:
  2902 |          |                           | 	; >>>>> Line:	341
  2903 |          |                           | 	; >>>>> YKExitMutex(); 
  2904 | 000012EA | E8390A                    | 	call	YKExitMutex
  2905 |          |                           | L_yakc_110:
  2906 |          |                           | 	; >>>>> Line:	342
  2907 |          |                           | 	; >>>>> return; 
  2908 | 000012ED | 89EC                      | 	mov	sp, bp
  2909 | 000012EF | 5D                        | 	pop	bp
  2910 | 000012F0 | C3                        | 	ret
  2911 |          |                           | L_yakc_100:
  2912 | 000012F1 | 55                        | 	push	bp
  2913 | 000012F2 | 89E5                      | 	mov	bp, sp
  2914 | 000012F4 | 83EC06                    | 	sub	sp, 6
  2915 | 000012F7 | E9A3FE                    | 	jmp	L_yakc_101
  2916 |          |                           | 	ALIGN	2
  2917 |          |                           | queueInsert:
  2918 |          |                           | 	; >>>>> Line:	345
  2919 |          |                           | 	; >>>>> void queueInsert(YKQ* queue, void* msg){ 
  2920 | 000012FA | EB40                      | 	jmp	L_yakc_121
  2921 |          |                           | L_yakc_122:
  2922 |          |                           | 	; >>>>> Line:	346
  2923 |          |                           | 	; >>>>> queue->base_addr[queue->head] = msg; 
  2924 | 000012FC | 8B7604                    | 	mov	si, word [bp+4]
  2925 | 000012FF | 83C606                    | 	add	si, 6
  2926 | 00001302 | 8B04                      | 	mov	ax, word [si]
  2927 | 00001304 | D1E0                      | 	shl	ax, 1
  2928 | 00001306 | 89C6                      | 	mov	si, ax
  2929 | 00001308 | 8B7E04                    | 	mov	di, word [bp+4]
  2930 | 0000130B | 83C704                    | 	add	di, 4
  2931 | 0000130E | 0335                      | 	add	si, word [di]
  2932 | 00001310 | 8B4606                    | 	mov	ax, word [bp+6]
  2933 | 00001313 | 8904                      | 	mov	word [si], ax
  2934 |          |                           | 	; >>>>> Line:	347
  2935 |          |                           | 	; >>>>> if(queue->head < queue->size){ 
  2936 | 00001315 | 8B7604                    | 	mov	si, word [bp+4]
  2937 | 00001318 | 83C606                    | 	add	si, 6
  2938 | 0000131B | 8B7E04                    | 	mov	di, word [bp+4]
  2939 | 0000131E | 8B05                      | 	mov	ax, word [di]
  2940 | 00001320 | 3B04                      | 	cmp	ax, word [si]
  2941 | 00001322 | 7E0A                      | 	jle	L_yakc_123
  2942 |          |                           | 	; >>>>> Line:	348
  2943 |          |                           | 	; >>>>> queue->head += 1; 
  2944 | 00001324 | 8B7604                    | 	mov	si, word [bp+4]
  2945 | 00001327 | 83C606                    | 	add	si, 6
  2946 | 0000132A | FF04                      | 	inc	word [si]
  2947 | 0000132C | EB0A                      | 	jmp	L_yakc_124
  2948 |          |                           | L_yakc_123:
  2949 |          |                           | 	; >>>>> Line:	351
  2950 |          |                           | 	; >>>>> queue->head = 
  2951 | 0000132E | 8B7604                    | 	mov	si, word [bp+4]
  2952 | 00001331 | 83C606                    | 	add	si, 6
  2953 | 00001334 | C7040000                  | 	mov	word [si], 0
  2954 |          |                           | L_yakc_124:
  2955 | 00001338 | 89EC                      | 	mov	sp, bp
  2956 | 0000133A | 5D                        | 	pop	bp
  2957 | 0000133B | C3                        | 	ret
  2958 |          |                           | L_yakc_121:
  2959 | 0000133C | 55                        | 	push	bp
  2960 | 0000133D | 89E5                      | 	mov	bp, sp
  2961 | 0000133F | EBBB                      | 	jmp	L_yakc_122
  2962 | 00001341 | 90                        | 	ALIGN	2
  2963 |          |                           | queueRemove:
  2964 |          |                           | 	; >>>>> Line:	355
  2965 |          |                           | 	; >>>>> void* queueRemove(YKQ* queue){ 
  2966 | 00001342 | EB40                      | 	jmp	L_yakc_126
  2967 |          |                           | L_yakc_127:
  2968 |          |                           | 	; >>>>> Line:	357
  2969 |          |                           | 	; >>>>> msg = *(queue->base_addr + queue->tail); 
  2970 | 00001344 | 8B7604                    | 	mov	si, word [bp+4]
  2971 | 00001347 | 83C608                    | 	add	si, 8
  2972 | 0000134A | 8B04                      | 	mov	ax, word [si]
  2973 | 0000134C | D1E0                      | 	shl	ax, 1
  2974 | 0000134E | 89C6                      | 	mov	si, ax
  2975 | 00001350 | 8B7E04                    | 	mov	di, word [bp+4]
  2976 | 00001353 | 83C704                    | 	add	di, 4
  2977 | 00001356 | 0335                      | 	add	si, word [di]
  2978 | 00001358 | 8B04                      | 	mov	ax, word [si]
  2979 | 0000135A | 8946FE                    | 	mov	word [bp-2], ax
  2980 |          |                           | 	; >>>>> Line:	358
  2981 |          |                           | 	; >>>>> if(queue->tail > 0){ 
  2982 | 0000135D | 8B7604                    | 	mov	si, word [bp+4]
  2983 | 00001360 | 83C608                    | 	add	si, 8
  2984 | 00001363 | 833C00                    | 	cmp	word [si], 0
  2985 | 00001366 | 7E0A                      | 	jle	L_yakc_128
  2986 |          |                           | 	; >>>>> Line:	359
  2987 |          |                           | 	; >>>>> queue->head -= 1; 
  2988 | 00001368 | 8B7604                    | 	mov	si, word [bp+4]
  2989 | 0000136B | 83C606                    | 	add	si, 6
  2990 | 0000136E | FF0C                      | 	dec	word [si]
  2991 | 00001370 | EB0B                      | 	jmp	L_yakc_129
  2992 |          |                           | L_yakc_128:
  2993 |          |                           | 	; >>>>> Line:	362
  2994 |          |                           | 	; >>>>> queue->head = queue->size - 1; 
  2995 | 00001372 | 8B7604                    | 	mov	si, word [bp+4]
  2996 | 00001375 | 8B04                      | 	mov	ax, word [si]
  2997 | 00001377 | 48                        | 	dec	ax
  2998 | 00001378 | 83C606                    | 	add	si, 6
  2999 | 0000137B | 8904                      | 	mov	word [si], ax
  3000 |          |                           | L_yakc_129:
  3001 |          |                           | 	; >>>>> Line:	364
  3002 |          |                           | 	; >>>>> return msg; 
  3003 | 0000137D | 8B46FE                    | 	mov	ax, word [bp-2]
  3004 |          |                           | L_yakc_130:
  3005 | 00001380 | 89EC                      | 	mov	sp, bp
  3006 | 00001382 | 5D                        | 	pop	bp
  3007 | 00001383 | C3                        | 	ret
  3008 |          |                           | L_yakc_126:
  3009 | 00001384 | 55                        | 	push	bp
  3010 | 00001385 | 89E5                      | 	mov	bp, sp
  3011 | 00001387 | 51                        | 	push	cx
  3012 | 00001388 | EBBA                      | 	jmp	L_yakc_127
  3013 |          |                           | 	ALIGN	2
  3014 |          |                           | YKQCreate:
  3015 |          |                           | 	; >>>>> Line:	367
  3016 |          |                           | 	; >>>>> YKQ *YKQCreate(void **start, unsigned size){ 
  3017 | 0000138A | E99900                    | 	jmp	L_yakc_132
  3018 |          |                           | L_yakc_133:
  3019 |          |                           | 	; >>>>> Line:	369
  3020 |          |                           | 	; >>>>> YKEnterMutex(); 
  3021 | 0000138D | E89409                    | 	call	YKEnterMutex
  3022 |          |                           | 	; >>>>> Line:	370
  3023 |          |                           | 	; >>>>> for (i = 0; YKQueueArray[i].base_addr; i++){}; 
  3024 | 00001390 | C746FE0000                | 	mov	word [bp-2], 0
  3025 | 00001395 | EB03                      | 	jmp	L_yakc_135
  3026 |          |                           | L_yakc_134:
  3027 |          |                           | L_yakc_137:
  3028 |          |                           | 	; >>>>> Line:	370
  3029 |          |                           | 	; >>>>> for (i = 0; YKQueueArray[i].base_addr; i++){}; 
  3030 | 00001397 | FF46FE                    | 	inc	word [bp-2]
  3031 |          |                           | L_yakc_135:
  3032 | 0000139A | 8B46FE                    | 	mov	ax, word [bp-2]
  3033 | 0000139D | B90A00                    | 	mov	cx, 10
  3034 | 000013A0 | F7E9                      | 	imul	cx
  3035 | 000013A2 | 05[D81C]                  | 	add	ax, YKQueueArray
  3036 | 000013A5 | 89C6                      | 	mov	si, ax
  3037 | 000013A7 | 83C604                    | 	add	si, 4
  3038 | 000013AA | 8B04                      | 	mov	ax, word [si]
  3039 | 000013AC | 85C0                      | 	test	ax, ax
  3040 | 000013AE | 75E7                      | 	jne	L_yakc_134
  3041 |          |                           | L_yakc_136:
  3042 |          |                           | 	; >>>>> Line:	372
  3043 |          |                           | 	; >>>>> YKQueueArray[i].base_addr = start; 
  3044 | 000013B0 | 8B46FE                    | 	mov	ax, word [bp-2]
  3045 | 000013B3 | B90A00                    | 	mov	cx, 10
  3046 | 000013B6 | F7E9                      | 	imul	cx
  3047 | 000013B8 | 05[D81C]                  | 	add	ax, YKQueueArray
  3048 | 000013BB | 89C6                      | 	mov	si, ax
  3049 | 000013BD | 83C604                    | 	add	si, 4
  3050 | 000013C0 | 8B4604                    | 	mov	ax, word [bp+4]
  3051 | 000013C3 | 8904                      | 	mov	word [si], ax
  3052 |          |                           | 	; >>>>> Line:	373
  3053 |          |                           | 	; >>>>> YKQueueArray[i].cur_length = 0; 
  3054 | 000013C5 | 8B46FE                    | 	mov	ax, word [bp-2]
  3055 | 000013C8 | B90A00                    | 	mov	cx, 10
  3056 | 000013CB | F7E9                      | 	imul	cx
  3057 | 000013CD | 05[D81C]                  | 	add	ax, YKQueueArray
  3058 | 000013D0 | 89C6                      | 	mov	si, ax
  3059 | 000013D2 | 83C602                    | 	add	si, 2
  3060 | 000013D5 | C7040000                  | 	mov	word [si], 0
  3061 |          |                           | 	; >>>>> Line:	374
  3062 |          |                           | 	; >>>>> YKQueueArray[i].size = size; 
  3063 | 000013D9 | 8B46FE                    | 	mov	ax, word [bp-2]
  3064 | 000013DC | B90A00                    | 	mov	cx, 10
  3065 | 000013DF | F7E9                      | 	imul	cx
  3066 | 000013E1 | 89C6                      | 	mov	si, ax
  3067 | 000013E3 | 81C6[D81C]                | 	add	si, YKQueueArray
  3068 | 000013E7 | 8B4606                    | 	mov	ax, word [bp+6]
  3069 | 000013EA | 8904                      | 	mov	word [si], ax
  3070 |          |                           | 	; >>>>> Line:	375
  3071 |          |                           | 	; >>>>> YKQueueArray[i].tail = 0; 
  3072 | 000013EC | 8B46FE                    | 	mov	ax, word [bp-2]
  3073 | 000013EF | B90A00                    | 	mov	cx, 10
  3074 | 000013F2 | F7E9                      | 	imul	cx
  3075 | 000013F4 | 05[D81C]                  | 	add	ax, YKQueueArray
  3076 | 000013F7 | 89C6                      | 	mov	si, ax
  3077 | 000013F9 | 83C608                    | 	add	si, 8
  3078 | 000013FC | C7040000                  | 	mov	word [si], 0
  3079 |          |                           | 	; >>>>> Line:	376
  3080 |          |                           | 	; >>>>> YKQueueArray[i].head = 0; 
  3081 | 00001400 | 8B46FE                    | 	mov	ax, word [bp-2]
  3082 | 00001403 | B90A00                    | 	mov	cx, 10
  3083 | 00001406 | F7E9                      | 	imul	cx
  3084 | 00001408 | 05[D81C]                  | 	add	ax, YKQueueArray
  3085 | 0000140B | 89C6                      | 	mov	si, ax
  3086 | 0000140D | 83C606                    | 	add	si, 6
  3087 | 00001410 | C7040000                  | 	mov	word [si], 0
  3088 |          |                           | 	; >>>>> Line:	377
  3089 |          |                           | 	; >>>>> YKExitMutex(); 
  3090 | 00001414 | E80F09                    | 	call	YKExitMutex
  3091 |          |                           | 	; >>>>> Line:	378
  3092 |          |                           | 	; >>>>> ur_le 
  3093 | 00001417 | 8B46FE                    | 	mov	ax, word [bp-2]
  3094 | 0000141A | B90A00                    | 	mov	cx, 10
  3095 | 0000141D | F7E9                      | 	imul	cx
  3096 | 0000141F | 05[D81C]                  | 	add	ax, YKQueueArray
  3097 |          |                           | L_yakc_138:
  3098 | 00001422 | 89EC                      | 	mov	sp, bp
  3099 | 00001424 | 5D                        | 	pop	bp
  3100 | 00001425 | C3                        | 	ret
  3101 |          |                           | L_yakc_132:
  3102 | 00001426 | 55                        | 	push	bp
  3103 | 00001427 | 89E5                      | 	mov	bp, sp
  3104 | 00001429 | 51                        | 	push	cx
  3105 | 0000142A | E960FF                    | 	jmp	L_yakc_133
  3106 | 0000142D | 90                        | 	ALIGN	2
  3107 |          |                           | YKQPend:
  3108 |          |                           | 	; >>>>> Line:	382
  3109 |          |                           | 	; >>>>> void *YKQPend(YKQ *queue){ 
  3110 | 0000142E | E9DB00                    | 	jmp	L_yakc_140
  3111 |          |                           | L_yakc_141:
  3112 |          |                           | 	; >>>>> Line:	385
  3113 |          |                           | 	; >>>>> YKEnterMutex(); 
  3114 | 00001431 | E8F008                    | 	call	YKEnterMutex
  3115 |          |                           | 	; >>>>> Line:	386
  3116 |          |                           | 	; >>>>> if(queue->cur_length == 0){ 
  3117 | 00001434 | 8B7604                    | 	mov	si, word [bp+4]
  3118 | 00001437 | 83C602                    | 	add	si, 2
  3119 | 0000143A | 8B04                      | 	mov	ax, word [si]
  3120 | 0000143C | 85C0                      | 	test	ax, ax
  3121 | 0000143E | 756C                      | 	jne	L_yakc_142
  3122 |          |                           | 	; >>>>> Line:	387
  3123 |          |                           | 	; >>>>> readyTask = YKRdyList; 
  3124 | 00001440 | A1[B619]                  | 	mov	ax, word [YKRdyList]
  3125 | 00001443 | 8946FE                    | 	mov	word [bp-2], ax
  3126 |          |                           | 	; >>>>> Line:	388
  3127 |          |                           | 	; >>>>> YKRdyList = readyTask->next; 
  3128 | 00001446 | 8B76FE                    | 	mov	si, word [bp-2]
  3129 | 00001449 | 83C608                    | 	add	si, 8
  3130 | 0000144C | 8B04                      | 	mov	ax, word [si]
  3131 | 0000144E | A3[B619]                  | 	mov	word [YKRdyList], ax
  3132 |          |                           | 	; >>>>> Line:	389
  3133 |          |                           | 	; >>>>> readyTask->next->prev = 0; 
  3134 | 00001451 | 8B76FE                    | 	mov	si, word [bp-2]
  3135 | 00001454 | 83C608                    | 	add	si, 8
  3136 | 00001457 | 8B34                      | 	mov	si, word [si]
  3137 | 00001459 | 83C60A                    | 	add	si, 10
  3138 | 0000145C | C7040000                  | 	mov	word [si], 0
  3139 |          |                           | 	; >>>>> Line:	390
  3140 |          |                           | 	; >>>>> readyTask->next = YKQWaitList; 
  3141 | 00001460 | 8B76FE                    | 	mov	si, word [bp-2]
  3142 | 00001463 | 83C608                    | 	add	si, 8
  3143 | 00001466 | A1[1E1D]                  | 	mov	ax, word [YKQWaitList]
  3144 | 00001469 | 8904                      | 	mov	word [si], ax
  3145 |          |                           | 	; >>>>> Line:	391
  3146 |          |                           | 	; >>>>> YKQWaitList = readyTask; 
  3147 | 0000146B | 8B46FE                    | 	mov	ax, word [bp-2]
  3148 | 0000146E | A3[1E1D]                  | 	mov	word [YKQWaitList], ax
  3149 |          |                           | 	; >>>>> Line:	392
  3150 |          |                           | 	; >>>>> readyTask->prev = 0; 
  3151 | 00001471 | 8B76FE                    | 	mov	si, word [bp-2]
  3152 | 00001474 | 83C60A                    | 	add	si, 10
  3153 | 00001477 | C7040000                  | 	mov	word [si], 0
  3154 |          |                           | 	; >>>>> Line:	394
  3155 |          |                           | 	; >>>>> if(readyTask->next != 0){ 
  3156 | 0000147B | 8B76FE                    | 	mov	si, word [bp-2]
  3157 | 0000147E | 83C608                    | 	add	si, 8
  3158 | 00001481 | 8B04                      | 	mov	ax, word [si]
  3159 | 00001483 | 85C0                      | 	test	ax, ax
  3160 | 00001485 | 7410                      | 	je	L_yakc_143
  3161 |          |                           | 	; >>>>> Line:	395
  3162 |          |                           | 	; >>>>> readyTask->next->prev = readyTask; 
  3163 | 00001487 | 8B76FE                    | 	mov	si, word [bp-2]
  3164 | 0000148A | 83C608                    | 	add	si, 8
  3165 | 0000148D | 8B34                      | 	mov	si, word [si]
  3166 | 0000148F | 83C60A                    | 	add	si, 10
  3167 | 00001492 | 8B46FE                    | 	mov	ax, word [bp-2]
  3168 | 00001495 | 8904                      | 	mov	word [si], ax
  3169 |          |                           | L_yakc_143:
  3170 |          |                           | 	; >>>>> Line:	398
  3171 |          |                           | 	; >>>>> readyTask->queueWait = queue; 
  3172 | 00001497 | 8B76FE                    | 	mov	si, word [bp-2]
  3173 | 0000149A | 83C60E                    | 	add	si, 14
  3174 | 0000149D | 8B4604                    | 	mov	ax, word [bp+4]
  3175 | 000014A0 | 8904                      | 	mov	word [si], ax
  3176 |          |                           | 	; >>>>> Line:	399
  3177 |          |                           | 	; >>>>> YKScheduler(1); 
  3178 | 000014A2 | B80100                    | 	mov	ax, 1
  3179 | 000014A5 | 50                        | 	push	ax
  3180 | 000014A6 | E8A7F9                    | 	call	YKScheduler
  3181 | 000014A9 | 83C402                    | 	add	sp, 2
  3182 |          |                           | L_yakc_142:
  3183 |          |                           | 	; >>>>> Line:	401
  3184 |          |                           | 	; >>>>> msg = *(queue->base_addr + queue->tail); 
  3185 | 000014AC | 8B7604                    | 	mov	si, word [bp+4]
  3186 | 000014AF | 83C608                    | 	add	si, 8
  3187 | 000014B2 | 8B04                      | 	mov	ax, word [si]
  3188 | 000014B4 | D1E0                      | 	shl	ax, 1
  3189 | 000014B6 | 89C6                      | 	mov	si, ax
  3190 | 000014B8 | 8B7E04                    | 	mov	di, word [bp+4]
  3191 | 000014BB | 83C704                    | 	add	di, 4
  3192 | 000014BE | 0335                      | 	add	si, word [di]
  3193 | 000014C0 | 8B04                      | 	mov	ax, word [si]
  3194 | 000014C2 | 8946FC                    | 	mov	word [bp-4], ax
  3195 |          |                           | 	; >>>>> Line:	402
  3196 |          |                           | 	; >>>>> queue->cur_le 
  3197 | 000014C5 | 8B7604                    | 	mov	si, word [bp+4]
  3198 | 000014C8 | 83C602                    | 	add	si, 2
  3199 | 000014CB | 8B04                      | 	mov	ax, word [si]
  3200 | 000014CD | 48                        | 	dec	ax
  3201 | 000014CE | 8B7604                    | 	mov	si, word [bp+4]
  3202 | 000014D1 | 83C602                    | 	add	si, 2
  3203 | 000014D4 | 8904                      | 	mov	word [si], ax
  3204 |          |                           | 	; >>>>> Line:	404
  3205 |          |                           | 	; >>>>> if((queue->tail + 1) < queue->size){ 
  3206 | 000014D6 | 8B7604                    | 	mov	si, word [bp+4]
  3207 | 000014D9 | 83C608                    | 	add	si, 8
  3208 | 000014DC | 8B04                      | 	mov	ax, word [si]
  3209 | 000014DE | 40                        | 	inc	ax
  3210 | 000014DF | 8B7604                    | 	mov	si, word [bp+4]
  3211 | 000014E2 | 8B14                      | 	mov	dx, word [si]
  3212 | 000014E4 | 39C2                      | 	cmp	dx, ax
  3213 | 000014E6 | 7E10                      | 	jle	L_yakc_144
  3214 |          |                           | 	; >>>>> Line:	405
  3215 |          |                           | 	; >>>>> queue->tail = queue->tail + 1; 
  3216 | 000014E8 | 83C608                    | 	add	si, 8
  3217 | 000014EB | 8B04                      | 	mov	ax, word [si]
  3218 | 000014ED | 40                        | 	inc	ax
  3219 | 000014EE | 8B7604                    | 	mov	si, word [bp+4]
  3220 | 000014F1 | 83C608                    | 	add	si, 8
  3221 | 000014F4 | 8904                      | 	mov	word [si], ax
  3222 | 000014F6 | EB0A                      | 	jmp	L_yakc_145
  3223 |          |                           | L_yakc_144:
  3224 |          |                           | 	; >>>>> Line:	408
  3225 |          |                           | 	; >>>>> queue->tail = 0; 
  3226 | 000014F8 | 8B7604                    | 	mov	si, word [bp+4]
  3227 | 000014FB | 83C608                    | 	add	si, 8
  3228 | 000014FE | C7040000                  | 	mov	word [si], 0
  3229 |          |                           | L_yakc_145:
  3230 |          |                           | 	; >>>>> Line:	411
  3231 |          |                           | 	; >>>>> YKExitMutex(); 
  3232 | 00001502 | E82108                    | 	call	YKExitMutex
  3233 |          |                           | 	; >>>>> Line:	412
  3234 |          |                           | 	; >>>>> return msg; 
  3235 | 00001505 | 8B46FC                    | 	mov	ax, word [bp-4]
  3236 |          |                           | L_yakc_146:
  3237 | 00001508 | 89EC                      | 	mov	sp, bp
  3238 | 0000150A | 5D                        | 	pop	bp
  3239 | 0000150B | C3                        | 	ret
  3240 |          |                           | L_yakc_140:
  3241 | 0000150C | 55                        | 	push	bp
  3242 | 0000150D | 89E5                      | 	mov	bp, sp
  3243 | 0000150F | 83EC04                    | 	sub	sp, 4
  3244 | 00001512 | E91CFF                    | 	jmp	L_yakc_141
  3245 | 00001515 | 90                        | 	ALIGN	2
  3246 |          |                           | YKQPost:
  3247 |          |                           | 	; >>>>> Line:	415
  3248 |          |                           | 	; >>>>> int YKQPost(YKQ *queue, void *msg){ 
  3249 | 00001516 | E9AC01                    | 	jmp	L_yakc_148
  3250 |          |                           | L_yakc_149:
  3251 |          |                           | 	; >>>>> Line:	417
  3252 |          |                           | 	; >>>>> YKEnterMutex(); 
  3253 | 00001519 | E80808                    | 	call	YKEnterMutex
  3254 |          |                           | 	; >>>>> Line:	419
  3255 |          |                           | 	; >>>>> if((queue->cur_length) == (queue->size-1)){ 
  3256 | 0000151C | 8B7604                    | 	mov	si, word [bp+4]
  3257 | 0000151F | 83C602                    | 	add	si, 2
  3258 | 00001522 | 8B7E04                    | 	mov	di, word [bp+4]
  3259 | 00001525 | 8B05                      | 	mov	ax, word [di]
  3260 | 00001527 | 48                        | 	dec	ax
  3261 | 00001528 | 3B04                      | 	cmp	ax, word [si]
  3262 | 0000152A | 7505                      | 	jne	L_yakc_150
  3263 |          |                           | 	; >>>>> Line:	420
  3264 |          |                           | 	; >>>>> return 0; 
  3265 | 0000152C | 31C0                      | 	xor	ax, ax
  3266 | 0000152E | E99001                    | 	jmp	L_yakc_151
  3267 |          |                           | L_yakc_150:
  3268 |          |                           | 	; >>>>> Line:	422
  3269 |          |                           | 	; >>>>> unWaitTask = 0; 
  3270 | 00001531 | C746FC0000                | 	mov	word [bp-4], 0
  3271 |          |                           | 	; >>>>> Line:	423
  3272 |          |                           | 	; >>>>> queueWait = YKQWaitList; 
  3273 | 00001536 | A1[1E1D]                  | 	mov	ax, word [YKQWaitList]
  3274 | 00001539 | 8946FE                    | 	mov	word [bp-2], ax
  3275 |          |                           | 	; >>>>> Line:	425
  3276 |          |                           | 	; >>>>> *(queue->base_addr + queue->head) = msg; 
  3277 | 0000153C | 8B7604                    | 	mov	si, word [bp+4]
  3278 | 0000153F | 83C606                    | 	add	si, 6
  3279 | 00001542 | 8B04                      | 	mov	ax, word [si]
  3280 | 00001544 | D1E0                      | 	shl	ax, 1
  3281 | 00001546 | 89C6                      | 	mov	si, ax
  3282 | 00001548 | 8B7E04                    | 	mov	di, word [bp+4]
  3283 | 0000154B | 83C704                    | 	add	di, 4
  3284 | 0000154E | 0335                      | 	add	si, word [di]
  3285 | 00001550 | 8B4606                    | 	mov	ax, word [bp+6]
  3286 | 00001553 | 8904                      | 	mov	word [si], ax
  3287 |          |                           | 	; >>>>> Line:	426
  3288 |          |                           | 	; >>>>> queue->cur_length = queue->cur_length + 1; 
  3289 | 00001555 | 8B7604                    | 	mov	si, word [bp+4]
  3290 | 00001558 | 83C602                    | 	add	si, 2
  3291 | 0000155B | 8B04                      | 	mov	ax, word [si]
  3292 | 0000155D | 40                        | 	inc	ax
  3293 | 0000155E | 8B7604                    | 	mov	si, word [bp+4]
  3294 | 00001561 | 83C602                    | 	add	si, 2
  3295 | 00001564 | 8904                      | 	mov	word [si], ax
  3296 |          |                           | 	; >>>>> Line:	427
  3297 |          |                           | 	; >>>>> if((queue->head + 1) < queue->size){ 
  3298 | 00001566 | 8B7604                    | 	mov	si, word [bp+4]
  3299 | 00001569 | 83C606                    | 	add	si, 6
  3300 | 0000156C | 8B04                      | 	mov	ax, word [si]
  3301 | 0000156E | 40                        | 	inc	ax
  3302 | 0000156F | 8B7604                    | 	mov	si, word [bp+4]
  3303 | 00001572 | 8B14                      | 	mov	dx, word [si]
  3304 | 00001574 | 39C2                      | 	cmp	dx, ax
  3305 | 00001576 | 7E10                      | 	jle	L_yakc_152
  3306 |          |                           | 	; >>>>> Line:	428
  3307 |          |                           | 	; >>>>> queue->head = queue->head + 1; 
  3308 | 00001578 | 83C606                    | 	add	si, 6
  3309 | 0000157B | 8B04                      | 	mov	ax, word [si]
  3310 | 0000157D | 40                        | 	inc	ax
  3311 | 0000157E | 8B7604                    | 	mov	si, word [bp+4]
  3312 | 00001581 | 83C606                    | 	add	si, 6
  3313 | 00001584 | 8904                      | 	mov	word [si], ax
  3314 | 00001586 | EB0A                      | 	jmp	L_yakc_153
  3315 |          |                           | L_yakc_152:
  3316 |          |                           | 	; >>>>> Line:	431
  3317 |          |                           | 	; >>>>> queue->head = 0; 
  3318 | 00001588 | 8B7604                    | 	mov	si, word [bp+4]
  3319 | 0000158B | 83C606                    | 	add	si, 6
  3320 | 0000158E | C7040000                  | 	mov	word [si], 0
  3321 |          |                           | L_yakc_153:
  3322 |          |                           | 	; >>>>> Line:	434
  3323 |          |                           | 	; >>>>> while(queueWait != 0){ 
  3324 | 00001592 | EB37                      | 	jmp	L_yakc_155
  3325 |          |                           | L_yakc_154:
  3326 |          |                           | 	; >>>>> Line:	435
  3327 |          |                           | 	; >>>>> if(queueWait->queueWait == queue){ 
  3328 | 00001594 | 8B76FE                    | 	mov	si, word [bp-2]
  3329 | 00001597 | 83C60E                    | 	add	si, 14
  3330 | 0000159A | 8B4604                    | 	mov	ax, word [bp+4]
  3331 | 0000159D | 3B04                      | 	cmp	ax, word [si]
  3332 | 0000159F | 751F                      | 	jne	L_yakc_157
  3333 |          |                           | 	; >>>>> Line:	436
  3334 |          |                           | 	; >>>>> if((unWaitTask == 0) || (queueWait->priority < unWaitTask->priority)){ 
  3335 | 000015A1 | 8B46FC                    | 	mov	ax, word [bp-4]
  3336 | 000015A4 | 85C0                      | 	test	ax, ax
  3337 | 000015A6 | 7412                      | 	je	L_yakc_159
  3338 | 000015A8 | 8B76FE                    | 	mov	si, word [bp-2]
  3339 | 000015AB | 83C604                    | 	add	si, 4
  3340 | 000015AE | 8B7EFC                    | 	mov	di, word [bp-4]
  3341 | 000015B1 | 83C704                    | 	add	di, 4
  3342 | 000015B4 | 8B05                      | 	mov	ax, word [di]
  3343 | 000015B6 | 3B04                      | 	cmp	ax, word [si]
  3344 | 000015B8 | 7E06                      | 	jle	L_yakc_158
  3345 |          |                           | L_yakc_159:
  3346 |          |                           | 	; >>>>> Line:	437
  3347 |          |                           | 	; >>>>> unWaitTask = queueWait; 
  3348 | 000015BA | 8B46FE                    | 	mov	ax, word [bp-2]
  3349 | 000015BD | 8946FC                    | 	mov	word [bp-4], ax
  3350 |          |                           | L_yakc_158:
  3351 |          |                           | L_yakc_157:
  3352 |          |                           | 	; >>>>> Line:	440
  3353 |          |                           | 	; >>>>> queueWait = queueWait->next; 
  3354 | 000015C0 | 8B76FE                    | 	mov	si, word [bp-2]
  3355 | 000015C3 | 83C608                    | 	add	si, 8
  3356 | 000015C6 | 8B04                      | 	mov	ax, word [si]
  3357 | 000015C8 | 8946FE                    | 	mov	word [bp-2], ax
  3358 |          |                           | L_yakc_155:
  3359 | 000015CB | 8B46FE                    | 	mov	ax, word [bp-2]
  3360 | 000015CE | 85C0                      | 	test	ax, ax
  3361 | 000015D0 | 75C2                      | 	jne	L_yakc_154
  3362 |          |                           | L_yakc_156:
  3363 |          |                           | 	; >>>>> Line:	443
  3364 |          |                           | 	; >>>>> if(unWaitTask == 0){ 
  3365 | 000015D2 | 8B46FC                    | 	mov	ax, word [bp-4]
  3366 | 000015D5 | 85C0                      | 	test	ax, ax
  3367 | 000015D7 | 7509                      | 	jne	L_yakc_160
  3368 |          |                           | 	; >>>>> Line:	444
  3369 |          |                           | 	; >>>>> YKExitMutex(); 
  3370 | 000015D9 | E84A07                    | 	call	YKExitMutex
  3371 |          |                           | 	; >>>>> Line:	445
  3372 |          |                           | 	; >>>>> return 1; 
  3373 | 000015DC | B80100                    | 	mov	ax, 1
  3374 | 000015DF | E9DF00                    | 	jmp	L_yakc_151
  3375 |          |                           | L_yakc_160:
  3376 |          |                           | 	; >>>>> Line:	448
  3377 |          |                           | 	; >>>>> if(unWaitTask->prev == 0){ 
  3378 | 000015E2 | 8B76FC                    | 	mov	si, word [bp-4]
  3379 | 000015E5 | 83C60A                    | 	add	si, 10
  3380 | 000015E8 | 8B04                      | 	mov	ax, word [si]
  3381 | 000015EA | 85C0                      | 	test	ax, ax
  3382 | 000015EC | 750D                      | 	jne	L_yakc_161
  3383 |          |                           | 	; >>>>> Line:	449
  3384 |          |                           | 	; >>>>> YKQWaitList = unWaitTask->next; 
  3385 | 000015EE | 8B76FC                    | 	mov	si, word [bp-4]
  3386 | 000015F1 | 83C608                    | 	add	si, 8
  3387 | 000015F4 | 8B04                      | 	mov	ax, word [si]
  3388 | 000015F6 | A3[1E1D]                  | 	mov	word [YKQWaitList], ax
  3389 | 000015F9 | EB15                      | 	jmp	L_yakc_162
  3390 |          |                           | L_yakc_161:
  3391 |          |                           | 	; >>>>> Line:	452
  3392 |          |                           | 	; >>>>> unWaitTask->prev->next = unWaitTask->next; 
  3393 | 000015FB | 8B76FC                    | 	mov	si, word [bp-4]
  3394 | 000015FE | 83C608                    | 	add	si, 8
  3395 | 00001601 | 8B7EFC                    | 	mov	di, word [bp-4]
  3396 | 00001604 | 83C70A                    | 	add	di, 10
  3397 | 00001607 | 8B3D                      | 	mov	di, word [di]
  3398 | 00001609 | 83C708                    | 	add	di, 8
  3399 | 0000160C | 8B04                      | 	mov	ax, word [si]
  3400 | 0000160E | 8905                      | 	mov	word [di], ax
  3401 |          |                           | L_yakc_162:
  3402 |          |                           | 	; >>>>> Line:	455
  3403 |          |                           | 	; >>>>> if (unWaitTask->next ! 
  3404 | 00001610 | 8B76FC                    | 	mov	si, word [bp-4]
  3405 | 00001613 | 83C608                    | 	add	si, 8
  3406 | 00001616 | 8B04                      | 	mov	ax, word [si]
  3407 | 00001618 | 85C0                      | 	test	ax, ax
  3408 | 0000161A | 7415                      | 	je	L_yakc_163
  3409 |          |                           | 	; >>>>> Line:	456
  3410 |          |                           | 	; >>>>> unWaitTask->next->prev = unWaitTask->prev; 
  3411 | 0000161C | 8B76FC                    | 	mov	si, word [bp-4]
  3412 | 0000161F | 83C60A                    | 	add	si, 10
  3413 | 00001622 | 8B7EFC                    | 	mov	di, word [bp-4]
  3414 | 00001625 | 83C708                    | 	add	di, 8
  3415 | 00001628 | 8B3D                      | 	mov	di, word [di]
  3416 | 0000162A | 83C70A                    | 	add	di, 10
  3417 | 0000162D | 8B04                      | 	mov	ax, word [si]
  3418 | 0000162F | 8905                      | 	mov	word [di], ax
  3419 |          |                           | L_yakc_163:
  3420 |          |                           | 	; >>>>> Line:	459
  3421 |          |                           | 	; >>>>> readyTask = YKRdyList; 
  3422 | 00001631 | A1[B619]                  | 	mov	ax, word [YKRdyList]
  3423 | 00001634 | 8946FA                    | 	mov	word [bp-6], ax
  3424 |          |                           | 	; >>>>> Line:	460
  3425 |          |                           | 	; >>>>> while (readyTask->priority < unWaitTask->priority){ 
  3426 | 00001637 | EB0B                      | 	jmp	L_yakc_165
  3427 |          |                           | L_yakc_164:
  3428 |          |                           | 	; >>>>> Line:	461
  3429 |          |                           | 	; >>>>> readyTask = readyTask->next; 
  3430 | 00001639 | 8B76FA                    | 	mov	si, word [bp-6]
  3431 | 0000163C | 83C608                    | 	add	si, 8
  3432 | 0000163F | 8B04                      | 	mov	ax, word [si]
  3433 | 00001641 | 8946FA                    | 	mov	word [bp-6], ax
  3434 |          |                           | L_yakc_165:
  3435 | 00001644 | 8B76FA                    | 	mov	si, word [bp-6]
  3436 | 00001647 | 83C604                    | 	add	si, 4
  3437 | 0000164A | 8B7EFC                    | 	mov	di, word [bp-4]
  3438 | 0000164D | 83C704                    | 	add	di, 4
  3439 | 00001650 | 8B05                      | 	mov	ax, word [di]
  3440 | 00001652 | 3B04                      | 	cmp	ax, word [si]
  3441 | 00001654 | 7FE3                      | 	jg	L_yakc_164
  3442 |          |                           | L_yakc_166:
  3443 |          |                           | 	; >>>>> Line:	463
  3444 |          |                           | 	; >>>>> if(readyTask->prev == 0){ 
  3445 | 00001656 | 8B76FA                    | 	mov	si, word [bp-6]
  3446 | 00001659 | 83C60A                    | 	add	si, 10
  3447 | 0000165C | 8B04                      | 	mov	ax, word [si]
  3448 | 0000165E | 85C0                      | 	test	ax, ax
  3449 | 00001660 | 7508                      | 	jne	L_yakc_167
  3450 |          |                           | 	; >>>>> Line:	464
  3451 |          |                           | 	; >>>>> YKRdyList = unWaitTask; 
  3452 | 00001662 | 8B46FC                    | 	mov	ax, word [bp-4]
  3453 | 00001665 | A3[B619]                  | 	mov	word [YKRdyList], ax
  3454 | 00001668 | EB10                      | 	jmp	L_yakc_168
  3455 |          |                           | L_yakc_167:
  3456 |          |                           | 	; >>>>> Line:	467
  3457 |          |                           | 	; >>>>> readyTask->prev->next = unWaitTask; 
  3458 | 0000166A | 8B76FA                    | 	mov	si, word [bp-6]
  3459 | 0000166D | 83C60A                    | 	add	si, 10
  3460 | 00001670 | 8B34                      | 	mov	si, word [si]
  3461 | 00001672 | 83C608                    | 	add	si, 8
  3462 | 00001675 | 8B46FC                    | 	mov	ax, word [bp-4]
  3463 | 00001678 | 8904                      | 	mov	word [si], ax
  3464 |          |                           | L_yakc_168:
  3465 |          |                           | 	; >>>>> Line:	469
  3466 |          |                           | 	; >>>>> unWaitTask->prev = readyTask->prev; 
  3467 | 0000167A | 8B76FA                    | 	mov	si, word [bp-6]
  3468 | 0000167D | 83C60A                    | 	add	si, 10
  3469 | 00001680 | 8B7EFC                    | 	mov	di, word [bp-4]
  3470 | 00001683 | 83C70A                    | 	add	di, 10
  3471 | 00001686 | 8B04                      | 	mov	ax, word [si]
  3472 | 00001688 | 8905                      | 	mov	word [di], ax
  3473 |          |                           | 	; >>>>> Line:	470
  3474 |          |                           | 	; >>>>> unWaitTask->next = readyTask; 
  3475 | 0000168A | 8B76FC                    | 	mov	si, word [bp-4]
  3476 | 0000168D | 83C608                    | 	add	si, 8
  3477 | 00001690 | 8B46FA                    | 	mov	ax, word [bp-6]
  3478 | 00001693 | 8904                      | 	mov	word [si], ax
  3479 |          |                           | 	; >>>>> Line:	471
  3480 |          |                           | 	; >>>>> readyTask->prev = unWaitTask; 
  3481 | 00001695 | 8B76FA                    | 	mov	si, word [bp-6]
  3482 | 00001698 | 83C60A                    | 	add	si, 10
  3483 | 0000169B | 8B46FC                    | 	mov	ax, word [bp-4]
  3484 | 0000169E | 8904                      | 	mov	word [si], ax
  3485 |          |                           | 	; >>>>> Line:	473
  3486 |          |                           | 	; >>>>> unWaitTask->queueWait = 0; 
  3487 | 000016A0 | 8B76FC                    | 	mov	si, word [bp-4]
  3488 | 000016A3 | 83C60E                    | 	add	si, 14
  3489 | 000016A6 | C7040000                  | 	mov	word [si], 0
  3490 |          |                           | 	; >>>>> Line:	475
  3491 |          |                           | 	; >>>>> if(YKISRDepth == 0){ 
  3492 | 000016AA | A1[9A1C]                  | 	mov	ax, word [YKISRDepth]
  3493 | 000016AD | 85C0                      | 	test	ax, ax
  3494 | 000016AF | 750A                      | 	jne	L_yakc_169
  3495 |          |                           | 	; >>>>> Line:	476
  3496 |          |                           | 	; >>>>> YKScheduler(1); 
  3497 | 000016B1 | B80100                    | 	mov	ax, 1
  3498 | 000016B4 | 50                        | 	push	ax
  3499 | 000016B5 | E898F7                    | 	call	YKScheduler
  3500 | 000016B8 | 83C402                    | 	add	sp, 2
  3501 |          |                           | L_yakc_169:
  3502 |          |                           | 	; >>>>> Line:	478
  3503 |          |                           | 	; >>>>> YKExitMutex(); 
  3504 | 000016BB | E86806                    | 	call	YKExitMutex
  3505 |          |                           | 	; >>>>> Line:	479
  3506 |          |                           | 	; >>>>> return 1; 
  3507 | 000016BE | B80100                    | 	mov	ax, 1
  3508 |          |                           | L_yakc_151:
  3509 | 000016C1 | 89EC                      | 	mov	sp, bp
  3510 | 000016C3 | 5D                        | 	pop	bp
  3511 | 000016C4 | C3                        | 	ret
  3512 |          |                           | L_yakc_148:
  3513 | 000016C5 | 55                        | 	push	bp
  3514 | 000016C6 | 89E5                      | 	mov	bp, sp
  3515 | 000016C8 | 83EC06                    | 	sub	sp, 6
  3516 | 000016CB | E94BFE                    | 	jmp	L_yakc_149
  3517 |          |                           | 	ALIGN	2
  3518 |          |                           | YKEventCreate:
  3519 |          |                           | 	; >>>>> Line:	484
  3520 |          |                           | 	; >>>>> ; 
  3521 | 000016CE | EB53                      | 	jmp	L_yakc_171
  3522 |          |                           | L_yakc_172:
  3523 |          |                           | 	; >>>>> Line:	486
  3524 |          |                           | 	; >>>>> YKEnterMutex(); 
  3525 | 000016D0 | E85106                    | 	call	YKEnterMutex
  3526 |          |                           | 	; >>>>> Line:	487
  3527 |          |                           | 	; >>>>> for (i = 0; YKEVENTArray[i].active; i++){}; 
  3528 | 000016D3 | C746FE0000                | 	mov	word [bp-2], 0
  3529 | 000016D8 | EB03                      | 	jmp	L_yakc_174
  3530 |          |                           | L_yakc_173:
  3531 |          |                           | L_yakc_176:
  3532 |          |                           | 	; >>>>> Line:	487
  3533 |          |                           | 	; >>>>> for (i = 0; YKEVENTArray[i].active; i++){}; 
  3534 | 000016DA | FF46FE                    | 	inc	word [bp-2]
  3535 |          |                           | L_yakc_174:
  3536 | 000016DD | 8B46FE                    | 	mov	ax, word [bp-2]
  3537 | 000016E0 | D1E0                      | 	shl	ax, 1
  3538 | 000016E2 | D1E0                      | 	shl	ax, 1
  3539 | 000016E4 | 89C6                      | 	mov	si, ax
  3540 | 000016E6 | 81C6[0A1D]                | 	add	si, YKEVENTArray
  3541 | 000016EA | 8B04                      | 	mov	ax, word [si]
  3542 | 000016EC | 85C0                      | 	test	ax, ax
  3543 | 000016EE | 75EA                      | 	jne	L_yakc_173
  3544 |          |                           | L_yakc_175:
  3545 |          |                           | 	; >>>>> Line:	489
  3546 |          |                           | 	; >>>>> YKEVENTArray[i].active = 1; 
  3547 | 000016F0 | 8B46FE                    | 	mov	ax, word [bp-2]
  3548 | 000016F3 | D1E0                      | 	shl	ax, 1
  3549 | 000016F5 | D1E0                      | 	shl	ax, 1
  3550 | 000016F7 | 89C6                      | 	mov	si, ax
  3551 | 000016F9 | 81C6[0A1D]                | 	add	si, YKEVENTArray
  3552 | 000016FD | C7040100                  | 	mov	word [si], 1
  3553 |          |                           | 	; >>>>> Line:	490
  3554 |          |                           | 	; >>>>> YKEVENTArray[i].flag = initialValue; 
  3555 | 00001701 | 8B46FE                    | 	mov	ax, word [bp-2]
  3556 | 00001704 | D1E0                      | 	shl	ax, 1
  3557 | 00001706 | D1E0                      | 	shl	ax, 1
  3558 | 00001708 | 05[0A1D]                  | 	add	ax, YKEVENTArray
  3559 | 0000170B | 89C6                      | 	mov	si, ax
  3560 | 0000170D | 83C602                    | 	add	si, 2
  3561 | 00001710 | 8B4604                    | 	mov	ax, word [bp+4]
  3562 | 00001713 | 8904                      | 	mov	word [si], ax
  3563 |          |                           | 	; >>>>> Line:	492
  3564 |          |                           | 	; >>>>> return &(YKEVENTArray[i]); 
  3565 | 00001715 | 8B46FE                    | 	mov	ax, word [bp-2]
  3566 | 00001718 | D1E0                      | 	shl	ax, 1
  3567 | 0000171A | D1E0                      | 	shl	ax, 1
  3568 | 0000171C | 05[0A1D]                  | 	add	ax, YKEVENTArray
  3569 |          |                           | L_yakc_177:
  3570 | 0000171F | 89EC                      | 	mov	sp, bp
  3571 | 00001721 | 5D                        | 	pop	bp
  3572 | 00001722 | C3                        | 	ret
  3573 |          |                           | L_yakc_171:
  3574 | 00001723 | 55                        | 	push	bp
  3575 | 00001724 | 89E5                      | 	mov	bp, sp
  3576 | 00001726 | 51                        | 	push	cx
  3577 | 00001727 | EBA7                      | 	jmp	L_yakc_172
  3578 | 00001729 | 90                        | 	ALIGN	2
  3579 |          |                           | YKEventPend:
  3580 |          |                           | 	; >>>>> Line:	495
  3581 |          |                           | 	; >>>>> unsigned YKEventPend(YKEVENT *event, unsigned eventMask, int waitMode){ 
  3582 | 0000172A | E9CE00                    | 	jmp	L_yakc_179
  3583 |          |                           | L_yakc_180:
  3584 |          |                           | 	; >>>>> Line:	498
  3585 |          |                           | 	; >>>>> YKEnterMutex(); 
  3586 | 0000172D | E8F405                    | 	call	YKEnterMutex
  3587 |          |                           | 	; >>>>> Line:	500
  3588 |          |                           | 	; >>>>> if(((waitMode == 0) && ((eventMask & event->flag ) > 0 )) || 
  3589 | 00001730 | 8B4608                    | 	mov	ax, word [bp+8]
  3590 | 00001733 | 85C0                      | 	test	ax, ax
  3591 | 00001735 | 750D                      | 	jne	L_yakc_183
  3592 | 00001737 | 8B7604                    | 	mov	si, word [bp+4]
  3593 | 0000173A | 83C602                    | 	add	si, 2
  3594 | 0000173D | 8B04                      | 	mov	ax, word [si]
  3595 | 0000173F | 234606                    | 	and	ax, word [bp+6]
  3596 | 00001742 | 7518                      | 	jne	L_yakc_182
  3597 |          |                           | L_yakc_183:
  3598 | 00001744 | 837E0801                  | 	cmp	word [bp+8], 1
  3599 | 00001748 | 7520                      | 	jne	L_yakc_181
  3600 | 0000174A | 8B7604                    | 	mov	si, word [bp+4]
  3601 | 0000174D | 83C602                    | 	add	si, 2
  3602 | 00001750 | 8B04                      | 	mov	ax, word [si]
  3603 | 00001752 | 234606                    | 	and	ax, word [bp+6]
  3604 | 00001755 | 8B5606                    | 	mov	dx, word [bp+6]
  3605 | 00001758 | 39C2                      | 	cmp	dx, ax
  3606 | 0000175A | 750E                      | 	jne	L_yakc_181
  3607 |          |                           | L_yakc_182:
  3608 |          |                           | 	; >>>>> Line:	502
  3609 |          |                           | 	; >>>>> YKExitMutex(); 
  3610 | 0000175C | E8C705                    | 	call	YKExitMutex
  3611 |          |                           | 	; >>>>> Line:	503
  3612 |          |                           | 	; >>>>> return event->flag; 
  3613 | 0000175F | 8B7604                    | 	mov	si, word [bp+4]
  3614 | 00001762 | 83C602                    | 	add	si, 2
  3615 | 00001765 | 8B04                      | 	mov	ax, word [si]
  3616 | 00001767 | E98D00                    | 	jmp	L_yakc_184
  3617 |          |                           | L_yakc_181:
  3618 |          |                           | 	; >>>>> Line:	506
  3619 |          |                           | 	; >>>>> ext; 
  3620 | 0000176A | A1[B619]                  | 	mov	ax, word [YKRdyList]
  3621 | 0000176D | 8946FE                    | 	mov	word [bp-2], ax
  3622 |          |                           | 	; >>>>> Line:	507
  3623 |          |                           | 	; >>>>> YKRdyList = readyTask->next; 
  3624 | 00001770 | 8B76FE                    | 	mov	si, word [bp-2]
  3625 | 00001773 | 83C608                    | 	add	si, 8
  3626 | 00001776 | 8B04                      | 	mov	ax, word [si]
  3627 | 00001778 | A3[B619]                  | 	mov	word [YKRdyList], ax
  3628 |          |                           | 	; >>>>> Line:	508
  3629 |          |                           | 	; >>>>> readyTask->next->prev = 0; 
  3630 | 0000177B | 8B76FE                    | 	mov	si, word [bp-2]
  3631 | 0000177E | 83C608                    | 	add	si, 8
  3632 | 00001781 | 8B34                      | 	mov	si, word [si]
  3633 | 00001783 | 83C60A                    | 	add	si, 10
  3634 | 00001786 | C7040000                  | 	mov	word [si], 0
  3635 |          |                           | 	; >>>>> Line:	509
  3636 |          |                           | 	; >>>>> readyTask->next = YKEventWaitList; 
  3637 | 0000178A | 8B76FE                    | 	mov	si, word [bp-2]
  3638 | 0000178D | 83C608                    | 	add	si, 8
  3639 | 00001790 | A1[201D]                  | 	mov	ax, word [YKEventWaitList]
  3640 | 00001793 | 8904                      | 	mov	word [si], ax
  3641 |          |                           | 	; >>>>> Line:	510
  3642 |          |                           | 	; >>>>> YKEventWaitList = readyTask; 
  3643 | 00001795 | 8B46FE                    | 	mov	ax, word [bp-2]
  3644 | 00001798 | A3[201D]                  | 	mov	word [YKEventWaitList], ax
  3645 |          |                           | 	; >>>>> Line:	511
  3646 |          |                           | 	; >>>>> readyTask->prev = 0; 
  3647 | 0000179B | 8B76FE                    | 	mov	si, word [bp-2]
  3648 | 0000179E | 83C60A                    | 	add	si, 10
  3649 | 000017A1 | C7040000                  | 	mov	word [si], 0
  3650 |          |                           | 	; >>>>> Line:	513
  3651 |          |                           | 	; >>>>> if(readyTask->next != 0){ 
  3652 | 000017A5 | 8B76FE                    | 	mov	si, word [bp-2]
  3653 | 000017A8 | 83C608                    | 	add	si, 8
  3654 | 000017AB | 8B04                      | 	mov	ax, word [si]
  3655 | 000017AD | 85C0                      | 	test	ax, ax
  3656 | 000017AF | 7410                      | 	je	L_yakc_185
  3657 |          |                           | 	; >>>>> Line:	514
  3658 |          |                           | 	; >>>>> readyTask->next->prev = readyTask; 
  3659 | 000017B1 | 8B76FE                    | 	mov	si, word [bp-2]
  3660 | 000017B4 | 83C608                    | 	add	si, 8
  3661 | 000017B7 | 8B34                      | 	mov	si, word [si]
  3662 | 000017B9 | 83C60A                    | 	add	si, 10
  3663 | 000017BC | 8B46FE                    | 	mov	ax, word [bp-2]
  3664 | 000017BF | 8904                      | 	mov	word [si], ax
  3665 |          |                           | L_yakc_185:
  3666 |          |                           | 	; >>>>> Line:	517
  3667 |          |                           | 	; >>>>> readyTask->event = event; 
  3668 | 000017C1 | 8B76FE                    | 	mov	si, word [bp-2]
  3669 | 000017C4 | 83C610                    | 	add	si, 16
  3670 | 000017C7 | 8B4604                    | 	mov	ax, word [bp+4]
  3671 | 000017CA | 8904                      | 	mov	word [si], ax
  3672 |          |                           | 	; >>>>> Line:	518
  3673 |          |                           | 	; >>>>> readyTask->eventMask = eventMask; 
  3674 | 000017CC | 8B76FE                    | 	mov	si, word [bp-2]
  3675 | 000017CF | 83C612                    | 	add	si, 18
  3676 | 000017D2 | 8B4606                    | 	mov	ax, word [bp+6]
  3677 | 000017D5 | 8904                      | 	mov	word [si], ax
  3678 |          |                           | 	; >>>>> Line:	519
  3679 |          |                           | 	; >>>>> readyTask->waitMode = waitMode; 
  3680 | 000017D7 | 8B76FE                    | 	mov	si, word [bp-2]
  3681 | 000017DA | 83C614                    | 	add	si, 20
  3682 | 000017DD | 8B4608                    | 	mov	ax, word [bp+8]
  3683 | 000017E0 | 8904                      | 	mov	word [si], ax
  3684 |          |                           | 	; >>>>> Line:	521
  3685 |          |                           | 	; >>>>> YKScheduler(1); 
  3686 | 000017E2 | B80100                    | 	mov	ax, 1
  3687 | 000017E5 | 50                        | 	push	ax
  3688 | 000017E6 | E867F6                    | 	call	YKScheduler
  3689 | 000017E9 | 83C402                    | 	add	sp, 2
  3690 |          |                           | 	; >>>>> Line:	522
  3691 |          |                           | 	; >>>>> YKExitMutex(); 
  3692 | 000017EC | E83705                    | 	call	YKExitMutex
  3693 |          |                           | 	; >>>>> Line:	524
  3694 |          |                           | 	; >>>>> return event->flag; 
  3695 | 000017EF | 8B7604                    | 	mov	si, word [bp+4]
  3696 | 000017F2 | 83C602                    | 	add	si, 2
  3697 | 000017F5 | 8B04                      | 	mov	ax, word [si]
  3698 |          |                           | L_yakc_184:
  3699 | 000017F7 | 89EC                      | 	mov	sp, bp
  3700 | 000017F9 | 5D                        | 	pop	bp
  3701 | 000017FA | C3                        | 	ret
  3702 |          |                           | L_yakc_179:
  3703 | 000017FB | 55                        | 	push	bp
  3704 | 000017FC | 89E5                      | 	mov	bp, sp
  3705 | 000017FE | 51                        | 	push	cx
  3706 | 000017FF | E92BFF                    | 	jmp	L_yakc_180
  3707 |          |                           | 	ALIGN	2
  3708 |          |                           | YKEventSet:
  3709 |          |                           | 	; >>>>> Line:	527
  3710 |          |                           | 	; >>>>> void YKEventSet(YKEVENT *event, unsigned eventMask){ 
  3711 | 00001802 | E98301                    | 	jmp	L_yakc_187
  3712 |          |                           | L_yakc_188:
  3713 |          |                           | 	; >>>>> Line:	529
  3714 |          |                           | 	; >>>>> s 
  3715 | 00001805 | E81C05                    | 	call	YKEnterMutex
  3716 |          |                           | 	; >>>>> Line:	530
  3717 |          |                           | 	; >>>>> event->flag |= eventMask; 
  3718 | 00001808 | 8B7604                    | 	mov	si, word [bp+4]
  3719 | 0000180B | 83C602                    | 	add	si, 2
  3720 | 0000180E | 8B4606                    | 	mov	ax, word [bp+6]
  3721 | 00001811 | 0904                      | 	or	word [si], ax
  3722 |          |                           | 	; >>>>> Line:	532
  3723 |          |                           | 	; >>>>> for(eventTask = YKEventWaitList; eventTask != 0; ){ 
  3724 | 00001813 | A1[201D]                  | 	mov	ax, word [YKEventWaitList]
  3725 | 00001816 | 8946FE                    | 	mov	word [bp-2], ax
  3726 | 00001819 | E94A01                    | 	jmp	L_yakc_190
  3727 |          |                           | L_yakc_189:
  3728 |          |                           | 	; >>>>> Line:	533
  3729 |          |                           | 	; >>>>> taskNext=eventTask->next; 
  3730 | 0000181C | 8B76FE                    | 	mov	si, word [bp-2]
  3731 | 0000181F | 83C608                    | 	add	si, 8
  3732 | 00001822 | 8B04                      | 	mov	ax, word [si]
  3733 | 00001824 | 8946F8                    | 	mov	word [bp-8], ax
  3734 |          |                           | 	; >>>>> Line:	534
  3735 |          |                           | 	; >>>>> if(eventTask->event != event){ 
  3736 | 00001827 | 8B76FE                    | 	mov	si, word [bp-2]
  3737 | 0000182A | 83C610                    | 	add	si, 16
  3738 | 0000182D | 8B4604                    | 	mov	ax, word [bp+4]
  3739 | 00001830 | 3B04                      | 	cmp	ax, word [si]
  3740 | 00001832 | 740C                      | 	je	L_yakc_193
  3741 |          |                           | 	; >>>>> Line:	535
  3742 |          |                           | 	; >>>>> eventTask = taskNext; 
  3743 | 00001834 | 8B46F8                    | 	mov	ax, word [bp-8]
  3744 | 00001837 | 8946FE                    | 	mov	word [bp-2], ax
  3745 |          |                           | 	; >>>>> Line:	536
  3746 |          |                           | 	; >>>>> continue; 
  3747 | 0000183A | E92901                    | 	jmp	L_yakc_192
  3748 | 0000183D | E92001                    | 	jmp	L_yakc_194
  3749 |          |                           | L_yakc_193:
  3750 |          |                           | 	; >>>>> Line:	539
  3751 |          |                           | 	; >>>>> if( ((eventTask->waitMode == 0) && ((eventTask->eventMask & event->flag ) > 0 )) || 
  3752 | 00001840 | 8B76FE                    | 	mov	si, word [bp-2]
  3753 | 00001843 | 83C614                    | 	add	si, 20
  3754 | 00001846 | 8B04                      | 	mov	ax, word [si]
  3755 | 00001848 | 85C0                      | 	test	ax, ax
  3756 | 0000184A | 7512                      | 	jne	L_yakc_197
  3757 | 0000184C | 8B76FE                    | 	mov	si, word [bp-2]
  3758 | 0000184F | 83C612                    | 	add	si, 18
  3759 | 00001852 | 8B04                      | 	mov	ax, word [si]
  3760 | 00001854 | 8B7604                    | 	mov	si, word [bp+4]
  3761 | 00001857 | 83C602                    | 	add	si, 2
  3762 | 0000185A | 2304                      | 	and	ax, word [si]
  3763 | 0000185C | 752D                      | 	jne	L_yakc_196
  3764 |          |                           | L_yakc_197:
  3765 | 0000185E | 8B76FE                    | 	mov	si, word [bp-2]
  3766 | 00001861 | 83C614                    | 	add	si, 20
  3767 | 00001864 | 833C01                    | 	cmp	word [si], 1
  3768 | 00001867 | 7403E9EF00                | 	jne	L_yakc_195
  3769 | 0000186C | 8B76FE                    | 	mov	si, word [bp-2]
  3770 | 0000186F | 83C612                    | 	add	si, 18
  3771 | 00001872 | 8B04                      | 	mov	ax, word [si]
  3772 | 00001874 | 8B7604                    | 	mov	si, word [bp+4]
  3773 | 00001877 | 83C602                    | 	add	si, 2
  3774 | 0000187A | 2304                      | 	and	ax, word [si]
  3775 | 0000187C | 8B76FE                    | 	mov	si, word [bp-2]
  3776 | 0000187F | 83C612                    | 	add	si, 18
  3777 | 00001882 | 8B14                      | 	mov	dx, word [si]
  3778 | 00001884 | 39C2                      | 	cmp	dx, ax
  3779 | 00001886 | 7403E9D000                | 	jne	L_yakc_195
  3780 |          |                           | L_yakc_196:
  3781 |          |                           | 	; >>>>> Line:	541
  3782 |          |                           | 	; >>>>> unWaitTask = eventTask; 
  3783 | 0000188B | 8B46FE                    | 	mov	ax, word [bp-2]
  3784 | 0000188E | 8946FC                    | 	mov	word [bp-4], ax
  3785 |          |                           | 	; >>>>> Line:	543
  3786 |          |                           | 	; >>>>> if(unWaitTask->prev == 0){ 
  3787 | 00001891 | 8B76FC                    | 	mov	si, word [bp-4]
  3788 | 00001894 | 83C60A                    | 	add	si, 10
  3789 | 00001897 | 8B04                      | 	mov	ax, word [si]
  3790 | 00001899 | 85C0                      | 	test	ax, ax
  3791 | 0000189B | 750D                      | 	jne	L_yakc_198
  3792 |          |                           | 	; >>>>> Line:	544
  3793 |          |                           | 	; >>>>> WaitTask; 
  3794 | 0000189D | 8B76FC                    | 	mov	si, word [bp-4]
  3795 | 000018A0 | 83C608                    | 	add	si, 8
  3796 | 000018A3 | 8B04                      | 	mov	ax, word [si]
  3797 | 000018A5 | A3[201D]                  | 	mov	word [YKEventWaitList], ax
  3798 | 000018A8 | EB15                      | 	jmp	L_yakc_199
  3799 |          |                           | L_yakc_198:
  3800 |          |                           | 	; >>>>> Line:	547
  3801 |          |                           | 	; >>>>> unWaitTask->prev->next = unWaitTask->next; 
  3802 | 000018AA | 8B76FC                    | 	mov	si, word [bp-4]
  3803 | 000018AD | 83C608                    | 	add	si, 8
  3804 | 000018B0 | 8B7EFC                    | 	mov	di, word [bp-4]
  3805 | 000018B3 | 83C70A                    | 	add	di, 10
  3806 | 000018B6 | 8B3D                      | 	mov	di, word [di]
  3807 | 000018B8 | 83C708                    | 	add	di, 8
  3808 | 000018BB | 8B04                      | 	mov	ax, word [si]
  3809 | 000018BD | 8905                      | 	mov	word [di], ax
  3810 |          |                           | L_yakc_199:
  3811 |          |                           | 	; >>>>> Line:	549
  3812 |          |                           | 	; >>>>> if (unWaitTask->next != 0){ 
  3813 | 000018BF | 8B76FC                    | 	mov	si, word [bp-4]
  3814 | 000018C2 | 83C608                    | 	add	si, 8
  3815 | 000018C5 | 8B04                      | 	mov	ax, word [si]
  3816 | 000018C7 | 85C0                      | 	test	ax, ax
  3817 | 000018C9 | 7415                      | 	je	L_yakc_200
  3818 |          |                           | 	; >>>>> Line:	550
  3819 |          |                           | 	; >>>>> unWaitTask->next->prev = unWaitTask->prev; 
  3820 | 000018CB | 8B76FC                    | 	mov	si, word [bp-4]
  3821 | 000018CE | 83C60A                    | 	add	si, 10
  3822 | 000018D1 | 8B7EFC                    | 	mov	di, word [bp-4]
  3823 | 000018D4 | 83C708                    | 	add	di, 8
  3824 | 000018D7 | 8B3D                      | 	mov	di, word [di]
  3825 | 000018D9 | 83C70A                    | 	add	di, 10
  3826 | 000018DC | 8B04                      | 	mov	ax, word [si]
  3827 | 000018DE | 8905                      | 	mov	word [di], ax
  3828 |          |                           | L_yakc_200:
  3829 |          |                           | 	; >>>>> Line:	552
  3830 |          |                           | 	; >>>>> readyTask = YKRdyList; 
  3831 | 000018E0 | A1[B619]                  | 	mov	ax, word [YKRdyList]
  3832 | 000018E3 | 8946FA                    | 	mov	word [bp-6], ax
  3833 |          |                           | 	; >>>>> Line:	553
  3834 |          |                           | 	; >>>>> while (readyTask->priority < unWaitTask->priority){ 
  3835 | 000018E6 | EB0B                      | 	jmp	L_yakc_202
  3836 |          |                           | L_yakc_201:
  3837 |          |                           | 	; >>>>> Line:	554
  3838 |          |                           | 	; >>>>> readyTask = readyTask->next; 
  3839 | 000018E8 | 8B76FA                    | 	mov	si, word [bp-6]
  3840 | 000018EB | 83C608                    | 	add	si, 8
  3841 | 000018EE | 8B04                      | 	mov	ax, word [si]
  3842 | 000018F0 | 8946FA                    | 	mov	word [bp-6], ax
  3843 |          |                           | L_yakc_202:
  3844 | 000018F3 | 8B76FA                    | 	mov	si, word [bp-6]
  3845 | 000018F6 | 83C604                    | 	add	si, 4
  3846 | 000018F9 | 8B7EFC                    | 	mov	di, word [bp-4]
  3847 | 000018FC | 83C704                    | 	add	di, 4
  3848 | 000018FF | 8B05                      | 	mov	ax, word [di]
  3849 | 00001901 | 3B04                      | 	cmp	ax, word [si]
  3850 | 00001903 | 7FE3                      | 	jg	L_yakc_201
  3851 |          |                           | L_yakc_203:
  3852 |          |                           | 	; >>>>> Line:	556
  3853 |          |                           | 	; >>>>> if(readyTask->prev == 0){ 
  3854 | 00001905 | 8B76FA                    | 	mov	si, word [bp-6]
  3855 | 00001908 | 83C60A                    | 	add	si, 10
  3856 | 0000190B | 8B04                      | 	mov	ax, word [si]
  3857 | 0000190D | 85C0                      | 	test	ax, ax
  3858 | 0000190F | 7508                      | 	jne	L_yakc_204
  3859 |          |                           | 	; >>>>> Line:	557
  3860 |          |                           | 	; >>>>> YKRdyList = unWaitTask; 
  3861 | 00001911 | 8B46FC                    | 	mov	ax, word [bp-4]
  3862 | 00001914 | A3[B619]                  | 	mov	word [YKRdyList], ax
  3863 | 00001917 | EB10                      | 	jmp	L_yakc_205
  3864 |          |                           | L_yakc_204:
  3865 |          |                           | 	; >>>>> Line:	560
  3866 |          |                           | 	; >>>>> readyTask->prev->next = unWaitTask; 
  3867 | 00001919 | 8B76FA                    | 	mov	si, word [bp-6]
  3868 | 0000191C | 83C60A                    | 	add	si, 10
  3869 | 0000191F | 8B34                      | 	mov	si, word [si]
  3870 | 00001921 | 83C608                    | 	add	si, 8
  3871 | 00001924 | 8B46FC                    | 	mov	ax, word [bp-4]
  3872 | 00001927 | 8904                      | 	mov	word [si], ax
  3873 |          |                           | L_yakc_205:
  3874 |          |                           | 	; >>>>> Line:	562
  3875 |          |                           | 	; >>>>> unWaitTa 
  3876 | 00001929 | 8B76FA                    | 	mov	si, word [bp-6]
  3877 | 0000192C | 83C60A                    | 	add	si, 10
  3878 | 0000192F | 8B7EFC                    | 	mov	di, word [bp-4]
  3879 | 00001932 | 83C70A                    | 	add	di, 10
  3880 | 00001935 | 8B04                      | 	mov	ax, word [si]
  3881 | 00001937 | 8905                      | 	mov	word [di], ax
  3882 |          |                           | 	; >>>>> Line:	563
  3883 |          |                           | 	; >>>>> unWaitTask->next = readyTask; 
  3884 | 00001939 | 8B76FC                    | 	mov	si, word [bp-4]
  3885 | 0000193C | 83C608                    | 	add	si, 8
  3886 | 0000193F | 8B46FA                    | 	mov	ax, word [bp-6]
  3887 | 00001942 | 8904                      | 	mov	word [si], ax
  3888 |          |                           | 	; >>>>> Line:	564
  3889 |          |                           | 	; >>>>> readyTask->prev = unWaitTask; 
  3890 | 00001944 | 8B76FA                    | 	mov	si, word [bp-6]
  3891 | 00001947 | 83C60A                    | 	add	si, 10
  3892 | 0000194A | 8B46FC                    | 	mov	ax, word [bp-4]
  3893 | 0000194D | 8904                      | 	mov	word [si], ax
  3894 |          |                           | 	; >>>>> Line:	566
  3895 |          |                           | 	; >>>>> unWaitTask->event = 0; 
  3896 | 0000194F | 8B76FC                    | 	mov	si, word [bp-4]
  3897 | 00001952 | 83C610                    | 	add	si, 16
  3898 | 00001955 | C7040000                  | 	mov	word [si], 0
  3899 | 00001959 | EB05                      | 	jmp	L_yakc_206
  3900 |          |                           | L_yakc_195:
  3901 |          |                           | 	; >>>>> Line:	569
  3902 |          |                           | 	; >>>>> unWaitTask = 0; 
  3903 | 0000195B | C746FC0000                | 	mov	word [bp-4], 0
  3904 |          |                           | L_yakc_206:
  3905 |          |                           | L_yakc_194:
  3906 |          |                           | 	; >>>>> Line:	572
  3907 |          |                           | 	; >>>>> eventTask = taskNext; 
  3908 | 00001960 | 8B46F8                    | 	mov	ax, word [bp-8]
  3909 | 00001963 | 8946FE                    | 	mov	word [bp-2], ax
  3910 |          |                           | L_yakc_192:
  3911 |          |                           | L_yakc_190:
  3912 | 00001966 | 8B46FE                    | 	mov	ax, word [bp-2]
  3913 | 00001969 | 85C0                      | 	test	ax, ax
  3914 | 0000196B | 7403E9ACFE                | 	jne	L_yakc_189
  3915 |          |                           | L_yakc_191:
  3916 |          |                           | 	; >>>>> Line:	574
  3917 |          |                           | 	; >>>>> if(YKISRDepth == 0){ 
  3918 | 00001970 | A1[9A1C]                  | 	mov	ax, word [YKISRDepth]
  3919 | 00001973 | 85C0                      | 	test	ax, ax
  3920 | 00001975 | 750A                      | 	jne	L_yakc_207
  3921 |          |                           | 	; >>>>> Line:	575
  3922 |          |                           | 	; >>>>> YKScheduler(1); 
  3923 | 00001977 | B80100                    | 	mov	ax, 1
  3924 | 0000197A | 50                        | 	push	ax
  3925 | 0000197B | E8D2F4                    | 	call	YKScheduler
  3926 | 0000197E | 83C402                    | 	add	sp, 2
  3927 |          |                           | L_yakc_207:
  3928 |          |                           | 	; >>>>> Line:	577
  3929 |          |                           | 	; >>>>> YKExitMutex(); 
  3930 | 00001981 | E8A203                    | 	call	YKExitMutex
  3931 | 00001984 | 89EC                      | 	mov	sp, bp
  3932 | 00001986 | 5D                        | 	pop	bp
  3933 | 00001987 | C3                        | 	ret
  3934 |          |                           | L_yakc_187:
  3935 | 00001988 | 55                        | 	push	bp
  3936 | 00001989 | 89E5                      | 	mov	bp, sp
  3937 | 0000198B | 83EC08                    | 	sub	sp, 8
  3938 | 0000198E | E974FE                    | 	jmp	L_yakc_188
  3939 | 00001991 | 90                        | 	ALIGN	2
  3940 |          |                           | YKEventReset:
  3941 |          |                           | 	; >>>>> Line:	580
  3942 |          |                           | 	; >>>>> void YKEventReset(YKEVENT *event, unsigned eventMask){ 
  3943 | 00001992 | EB17                      | 	jmp	L_yakc_209
  3944 |          |                           | L_yakc_210:
  3945 |          |                           | 	; >>>>> Line:	581
  3946 |          |                           | 	; >>>>> YKEnterMutex(); 
  3947 | 00001994 | E88D03                    | 	call	YKEnterMutex
  3948 |          |                           | 	; >>>>> Line:	582
  3949 |          |                           | 	; >>>>> event->flag &= ~eventMask; 
  3950 | 00001997 | 8B7604                    | 	mov	si, word [bp+4]
  3951 | 0000199A | 83C602                    | 	add	si, 2
  3952 | 0000199D | 8B4606                    | 	mov	ax, word [bp+6]
  3953 | 000019A0 | F7D0                      | 	not	ax
  3954 | 000019A2 | 2104                      | 	and	word [si], ax
  3955 |          |                           | 	; >>>>> Line:	583
  3956 |          |                           | 	; >>>>> YKExitMutex(); 
  3957 | 000019A4 | E87F03                    | 	call	YKExitMutex
  3958 | 000019A7 | 89EC                      | 	mov	sp, bp
  3959 | 000019A9 | 5D                        | 	pop	bp
  3960 | 000019AA | C3                        | 	ret
  3961 |          |                           | L_yakc_209:
  3962 | 000019AB | 55                        | 	push	bp
  3963 | 000019AC | 89E5                      | 	mov	bp, sp
  3964 | 000019AE | EBE4                      | 	jmp	L_yakc_210
  3965 |          |                           | 	ALIGN	2
  3966 |          |                           | YKCtxSwCount:
  3967 | 000019B0 | 00<rept>                  | 	TIMES	2 db 0
  3968 |          |                           | YKIdleCount:
  3969 | 000019B2 | 00<rept>                  | 	TIMES	2 db 0
  3970 |          |                           | YKTickNum:
  3971 | 000019B4 | 00<rept>                  | 	TIMES	2 db 0
  3972 |          |                           | YKRdyList:
  3973 | 000019B6 | 00<rept>                  | 	TIMES	2 db 0
  3974 |          |                           | YKDelayList:
  3975 | 000019B8 | 00<rept>                  | 	TIMES	2 db 0
  3976 |          |                           | YKSemWaitList:
  3977 | 000019BA | 00<rept>                  | 	TIMES	2 db 0
  3978 |          |                           | YKAvailTCBList:
  3979 | 000019BC | 00<rept>                  | 	TIMES	2 db 0
  3980 |          |                           | YKTCBArray:
  3981 | 000019BE | 00<rept>                  | 	TIMES	220 db 0
  3982 |          |                           | idleStack:
  3983 | 00001A9A | 00<rept>                  | 	TIMES	512 db 0
  3984 |          |                           | YKISRDepth:
  3985 | 00001C9A | 00<rept>                  | 	TIMES	2 db 0
  3986 |          |                           | YKSemArray:
  3987 | 00001C9C | 00<rept>                  | 	TIMES	60 db 0
  3988 |          |                           | YKQueueArray:
  3989 | 00001CD8 | 00<rept>                  | 	TIMES	50 db 0
  3990 |          |                           | YKEVENTArray:
  3991 | 00001D0A | 00<rept>                  | 	TIMES	20 db 0
  3992 |          |                           | YKQWaitList:
  3993 | 00001D1E | 00<rept>                  | 	TIMES	2 db 0
  3994 |          |                           | YKEventWaitList:
  3995 | 00001D20 | 00<rept>                  | 	TIMES	2 db 0
  3996 |          |                           | TKCurrentlyRunning:
  3997 | 00001D22 | 00<rept>                  | 	TIMES	2 db 0
  3998 |          |                           | ;Assemble funtcions
  3999 |          |                           | 
  4000 |          |                           | YKEnterMutex:                   ; Disables interrupts
  4001 | 00001D24 | FA                        | 	cli	                          ; clear interrupt flag
  4002 | 00001D25 | C3                        | 	ret
  4003 |          |                           | 
  4004 |          |                           | 
  4005 |          |                           | YKExitMutex:                    ; Enables Interrupts
  4006 | 00001D26 | FB                        | 	sti	                          ; set interrupt flag
  4007 | 00001D27 | C3                        | 	ret
  4008 |          |                           | 
  4009 |          |                           | YKDispatcherNSave:   		; Dispatcher that saves to mem/stack
  4010 |          |                           | 
  4011 | 00001D28 | FA                        |   cli
  4012 |          |                           | 
  4013 | 00001D29 | 55                        | 	push bp			; Push the base pointer onto the stack
  4014 | 00001D2A | 89E5                      | 	mov bp, sp		; set the current base pointer to be the stack pointer
  4015 |          |                           | 
  4016 |          |                           | 	; Get the sp values to restore and save them to sp
  4017 | 00001D2C | 8B6604                    | 	mov sp, word[bp+4]			; getting first arg (highest priority task sp)
  4018 |          |                           | 
  4019 |          |                           | 	;mov	al, 0x20
  4020 |          |                           | 	;out 	0x20, al
  4021 |          |                           | 
  4022 |          |                           | 	; Pop register values off the stack
  4023 | 00001D2F | 07                        | 	pop ES
  4024 | 00001D30 | 1F                        | 	pop DS
  4025 | 00001D31 | 5F                        | 	pop DI
  4026 | 00001D32 | 5E                        | 	pop SI
  4027 | 00001D33 | 5D                        | 	pop BP
  4028 | 00001D34 | 5A                        | 	pop DX
  4029 | 00001D35 | 59                        | 	pop CX
  4030 | 00001D36 | 5B                        | 	pop BX
  4031 | 00001D37 | 58                        | 	pop AX
  4032 |          |                           | 
  4033 | 00001D38 | CF                        | 	iret
  4034 |          |                           | 
  4035 |          |                           | YKDispatcherSave:   		; Dispatcher that saves to mem/stack
  4036 |          |                           | 
  4037 | 00001D39 | FA                        |   cli
  4038 |          |                           | 
  4039 | 00001D3A | 55                        | 	push bp
  4040 | 00001D3B | 89E5                      | 	mov bp, sp
  4041 |          |                           | 
  4042 | 00001D3D | 8B4602                    | 	mov AX, [bp+2]
  4043 |          |                           | 
  4044 | 00001D40 | 5D                        | 	pop bp
  4045 | 00001D41 | 83C402                    | 	add sp, 2
  4046 |          |                           | 
  4047 |          |                           | 	; Push flags, CS, and IP to the stack
  4048 | 00001D44 | 9C                        | 	pushf
  4049 |          |                           | 
  4050 |          |                           | 	; This is something about the flags that Ian told me to do
  4051 |          |                           | 	;push BX
  4052 |          |                           | 	;add sp, 2
  4053 |          |                           | 	;pop BX
  4054 |          |                           | 	;or BX, 0x200
  4055 |          |                           | 	;push BX
  4056 |          |                           | 	;sub sp, 2
  4057 |          |                           | 	;pop BX
  4058 |          |                           | 
  4059 | 00001D45 | 0E                        | 	push CS
  4060 | 00001D46 | 50                        | 	push AX
  4061 |          |                           | 	;push word[bp+2]
  4062 |          |                           | 
  4063 |          |                           | 	; Push all register values to the stack
  4064 | 00001D47 | 50                        | 	push AX
  4065 | 00001D48 | 53                        | 	push BX
  4066 | 00001D49 | 51                        | 	push CX
  4067 | 00001D4A | 52                        | 	push DX
  4068 | 00001D4B | 55                        | 	push BP
  4069 | 00001D4C | 56                        | 	push SI
  4070 | 00001D4D | 57                        | 	push DI
  4071 | 00001D4E | 1E                        | 	push DS
  4072 | 00001D4F | 06                        | 	push ES
  4073 |          |                           | 
  4074 |          |                           | 	; Move bp back to its original value
  4075 | 00001D50 | 89E5                      | 	mov bp, sp
  4076 | 00001D52 | 83C514                    | 	add bp, 20
  4077 |          |                           | 
  4078 |          |                           | 	; Store the save sp to si
  4079 | 00001D55 | 8B7604                    | 	mov si, word [bp+4] 			; getting first arg (sp)
  4080 | 00001D58 | 8924                      | 	mov word [si], sp
  4081 |          |                           | 
  4082 |          |                           | restore_context:
  4083 |          |                           | 
  4084 |          |                           | 	; Save the sp and ss values to restore to sp and ss
  4085 | 00001D5A | 8B6606                    | 	mov sp, word[bp+6]			; getting second arg
  4086 |          |                           | 
  4087 |          |                           | 	;mov	al, 0x20
  4088 |          |                           | 	;out 	0x20, al
  4089 |          |                           | 
  4090 |          |                           | 	; Pop register values back off the stack
  4091 | 00001D5D | 07                        | 	pop ES
  4092 | 00001D5E | 1F                        | 	pop DS
  4093 | 00001D5F | 5F                        | 	pop DI
  4094 | 00001D60 | 5E                        | 	pop SI
  4095 | 00001D61 | 5D                        | 	pop BP
  4096 | 00001D62 | 5A                        | 	pop DX
  4097 | 00001D63 | 59                        | 	pop CX
  4098 | 00001D64 | 5B                        | 	pop BX
  4099 | 00001D65 | 58                        | 	pop AX
  4100 | 00001D66 | CF                        | 	iret
  4101 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from lab8app.i
  4102 |          |                           | 	CPU	8086
  4103 | 00001D67 | 90                        | 	ALIGN	2
  4104 | 00001D68 | E99D08                    | 	jmp	main	; Jump to program start
  4105 | 00001D6B | 90                        | 	ALIGN	2
  4106 |          |                           | corner_flag:
  4107 | 00001D6C | 0000                      | 	DW	0
  4108 |          |                           | 	ALIGN	2
  4109 |          |                           | getIndex:
  4110 | 00001D6E | EB18                      | 	jmp	L_lab8app_1
  4111 |          |                           | L_lab8app_2:
  4112 | 00001D70 | 833E[6A32]32              | 	cmp	word [moveQueueIndex], 50
  4113 | 00001D75 | 7506                      | 	jne	L_lab8app_3
  4114 | 00001D77 | C706[6A32]0000            | 	mov	word [moveQueueIndex], 0
  4115 |          |                           | L_lab8app_3:
  4116 | 00001D7D | A1[6A32]                  | 	mov	ax, word [moveQueueIndex]
  4117 | 00001D80 | FF06[6A32]                | 	inc	word [moveQueueIndex]
  4118 |          |                           | L_lab8app_4:
  4119 | 00001D84 | 89EC                      | 	mov	sp, bp
  4120 | 00001D86 | 5D                        | 	pop	bp
  4121 | 00001D87 | C3                        | 	ret
  4122 |          |                           | L_lab8app_1:
  4123 | 00001D88 | 55                        | 	push	bp
  4124 | 00001D89 | 89E5                      | 	mov	bp, sp
  4125 | 00001D8B | EBE3                      | 	jmp	L_lab8app_2
  4126 | 00001D8D | 90                        | 	ALIGN	2
  4127 |          |                           | L_lab8app_6:
  4128 | 00001D8E | 0000                      | 	DW	0
  4129 |          |                           | L_lab8app_8:
  4130 | 00001D90 | 200D0A00                  | 	DB	" ",0xD,0xA,0
  4131 |          |                           | L_lab8app_7:
  4132 | 00001D94 | 20436F726E6572204F-       | 	DB	" Corner Ori: ",0
  4133 | 00001D9D | 72693A2000                | ...
  4134 |          |                           | 	ALIGN	2
  4135 |          |                           | newPieceTask:
  4136 | 00001DA2 | E9B606                    | 	jmp	L_lab8app_9
  4137 |          |                           | L_lab8app_10:
  4138 | 00001DA5 | C746FE0000                | 	mov	word [bp-2], 0
  4139 | 00001DAA | E9A706                    | 	jmp	L_lab8app_12
  4140 |          |                           | L_lab8app_11:
  4141 | 00001DAD | FF36[6626]                | 	push	word [newPieceQueue]
  4142 | 00001DB1 | E87AF6                    | 	call	YKQPend
  4143 | 00001DB4 | 83C402                    | 	add	sp, 2
  4144 | 00001DB7 | 8946FA                    | 	mov	word [bp-6], ax
  4145 | 00001DBA | 8B76FA                    | 	mov	si, word [bp-6]
  4146 | 00001DBD | 83C602                    | 	add	si, 2
  4147 | 00001DC0 | 833C01                    | 	cmp	word [si], 1
  4148 | 00001DC3 | 7403E93801                | 	jne	L_lab8app_14
  4149 | 00001DC8 | 8B76FA                    | 	mov	si, word [bp-6]
  4150 | 00001DCB | 83C606                    | 	add	si, 6
  4151 | 00001DCE | 8B04                      | 	mov	ax, word [si]
  4152 | 00001DD0 | 8946FC                    | 	mov	word [bp-4], ax
  4153 | 00001DD3 | 837EFC05                  | 	cmp	word [bp-4], 5
  4154 | 00001DD7 | 755B                      | 	jne	L_lab8app_15
  4155 | 00001DD9 | E892FF                    | 	call	getIndex
  4156 | 00001DDC | 8946FE                    | 	mov	word [bp-2], ax
  4157 | 00001DDF | 8B76FA                    | 	mov	si, word [bp-6]
  4158 | 00001DE2 | 8B46FE                    | 	mov	ax, word [bp-2]
  4159 | 00001DE5 | B90600                    | 	mov	cx, 6
  4160 | 00001DE8 | F7E9                      | 	imul	cx
  4161 | 00001DEA | 89C7                      | 	mov	di, ax
  4162 | 00001DEC | 81C7[6C32]                | 	add	di, movePieceList
  4163 | 00001DF0 | 8B04                      | 	mov	ax, word [si]
  4164 | 00001DF2 | 8905                      | 	mov	word [di], ax
  4165 | 00001DF4 | 8B46FE                    | 	mov	ax, word [bp-2]
  4166 | 00001DF7 | B90600                    | 	mov	cx, 6
  4167 | 00001DFA | F7E9                      | 	imul	cx
  4168 | 00001DFC | 05[6C32]                  | 	add	ax, movePieceList
  4169 | 00001DFF | 89C6                      | 	mov	si, ax
  4170 | 00001E01 | 83C602                    | 	add	si, 2
  4171 | 00001E04 | C7040000                  | 	mov	word [si], 0
  4172 | 00001E08 | 8B46FE                    | 	mov	ax, word [bp-2]
  4173 | 00001E0B | B90600                    | 	mov	cx, 6
  4174 | 00001E0E | F7E9                      | 	imul	cx
  4175 | 00001E10 | 05[6C32]                  | 	add	ax, movePieceList
  4176 | 00001E13 | 89C6                      | 	mov	si, ax
  4177 | 00001E15 | 83C604                    | 	add	si, 4
  4178 | 00001E18 | C704[8608]                | 	mov	word [si], SlidePiece
  4179 | 00001E1C | 8B46FE                    | 	mov	ax, word [bp-2]
  4180 | 00001E1F | B90600                    | 	mov	cx, 6
  4181 | 00001E22 | F7E9                      | 	imul	cx
  4182 | 00001E24 | 05[6C32]                  | 	add	ax, movePieceList
  4183 | 00001E27 | 50                        | 	push	ax
  4184 | 00001E28 | FF36[6426]                | 	push	word [movePieceQueue]
  4185 | 00001E2C | E8E7F6                    | 	call	YKQPost
  4186 | 00001E2F | 83C404                    | 	add	sp, 4
  4187 | 00001E32 | EB64                      | 	jmp	L_lab8app_16
  4188 |          |                           | L_lab8app_15:
  4189 | 00001E34 | EB5C                      | 	jmp	L_lab8app_18
  4190 |          |                           | L_lab8app_17:
  4191 | 00001E36 | E835FF                    | 	call	getIndex
  4192 | 00001E39 | 8946FE                    | 	mov	word [bp-2], ax
  4193 | 00001E3C | 8B76FA                    | 	mov	si, word [bp-6]
  4194 | 00001E3F | 8B46FE                    | 	mov	ax, word [bp-2]
  4195 | 00001E42 | B90600                    | 	mov	cx, 6
  4196 | 00001E45 | F7E9                      | 	imul	cx
  4197 | 00001E47 | 89C7                      | 	mov	di, ax
  4198 | 00001E49 | 81C7[6C32]                | 	add	di, movePieceList
  4199 | 00001E4D | 8B04                      | 	mov	ax, word [si]
  4200 | 00001E4F | 8905                      | 	mov	word [di], ax
  4201 | 00001E51 | 8B46FE                    | 	mov	ax, word [bp-2]
  4202 | 00001E54 | B90600                    | 	mov	cx, 6
  4203 | 00001E57 | F7E9                      | 	imul	cx
  4204 | 00001E59 | 05[6C32]                  | 	add	ax, movePieceList
  4205 | 00001E5C | 89C6                      | 	mov	si, ax
  4206 | 00001E5E | 83C602                    | 	add	si, 2
  4207 | 00001E61 | C7040100                  | 	mov	word [si], 1
  4208 | 00001E65 | 8B46FE                    | 	mov	ax, word [bp-2]
  4209 | 00001E68 | B90600                    | 	mov	cx, 6
  4210 | 00001E6B | F7E9                      | 	imul	cx
  4211 | 00001E6D | 05[6C32]                  | 	add	ax, movePieceList
  4212 | 00001E70 | 89C6                      | 	mov	si, ax
  4213 | 00001E72 | 83C604                    | 	add	si, 4
  4214 | 00001E75 | C704[8608]                | 	mov	word [si], SlidePiece
  4215 | 00001E79 | FF46FC                    | 	inc	word [bp-4]
  4216 | 00001E7C | 8B46FE                    | 	mov	ax, word [bp-2]
  4217 | 00001E7F | B90600                    | 	mov	cx, 6
  4218 | 00001E82 | F7E9                      | 	imul	cx
  4219 | 00001E84 | 05[6C32]                  | 	add	ax, movePieceList
  4220 | 00001E87 | 50                        | 	push	ax
  4221 | 00001E88 | FF36[6426]                | 	push	word [movePieceQueue]
  4222 | 00001E8C | E887F6                    | 	call	YKQPost
  4223 | 00001E8F | 83C404                    | 	add	sp, 4
  4224 |          |                           | L_lab8app_18:
  4225 | 00001E92 | 837EFC04                  | 	cmp	word [bp-4], 4
  4226 | 00001E96 | 7C9E                      | 	jl	L_lab8app_17
  4227 |          |                           | L_lab8app_19:
  4228 |          |                           | L_lab8app_16:
  4229 | 00001E98 | 8B76FA                    | 	mov	si, word [bp-6]
  4230 | 00001E9B | 83C604                    | 	add	si, 4
  4231 | 00001E9E | 8B04                      | 	mov	ax, word [si]
  4232 | 00001EA0 | 85C0                      | 	test	ax, ax
  4233 | 00001EA2 | 7459                      | 	je	L_lab8app_20
  4234 | 00001EA4 | E8C7FE                    | 	call	getIndex
  4235 | 00001EA7 | 8946FE                    | 	mov	word [bp-2], ax
  4236 | 00001EAA | 8B76FA                    | 	mov	si, word [bp-6]
  4237 | 00001EAD | 8B46FE                    | 	mov	ax, word [bp-2]
  4238 | 00001EB0 | B90600                    | 	mov	cx, 6
  4239 | 00001EB3 | F7E9                      | 	imul	cx
  4240 | 00001EB5 | 89C7                      | 	mov	di, ax
  4241 | 00001EB7 | 81C7[6C32]                | 	add	di, movePieceList
  4242 | 00001EBB | 8B04                      | 	mov	ax, word [si]
  4243 | 00001EBD | 8905                      | 	mov	word [di], ax
  4244 | 00001EBF | 8B46FE                    | 	mov	ax, word [bp-2]
  4245 | 00001EC2 | B90600                    | 	mov	cx, 6
  4246 | 00001EC5 | F7E9                      | 	imul	cx
  4247 | 00001EC7 | 05[6C32]                  | 	add	ax, movePieceList
  4248 | 00001ECA | 89C6                      | 	mov	si, ax
  4249 | 00001ECC | 83C602                    | 	add	si, 2
  4250 | 00001ECF | C7040100                  | 	mov	word [si], 1
  4251 | 00001ED3 | 8B46FE                    | 	mov	ax, word [bp-2]
  4252 | 00001ED6 | B90600                    | 	mov	cx, 6
  4253 | 00001ED9 | F7E9                      | 	imul	cx
  4254 | 00001EDB | 05[6C32]                  | 	add	ax, movePieceList
  4255 | 00001EDE | 89C6                      | 	mov	si, ax
  4256 | 00001EE0 | 83C604                    | 	add	si, 4
  4257 | 00001EE3 | C704[9908]                | 	mov	word [si], RotatePiece
  4258 | 00001EE7 | 8B46FE                    | 	mov	ax, word [bp-2]
  4259 | 00001EEA | B90600                    | 	mov	cx, 6
  4260 | 00001EED | F7E9                      | 	imul	cx
  4261 | 00001EEF | 05[6C32]                  | 	add	ax, movePieceList
  4262 | 00001EF2 | 50                        | 	push	ax
  4263 | 00001EF3 | FF36[6426]                | 	push	word [movePieceQueue]
  4264 | 00001EF7 | E81CF6                    | 	call	YKQPost
  4265 | 00001EFA | 83C404                    | 	add	sp, 4
  4266 |          |                           | L_lab8app_20:
  4267 | 00001EFD | E95405                    | 	jmp	L_lab8app_21
  4268 |          |                           | L_lab8app_14:
  4269 | 00001F00 | 8B76FA                    | 	mov	si, word [bp-6]
  4270 | 00001F03 | 83C606                    | 	add	si, 6
  4271 | 00001F06 | 8B04                      | 	mov	ax, word [si]
  4272 | 00001F08 | 8946FC                    | 	mov	word [bp-4], ax
  4273 | 00001F0B | 837EFC05                  | 	cmp	word [bp-4], 5
  4274 | 00001F0F | 755E                      | 	jne	L_lab8app_22
  4275 | 00001F11 | E85AFE                    | 	call	getIndex
  4276 | 00001F14 | 8946FE                    | 	mov	word [bp-2], ax
  4277 | 00001F17 | 8B76FA                    | 	mov	si, word [bp-6]
  4278 | 00001F1A | 8B46FE                    | 	mov	ax, word [bp-2]
  4279 | 00001F1D | B90600                    | 	mov	cx, 6
  4280 | 00001F20 | F7E9                      | 	imul	cx
  4281 | 00001F22 | 89C7                      | 	mov	di, ax
  4282 | 00001F24 | 81C7[6C32]                | 	add	di, movePieceList
  4283 | 00001F28 | 8B04                      | 	mov	ax, word [si]
  4284 | 00001F2A | 8905                      | 	mov	word [di], ax
  4285 | 00001F2C | 8B46FE                    | 	mov	ax, word [bp-2]
  4286 | 00001F2F | B90600                    | 	mov	cx, 6
  4287 | 00001F32 | F7E9                      | 	imul	cx
  4288 | 00001F34 | 05[6C32]                  | 	add	ax, movePieceList
  4289 | 00001F37 | 89C6                      | 	mov	si, ax
  4290 | 00001F39 | 83C602                    | 	add	si, 2
  4291 | 00001F3C | C7040000                  | 	mov	word [si], 0
  4292 | 00001F40 | 8B46FE                    | 	mov	ax, word [bp-2]
  4293 | 00001F43 | B90600                    | 	mov	cx, 6
  4294 | 00001F46 | F7E9                      | 	imul	cx
  4295 | 00001F48 | 05[6C32]                  | 	add	ax, movePieceList
  4296 | 00001F4B | 89C6                      | 	mov	si, ax
  4297 | 00001F4D | 83C604                    | 	add	si, 4
  4298 | 00001F50 | C704[8608]                | 	mov	word [si], SlidePiece
  4299 | 00001F54 | FF4EFC                    | 	dec	word [bp-4]
  4300 | 00001F57 | 8B46FE                    | 	mov	ax, word [bp-2]
  4301 | 00001F5A | B90600                    | 	mov	cx, 6
  4302 | 00001F5D | F7E9                      | 	imul	cx
  4303 | 00001F5F | 05[6C32]                  | 	add	ax, movePieceList
  4304 | 00001F62 | 50                        | 	push	ax
  4305 | 00001F63 | FF36[6426]                | 	push	word [movePieceQueue]
  4306 | 00001F67 | E8ACF5                    | 	call	YKQPost
  4307 | 00001F6A | 83C404                    | 	add	sp, 4
  4308 | 00001F6D | EB63                      | 	jmp	L_lab8app_23
  4309 |          |                           | L_lab8app_22:
  4310 | 00001F6F | 8B46FC                    | 	mov	ax, word [bp-4]
  4311 | 00001F72 | 85C0                      | 	test	ax, ax
  4312 | 00001F74 | 755C                      | 	jne	L_lab8app_24
  4313 | 00001F76 | E8F5FD                    | 	call	getIndex
  4314 | 00001F79 | 8946FE                    | 	mov	word [bp-2], ax
  4315 | 00001F7C | 8B76FA                    | 	mov	si, word [bp-6]
  4316 | 00001F7F | 8B46FE                    | 	mov	ax, word [bp-2]
  4317 | 00001F82 | B90600                    | 	mov	cx, 6
  4318 | 00001F85 | F7E9                      | 	imul	cx
  4319 | 00001F87 | 89C7                      | 	mov	di, ax
  4320 | 00001F89 | 81C7[6C32]                | 	add	di, movePieceList
  4321 | 00001F8D | 8B04                      | 	mov	ax, word [si]
  4322 | 00001F8F | 8905                      | 	mov	word [di], ax
  4323 | 00001F91 | 8B46FE                    | 	mov	ax, word [bp-2]
  4324 | 00001F94 | B90600                    | 	mov	cx, 6
  4325 | 00001F97 | F7E9                      | 	imul	cx
  4326 | 00001F99 | 05[6C32]                  | 	add	ax, movePieceList
  4327 | 00001F9C | 89C6                      | 	mov	si, ax
  4328 | 00001F9E | 83C602                    | 	add	si, 2
  4329 | 00001FA1 | C7040100                  | 	mov	word [si], 1
  4330 | 00001FA5 | 8B46FE                    | 	mov	ax, word [bp-2]
  4331 | 00001FA8 | B90600                    | 	mov	cx, 6
  4332 | 00001FAB | F7E9                      | 	imul	cx
  4333 | 00001FAD | 05[6C32]                  | 	add	ax, movePieceList
  4334 | 00001FB0 | 89C6                      | 	mov	si, ax
  4335 | 00001FB2 | 83C604                    | 	add	si, 4
  4336 | 00001FB5 | C704[8608]                | 	mov	word [si], SlidePiece
  4337 | 00001FB9 | FF46FC                    | 	inc	word [bp-4]
  4338 | 00001FBC | 8B46FE                    | 	mov	ax, word [bp-2]
  4339 | 00001FBF | B90600                    | 	mov	cx, 6
  4340 | 00001FC2 | F7E9                      | 	imul	cx
  4341 | 00001FC4 | 05[6C32]                  | 	add	ax, movePieceList
  4342 | 00001FC7 | 50                        | 	push	ax
  4343 | 00001FC8 | FF36[6426]                | 	push	word [movePieceQueue]
  4344 | 00001FCC | E847F5                    | 	call	YKQPost
  4345 | 00001FCF | 83C404                    | 	add	sp, 4
  4346 |          |                           | L_lab8app_24:
  4347 |          |                           | L_lab8app_23:
  4348 | 00001FD2 | A1[8E1D]                  | 	mov	ax, word [L_lab8app_6]
  4349 | 00001FD5 | 85C0                      | 	test	ax, ax
  4350 | 00001FD7 | 7403E9F601                | 	jne	L_lab8app_25
  4351 | 00001FDC | C706[8E1D]0100            | 	mov	word [L_lab8app_6], 1
  4352 | 00001FE2 | 8B76FA                    | 	mov	si, word [bp-6]
  4353 | 00001FE5 | 83C604                    | 	add	si, 4
  4354 | 00001FE8 | 833C01                    | 	cmp	word [si], 1
  4355 | 00001FEB | 7559                      | 	jne	L_lab8app_26
  4356 | 00001FED | E87EFD                    | 	call	getIndex
  4357 | 00001FF0 | 8946FE                    | 	mov	word [bp-2], ax
  4358 | 00001FF3 | 8B76FA                    | 	mov	si, word [bp-6]
  4359 | 00001FF6 | 8B46FE                    | 	mov	ax, word [bp-2]
  4360 | 00001FF9 | B90600                    | 	mov	cx, 6
  4361 | 00001FFC | F7E9                      | 	imul	cx
  4362 | 00001FFE | 89C7                      | 	mov	di, ax
  4363 | 00002000 | 81C7[6C32]                | 	add	di, movePieceList
  4364 | 00002004 | 8B04                      | 	mov	ax, word [si]
  4365 | 00002006 | 8905                      | 	mov	word [di], ax
  4366 | 00002008 | 8B46FE                    | 	mov	ax, word [bp-2]
  4367 | 0000200B | B90600                    | 	mov	cx, 6
  4368 | 0000200E | F7E9                      | 	imul	cx
  4369 | 00002010 | 05[6C32]                  | 	add	ax, movePieceList
  4370 | 00002013 | 89C6                      | 	mov	si, ax
  4371 | 00002015 | 83C602                    | 	add	si, 2
  4372 | 00002018 | C7040100                  | 	mov	word [si], 1
  4373 | 0000201C | 8B46FE                    | 	mov	ax, word [bp-2]
  4374 | 0000201F | B90600                    | 	mov	cx, 6
  4375 | 00002022 | F7E9                      | 	imul	cx
  4376 | 00002024 | 05[6C32]                  | 	add	ax, movePieceList
  4377 | 00002027 | 89C6                      | 	mov	si, ax
  4378 | 00002029 | 83C604                    | 	add	si, 4
  4379 | 0000202C | C704[9908]                | 	mov	word [si], RotatePiece
  4380 | 00002030 | 8B46FE                    | 	mov	ax, word [bp-2]
  4381 | 00002033 | B90600                    | 	mov	cx, 6
  4382 | 00002036 | F7E9                      | 	imul	cx
  4383 | 00002038 | 05[6C32]                  | 	add	ax, movePieceList
  4384 | 0000203B | 50                        | 	push	ax
  4385 | 0000203C | FF36[6426]                | 	push	word [movePieceQueue]
  4386 | 00002040 | E8D3F4                    | 	call	YKQPost
  4387 | 00002043 | 83C404                    | 	add	sp, 4
  4388 |          |                           | L_lab8app_26:
  4389 | 00002046 | 8B76FA                    | 	mov	si, word [bp-6]
  4390 | 00002049 | 83C604                    | 	add	si, 4
  4391 | 0000204C | 833C03                    | 	cmp	word [si], 3
  4392 | 0000204F | 7559                      | 	jne	L_lab8app_27
  4393 | 00002051 | E81AFD                    | 	call	getIndex
  4394 | 00002054 | 8946FE                    | 	mov	word [bp-2], ax
  4395 | 00002057 | 8B76FA                    | 	mov	si, word [bp-6]
  4396 | 0000205A | 8B46FE                    | 	mov	ax, word [bp-2]
  4397 | 0000205D | B90600                    | 	mov	cx, 6
  4398 | 00002060 | F7E9                      | 	imul	cx
  4399 | 00002062 | 89C7                      | 	mov	di, ax
  4400 | 00002064 | 81C7[6C32]                | 	add	di, movePieceList
  4401 | 00002068 | 8B04                      | 	mov	ax, word [si]
  4402 | 0000206A | 8905                      | 	mov	word [di], ax
  4403 | 0000206C | 8B46FE                    | 	mov	ax, word [bp-2]
  4404 | 0000206F | B90600                    | 	mov	cx, 6
  4405 | 00002072 | F7E9                      | 	imul	cx
  4406 | 00002074 | 05[6C32]                  | 	add	ax, movePieceList
  4407 | 00002077 | 89C6                      | 	mov	si, ax
  4408 | 00002079 | 83C602                    | 	add	si, 2
  4409 | 0000207C | C7040000                  | 	mov	word [si], 0
  4410 | 00002080 | 8B46FE                    | 	mov	ax, word [bp-2]
  4411 | 00002083 | B90600                    | 	mov	cx, 6
  4412 | 00002086 | F7E9                      | 	imul	cx
  4413 | 00002088 | 05[6C32]                  | 	add	ax, movePieceList
  4414 | 0000208B | 89C6                      | 	mov	si, ax
  4415 | 0000208D | 83C604                    | 	add	si, 4
  4416 | 00002090 | C704[9908]                | 	mov	word [si], RotatePiece
  4417 | 00002094 | 8B46FE                    | 	mov	ax, word [bp-2]
  4418 | 00002097 | B90600                    | 	mov	cx, 6
  4419 | 0000209A | F7E9                      | 	imul	cx
  4420 | 0000209C | 05[6C32]                  | 	add	ax, movePieceList
  4421 | 0000209F | 50                        | 	push	ax
  4422 | 000020A0 | FF36[6426]                | 	push	word [movePieceQueue]
  4423 | 000020A4 | E86FF4                    | 	call	YKQPost
  4424 | 000020A7 | 83C404                    | 	add	sp, 4
  4425 |          |                           | L_lab8app_27:
  4426 | 000020AA | 8B76FA                    | 	mov	si, word [bp-6]
  4427 | 000020AD | 83C604                    | 	add	si, 4
  4428 | 000020B0 | 833C02                    | 	cmp	word [si], 2
  4429 | 000020B3 | 7403E9B200                | 	jne	L_lab8app_28
  4430 | 000020B8 | E8B3FC                    | 	call	getIndex
  4431 | 000020BB | 8946FE                    | 	mov	word [bp-2], ax
  4432 | 000020BE | 8B76FA                    | 	mov	si, word [bp-6]
  4433 | 000020C1 | 8B46FE                    | 	mov	ax, word [bp-2]
  4434 | 000020C4 | B90600                    | 	mov	cx, 6
  4435 | 000020C7 | F7E9                      | 	imul	cx
  4436 | 000020C9 | 89C7                      | 	mov	di, ax
  4437 | 000020CB | 81C7[6C32]                | 	add	di, movePieceList
  4438 | 000020CF | 8B04                      | 	mov	ax, word [si]
  4439 | 000020D1 | 8905                      | 	mov	word [di], ax
  4440 | 000020D3 | 8B46FE                    | 	mov	ax, word [bp-2]
  4441 | 000020D6 | B90600                    | 	mov	cx, 6
  4442 | 000020D9 | F7E9                      | 	imul	cx
  4443 | 000020DB | 05[6C32]                  | 	add	ax, movePieceList
  4444 | 000020DE | 89C6                      | 	mov	si, ax
  4445 | 000020E0 | 83C602                    | 	add	si, 2
  4446 | 000020E3 | C7040000                  | 	mov	word [si], 0
  4447 | 000020E7 | 8B46FE                    | 	mov	ax, word [bp-2]
  4448 | 000020EA | B90600                    | 	mov	cx, 6
  4449 | 000020ED | F7E9                      | 	imul	cx
  4450 | 000020EF | 05[6C32]                  | 	add	ax, movePieceList
  4451 | 000020F2 | 89C6                      | 	mov	si, ax
  4452 | 000020F4 | 83C604                    | 	add	si, 4
  4453 | 000020F7 | C704[9908]                | 	mov	word [si], RotatePiece
  4454 | 000020FB | 8B46FE                    | 	mov	ax, word [bp-2]
  4455 | 000020FE | B90600                    | 	mov	cx, 6
  4456 | 00002101 | F7E9                      | 	imul	cx
  4457 | 00002103 | 05[6C32]                  | 	add	ax, movePieceList
  4458 | 00002106 | 50                        | 	push	ax
  4459 | 00002107 | FF36[6426]                | 	push	word [movePieceQueue]
  4460 | 0000210B | E808F4                    | 	call	YKQPost
  4461 | 0000210E | 83C404                    | 	add	sp, 4
  4462 | 00002111 | E85AFC                    | 	call	getIndex
  4463 | 00002114 | 8946FE                    | 	mov	word [bp-2], ax
  4464 | 00002117 | 8B76FA                    | 	mov	si, word [bp-6]
  4465 | 0000211A | 8B46FE                    | 	mov	ax, word [bp-2]
  4466 | 0000211D | B90600                    | 	mov	cx, 6
  4467 | 00002120 | F7E9                      | 	imul	cx
  4468 | 00002122 | 89C7                      | 	mov	di, ax
  4469 | 00002124 | 81C7[6C32]                | 	add	di, movePieceList
  4470 | 00002128 | 8B04                      | 	mov	ax, word [si]
  4471 | 0000212A | 8905                      | 	mov	word [di], ax
  4472 | 0000212C | 8B46FE                    | 	mov	ax, word [bp-2]
  4473 | 0000212F | B90600                    | 	mov	cx, 6
  4474 | 00002132 | F7E9                      | 	imul	cx
  4475 | 00002134 | 05[6C32]                  | 	add	ax, movePieceList
  4476 | 00002137 | 89C6                      | 	mov	si, ax
  4477 | 00002139 | 83C602                    | 	add	si, 2
  4478 | 0000213C | C7040000                  | 	mov	word [si], 0
  4479 | 00002140 | 8B46FE                    | 	mov	ax, word [bp-2]
  4480 | 00002143 | B90600                    | 	mov	cx, 6
  4481 | 00002146 | F7E9                      | 	imul	cx
  4482 | 00002148 | 05[6C32]                  | 	add	ax, movePieceList
  4483 | 0000214B | 89C6                      | 	mov	si, ax
  4484 | 0000214D | 83C604                    | 	add	si, 4
  4485 | 00002150 | C704[9908]                | 	mov	word [si], RotatePiece
  4486 | 00002154 | 8B46FE                    | 	mov	ax, word [bp-2]
  4487 | 00002157 | B90600                    | 	mov	cx, 6
  4488 | 0000215A | F7E9                      | 	imul	cx
  4489 | 0000215C | 05[6C32]                  | 	add	ax, movePieceList
  4490 | 0000215F | 50                        | 	push	ax
  4491 | 00002160 | FF36[6426]                | 	push	word [movePieceQueue]
  4492 | 00002164 | E8AFF3                    | 	call	YKQPost
  4493 | 00002167 | 83C404                    | 	add	sp, 4
  4494 |          |                           | L_lab8app_28:
  4495 | 0000216A | EB5C                      | 	jmp	L_lab8app_30
  4496 |          |                           | L_lab8app_29:
  4497 | 0000216C | E8FFFB                    | 	call	getIndex
  4498 | 0000216F | 8946FE                    | 	mov	word [bp-2], ax
  4499 | 00002172 | 8B76FA                    | 	mov	si, word [bp-6]
  4500 | 00002175 | 8B46FE                    | 	mov	ax, word [bp-2]
  4501 | 00002178 | B90600                    | 	mov	cx, 6
  4502 | 0000217B | F7E9                      | 	imul	cx
  4503 | 0000217D | 89C7                      | 	mov	di, ax
  4504 | 0000217F | 81C7[6C32]                | 	add	di, movePieceList
  4505 | 00002183 | 8B04                      | 	mov	ax, word [si]
  4506 | 00002185 | 8905                      | 	mov	word [di], ax
  4507 | 00002187 | 8B46FE                    | 	mov	ax, word [bp-2]
  4508 | 0000218A | B90600                    | 	mov	cx, 6
  4509 | 0000218D | F7E9                      | 	imul	cx
  4510 | 0000218F | 05[6C32]                  | 	add	ax, movePieceList
  4511 | 00002192 | 89C6                      | 	mov	si, ax
  4512 | 00002194 | 83C602                    | 	add	si, 2
  4513 | 00002197 | C7040000                  | 	mov	word [si], 0
  4514 | 0000219B | 8B46FE                    | 	mov	ax, word [bp-2]
  4515 | 0000219E | B90600                    | 	mov	cx, 6
  4516 | 000021A1 | F7E9                      | 	imul	cx
  4517 | 000021A3 | 05[6C32]                  | 	add	ax, movePieceList
  4518 | 000021A6 | 89C6                      | 	mov	si, ax
  4519 | 000021A8 | 83C604                    | 	add	si, 4
  4520 | 000021AB | C704[8608]                | 	mov	word [si], SlidePiece
  4521 | 000021AF | FF4EFC                    | 	dec	word [bp-4]
  4522 | 000021B2 | 8B46FE                    | 	mov	ax, word [bp-2]
  4523 | 000021B5 | B90600                    | 	mov	cx, 6
  4524 | 000021B8 | F7E9                      | 	imul	cx
  4525 | 000021BA | 05[6C32]                  | 	add	ax, movePieceList
  4526 | 000021BD | 50                        | 	push	ax
  4527 | 000021BE | FF36[6426]                | 	push	word [movePieceQueue]
  4528 | 000021C2 | E851F3                    | 	call	YKQPost
  4529 | 000021C5 | 83C404                    | 	add	sp, 4
  4530 |          |                           | L_lab8app_30:
  4531 | 000021C8 | 8B46FC                    | 	mov	ax, word [bp-4]
  4532 | 000021CB | 85C0                      | 	test	ax, ax
  4533 | 000021CD | 759D                      | 	jne	L_lab8app_29
  4534 |          |                           | L_lab8app_31:
  4535 | 000021CF | E96502                    | 	jmp	L_lab8app_32
  4536 |          |                           | L_lab8app_25:
  4537 | 000021D2 | C706[8E1D]0000            | 	mov	word [L_lab8app_6], 0
  4538 | 000021D8 | 8B76FA                    | 	mov	si, word [bp-6]
  4539 | 000021DB | 83C604                    | 	add	si, 4
  4540 | 000021DE | 833C01                    | 	cmp	word [si], 1
  4541 | 000021E1 | 7559                      | 	jne	L_lab8app_33
  4542 | 000021E3 | E888FB                    | 	call	getIndex
  4543 | 000021E6 | 8946FE                    | 	mov	word [bp-2], ax
  4544 | 000021E9 | 8B76FA                    | 	mov	si, word [bp-6]
  4545 | 000021EC | 8B46FE                    | 	mov	ax, word [bp-2]
  4546 | 000021EF | B90600                    | 	mov	cx, 6
  4547 | 000021F2 | F7E9                      | 	imul	cx
  4548 | 000021F4 | 89C7                      | 	mov	di, ax
  4549 | 000021F6 | 81C7[6C32]                | 	add	di, movePieceList
  4550 | 000021FA | 8B04                      | 	mov	ax, word [si]
  4551 | 000021FC | 8905                      | 	mov	word [di], ax
  4552 | 000021FE | 8B46FE                    | 	mov	ax, word [bp-2]
  4553 | 00002201 | B90600                    | 	mov	cx, 6
  4554 | 00002204 | F7E9                      | 	imul	cx
  4555 | 00002206 | 05[6C32]                  | 	add	ax, movePieceList
  4556 | 00002209 | 89C6                      | 	mov	si, ax
  4557 | 0000220B | 83C602                    | 	add	si, 2
  4558 | 0000220E | C7040000                  | 	mov	word [si], 0
  4559 | 00002212 | 8B46FE                    | 	mov	ax, word [bp-2]
  4560 | 00002215 | B90600                    | 	mov	cx, 6
  4561 | 00002218 | F7E9                      | 	imul	cx
  4562 | 0000221A | 05[6C32]                  | 	add	ax, movePieceList
  4563 | 0000221D | 89C6                      | 	mov	si, ax
  4564 | 0000221F | 83C604                    | 	add	si, 4
  4565 | 00002222 | C704[9908]                | 	mov	word [si], RotatePiece
  4566 | 00002226 | 8B46FE                    | 	mov	ax, word [bp-2]
  4567 | 00002229 | B90600                    | 	mov	cx, 6
  4568 | 0000222C | F7E9                      | 	imul	cx
  4569 | 0000222E | 05[6C32]                  | 	add	ax, movePieceList
  4570 | 00002231 | 50                        | 	push	ax
  4571 | 00002232 | FF36[6426]                | 	push	word [movePieceQueue]
  4572 | 00002236 | E8DDF2                    | 	call	YKQPost
  4573 | 00002239 | 83C404                    | 	add	sp, 4
  4574 |          |                           | L_lab8app_33:
  4575 | 0000223C | 8B76FA                    | 	mov	si, word [bp-6]
  4576 | 0000223F | 83C604                    | 	add	si, 4
  4577 | 00002242 | 833C03                    | 	cmp	word [si], 3
  4578 | 00002245 | 7559                      | 	jne	L_lab8app_34
  4579 | 00002247 | E824FB                    | 	call	getIndex
  4580 | 0000224A | 8946FE                    | 	mov	word [bp-2], ax
  4581 | 0000224D | 8B76FA                    | 	mov	si, word [bp-6]
  4582 | 00002250 | 8B46FE                    | 	mov	ax, word [bp-2]
  4583 | 00002253 | B90600                    | 	mov	cx, 6
  4584 | 00002256 | F7E9                      | 	imul	cx
  4585 | 00002258 | 89C7                      | 	mov	di, ax
  4586 | 0000225A | 81C7[6C32]                | 	add	di, movePieceList
  4587 | 0000225E | 8B04                      | 	mov	ax, word [si]
  4588 | 00002260 | 8905                      | 	mov	word [di], ax
  4589 | 00002262 | 8B46FE                    | 	mov	ax, word [bp-2]
  4590 | 00002265 | B90600                    | 	mov	cx, 6
  4591 | 00002268 | F7E9                      | 	imul	cx
  4592 | 0000226A | 05[6C32]                  | 	add	ax, movePieceList
  4593 | 0000226D | 89C6                      | 	mov	si, ax
  4594 | 0000226F | 83C602                    | 	add	si, 2
  4595 | 00002272 | C7040100                  | 	mov	word [si], 1
  4596 | 00002276 | 8B46FE                    | 	mov	ax, word [bp-2]
  4597 | 00002279 | B90600                    | 	mov	cx, 6
  4598 | 0000227C | F7E9                      | 	imul	cx
  4599 | 0000227E | 05[6C32]                  | 	add	ax, movePieceList
  4600 | 00002281 | 89C6                      | 	mov	si, ax
  4601 | 00002283 | 83C604                    | 	add	si, 4
  4602 | 00002286 | C704[9908]                | 	mov	word [si], RotatePiece
  4603 | 0000228A | 8B46FE                    | 	mov	ax, word [bp-2]
  4604 | 0000228D | B90600                    | 	mov	cx, 6
  4605 | 00002290 | F7E9                      | 	imul	cx
  4606 | 00002292 | 05[6C32]                  | 	add	ax, movePieceList
  4607 | 00002295 | 50                        | 	push	ax
  4608 | 00002296 | FF36[6426]                | 	push	word [movePieceQueue]
  4609 | 0000229A | E879F2                    | 	call	YKQPost
  4610 | 0000229D | 83C404                    | 	add	sp, 4
  4611 |          |                           | L_lab8app_34:
  4612 | 000022A0 | 8B76FA                    | 	mov	si, word [bp-6]
  4613 | 000022A3 | 83C604                    | 	add	si, 4
  4614 | 000022A6 | 8B04                      | 	mov	ax, word [si]
  4615 | 000022A8 | 85C0                      | 	test	ax, ax
  4616 | 000022AA | 7403E9B200                | 	jne	L_lab8app_35
  4617 | 000022AF | E8BCFA                    | 	call	getIndex
  4618 | 000022B2 | 8946FE                    | 	mov	word [bp-2], ax
  4619 | 000022B5 | 8B76FA                    | 	mov	si, word [bp-6]
  4620 | 000022B8 | 8B46FE                    | 	mov	ax, word [bp-2]
  4621 | 000022BB | B90600                    | 	mov	cx, 6
  4622 | 000022BE | F7E9                      | 	imul	cx
  4623 | 000022C0 | 89C7                      | 	mov	di, ax
  4624 | 000022C2 | 81C7[6C32]                | 	add	di, movePieceList
  4625 | 000022C6 | 8B04                      | 	mov	ax, word [si]
  4626 | 000022C8 | 8905                      | 	mov	word [di], ax
  4627 | 000022CA | 8B46FE                    | 	mov	ax, word [bp-2]
  4628 | 000022CD | B90600                    | 	mov	cx, 6
  4629 | 000022D0 | F7E9                      | 	imul	cx
  4630 | 000022D2 | 05[6C32]                  | 	add	ax, movePieceList
  4631 | 000022D5 | 89C6                      | 	mov	si, ax
  4632 | 000022D7 | 83C602                    | 	add	si, 2
  4633 | 000022DA | C7040000                  | 	mov	word [si], 0
  4634 | 000022DE | 8B46FE                    | 	mov	ax, word [bp-2]
  4635 | 000022E1 | B90600                    | 	mov	cx, 6
  4636 | 000022E4 | F7E9                      | 	imul	cx
  4637 | 000022E6 | 05[6C32]                  | 	add	ax, movePieceList
  4638 | 000022E9 | 89C6                      | 	mov	si, ax
  4639 | 000022EB | 83C604                    | 	add	si, 4
  4640 | 000022EE | C704[9908]                | 	mov	word [si], RotatePiece
  4641 | 000022F2 | 8B46FE                    | 	mov	ax, word [bp-2]
  4642 | 000022F5 | B90600                    | 	mov	cx, 6
  4643 | 000022F8 | F7E9                      | 	imul	cx
  4644 | 000022FA | 05[6C32]                  | 	add	ax, movePieceList
  4645 | 000022FD | 50                        | 	push	ax
  4646 | 000022FE | FF36[6426]                | 	push	word [movePieceQueue]
  4647 | 00002302 | E811F2                    | 	call	YKQPost
  4648 | 00002305 | 83C404                    | 	add	sp, 4
  4649 | 00002308 | E863FA                    | 	call	getIndex
  4650 | 0000230B | 8946FE                    | 	mov	word [bp-2], ax
  4651 | 0000230E | 8B76FA                    | 	mov	si, word [bp-6]
  4652 | 00002311 | 8B46FE                    | 	mov	ax, word [bp-2]
  4653 | 00002314 | B90600                    | 	mov	cx, 6
  4654 | 00002317 | F7E9                      | 	imul	cx
  4655 | 00002319 | 89C7                      | 	mov	di, ax
  4656 | 0000231B | 81C7[6C32]                | 	add	di, movePieceList
  4657 | 0000231F | 8B04                      | 	mov	ax, word [si]
  4658 | 00002321 | 8905                      | 	mov	word [di], ax
  4659 | 00002323 | 8B46FE                    | 	mov	ax, word [bp-2]
  4660 | 00002326 | B90600                    | 	mov	cx, 6
  4661 | 00002329 | F7E9                      | 	imul	cx
  4662 | 0000232B | 05[6C32]                  | 	add	ax, movePieceList
  4663 | 0000232E | 89C6                      | 	mov	si, ax
  4664 | 00002330 | 83C602                    | 	add	si, 2
  4665 | 00002333 | C7040000                  | 	mov	word [si], 0
  4666 | 00002337 | 8B46FE                    | 	mov	ax, word [bp-2]
  4667 | 0000233A | B90600                    | 	mov	cx, 6
  4668 | 0000233D | F7E9                      | 	imul	cx
  4669 | 0000233F | 05[6C32]                  | 	add	ax, movePieceList
  4670 | 00002342 | 89C6                      | 	mov	si, ax
  4671 | 00002344 | 83C604                    | 	add	si, 4
  4672 | 00002347 | C704[9908]                | 	mov	word [si], RotatePiece
  4673 | 0000234B | 8B46FE                    | 	mov	ax, word [bp-2]
  4674 | 0000234E | B90600                    | 	mov	cx, 6
  4675 | 00002351 | F7E9                      | 	imul	cx
  4676 | 00002353 | 05[6C32]                  | 	add	ax, movePieceList
  4677 | 00002356 | 50                        | 	push	ax
  4678 | 00002357 | FF36[6426]                | 	push	word [movePieceQueue]
  4679 | 0000235B | E8B8F1                    | 	call	YKQPost
  4680 | 0000235E | 83C404                    | 	add	sp, 4
  4681 |          |                           | L_lab8app_35:
  4682 | 00002361 | 837EFC02                  | 	cmp	word [bp-4], 2
  4683 | 00002365 | 7E66                      | 	jle	L_lab8app_36
  4684 | 00002367 | EB5C                      | 	jmp	L_lab8app_38
  4685 |          |                           | L_lab8app_37:
  4686 | 00002369 | E802FA                    | 	call	getIndex
  4687 | 0000236C | 8946FE                    | 	mov	word [bp-2], ax
  4688 | 0000236F | 8B76FA                    | 	mov	si, word [bp-6]
  4689 | 00002372 | 8B46FE                    | 	mov	ax, word [bp-2]
  4690 | 00002375 | B90600                    | 	mov	cx, 6
  4691 | 00002378 | F7E9                      | 	imul	cx
  4692 | 0000237A | 89C7                      | 	mov	di, ax
  4693 | 0000237C | 81C7[6C32]                | 	add	di, movePieceList
  4694 | 00002380 | 8B04                      | 	mov	ax, word [si]
  4695 | 00002382 | 8905                      | 	mov	word [di], ax
  4696 | 00002384 | 8B46FE                    | 	mov	ax, word [bp-2]
  4697 | 00002387 | B90600                    | 	mov	cx, 6
  4698 | 0000238A | F7E9                      | 	imul	cx
  4699 | 0000238C | 05[6C32]                  | 	add	ax, movePieceList
  4700 | 0000238F | 89C6                      | 	mov	si, ax
  4701 | 00002391 | 83C602                    | 	add	si, 2
  4702 | 00002394 | C7040000                  | 	mov	word [si], 0
  4703 | 00002398 | 8B46FE                    | 	mov	ax, word [bp-2]
  4704 | 0000239B | B90600                    | 	mov	cx, 6
  4705 | 0000239E | F7E9                      | 	imul	cx
  4706 | 000023A0 | 05[6C32]                  | 	add	ax, movePieceList
  4707 | 000023A3 | 89C6                      | 	mov	si, ax
  4708 | 000023A5 | 83C604                    | 	add	si, 4
  4709 | 000023A8 | C704[8608]                | 	mov	word [si], SlidePiece
  4710 | 000023AC | FF4EFC                    | 	dec	word [bp-4]
  4711 | 000023AF | 8B46FE                    | 	mov	ax, word [bp-2]
  4712 | 000023B2 | B90600                    | 	mov	cx, 6
  4713 | 000023B5 | F7E9                      | 	imul	cx
  4714 | 000023B7 | 05[6C32]                  | 	add	ax, movePieceList
  4715 | 000023BA | 50                        | 	push	ax
  4716 | 000023BB | FF36[6426]                | 	push	word [movePieceQueue]
  4717 | 000023BF | E854F1                    | 	call	YKQPost
  4718 | 000023C2 | 83C404                    | 	add	sp, 4
  4719 |          |                           | L_lab8app_38:
  4720 | 000023C5 | 837EFC02                  | 	cmp	word [bp-4], 2
  4721 | 000023C9 | 759E                      | 	jne	L_lab8app_37
  4722 |          |                           | L_lab8app_39:
  4723 | 000023CB | EB6A                      | 	jmp	L_lab8app_40
  4724 |          |                           | L_lab8app_36:
  4725 | 000023CD | 837EFC02                  | 	cmp	word [bp-4], 2
  4726 | 000023D1 | 7D64                      | 	jge	L_lab8app_41
  4727 | 000023D3 | EB5C                      | 	jmp	L_lab8app_43
  4728 |          |                           | L_lab8app_42:
  4729 | 000023D5 | E896F9                    | 	call	getIndex
  4730 | 000023D8 | 8946FE                    | 	mov	word [bp-2], ax
  4731 | 000023DB | 8B76FA                    | 	mov	si, word [bp-6]
  4732 | 000023DE | 8B46FE                    | 	mov	ax, word [bp-2]
  4733 | 000023E1 | B90600                    | 	mov	cx, 6
  4734 | 000023E4 | F7E9                      | 	imul	cx
  4735 | 000023E6 | 89C7                      | 	mov	di, ax
  4736 | 000023E8 | 81C7[6C32]                | 	add	di, movePieceList
  4737 | 000023EC | 8B04                      | 	mov	ax, word [si]
  4738 | 000023EE | 8905                      | 	mov	word [di], ax
  4739 | 000023F0 | 8B46FE                    | 	mov	ax, word [bp-2]
  4740 | 000023F3 | B90600                    | 	mov	cx, 6
  4741 | 000023F6 | F7E9                      | 	imul	cx
  4742 | 000023F8 | 05[6C32]                  | 	add	ax, movePieceList
  4743 | 000023FB | 89C6                      | 	mov	si, ax
  4744 | 000023FD | 83C602                    | 	add	si, 2
  4745 | 00002400 | C7040100                  | 	mov	word [si], 1
  4746 | 00002404 | 8B46FE                    | 	mov	ax, word [bp-2]
  4747 | 00002407 | B90600                    | 	mov	cx, 6
  4748 | 0000240A | F7E9                      | 	imul	cx
  4749 | 0000240C | 05[6C32]                  | 	add	ax, movePieceList
  4750 | 0000240F | 89C6                      | 	mov	si, ax
  4751 | 00002411 | 83C604                    | 	add	si, 4
  4752 | 00002414 | C704[8608]                | 	mov	word [si], SlidePiece
  4753 | 00002418 | FF46FC                    | 	inc	word [bp-4]
  4754 | 0000241B | 8B46FE                    | 	mov	ax, word [bp-2]
  4755 | 0000241E | B90600                    | 	mov	cx, 6
  4756 | 00002421 | F7E9                      | 	imul	cx
  4757 | 00002423 | 05[6C32]                  | 	add	ax, movePieceList
  4758 | 00002426 | 50                        | 	push	ax
  4759 | 00002427 | FF36[6426]                | 	push	word [movePieceQueue]
  4760 | 0000242B | E8E8F0                    | 	call	YKQPost
  4761 | 0000242E | 83C404                    | 	add	sp, 4
  4762 |          |                           | L_lab8app_43:
  4763 | 00002431 | 837EFC02                  | 	cmp	word [bp-4], 2
  4764 | 00002435 | 759E                      | 	jne	L_lab8app_42
  4765 |          |                           | L_lab8app_44:
  4766 |          |                           | L_lab8app_41:
  4767 |          |                           | L_lab8app_40:
  4768 |          |                           | L_lab8app_32:
  4769 | 00002437 | B8[941D]                  | 	mov	ax, L_lab8app_7
  4770 | 0000243A | 50                        | 	push	ax
  4771 | 0000243B | E8EADF                    | 	call	printString
  4772 | 0000243E | 83C402                    | 	add	sp, 2
  4773 | 00002441 | FF76FC                    | 	push	word [bp-4]
  4774 | 00002444 | E805E0                    | 	call	printInt
  4775 | 00002447 | 83C402                    | 	add	sp, 2
  4776 | 0000244A | B8[901D]                  | 	mov	ax, L_lab8app_8
  4777 | 0000244D | 50                        | 	push	ax
  4778 | 0000244E | E8D7DF                    | 	call	printString
  4779 | 00002451 | 83C402                    | 	add	sp, 2
  4780 |          |                           | L_lab8app_21:
  4781 |          |                           | L_lab8app_12:
  4782 | 00002454 | E956F9                    | 	jmp	L_lab8app_11
  4783 |          |                           | L_lab8app_13:
  4784 | 00002457 | 89EC                      | 	mov	sp, bp
  4785 | 00002459 | 5D                        | 	pop	bp
  4786 | 0000245A | C3                        | 	ret
  4787 |          |                           | L_lab8app_9:
  4788 | 0000245B | 55                        | 	push	bp
  4789 | 0000245C | 89E5                      | 	mov	bp, sp
  4790 | 0000245E | 83EC06                    | 	sub	sp, 6
  4791 | 00002461 | E941F9                    | 	jmp	L_lab8app_10
  4792 |          |                           | 	ALIGN	2
  4793 |          |                           | movePieceTask:
  4794 | 00002464 | EB36                      | 	jmp	L_lab8app_46
  4795 |          |                           | L_lab8app_47:
  4796 | 00002466 | EB2E                      | 	jmp	L_lab8app_49
  4797 |          |                           | L_lab8app_48:
  4798 | 00002468 | FF36[6826]                | 	push	word [movePieceSem]
  4799 | 0000246C | E893EC                    | 	call	YKSemPend
  4800 | 0000246F | 83C402                    | 	add	sp, 2
  4801 | 00002472 | FF36[6426]                | 	push	word [movePieceQueue]
  4802 | 00002476 | E8B5EF                    | 	call	YKQPend
  4803 | 00002479 | 83C402                    | 	add	sp, 2
  4804 | 0000247C | 8946FE                    | 	mov	word [bp-2], ax
  4805 | 0000247F | 8B76FE                    | 	mov	si, word [bp-2]
  4806 | 00002482 | 83C602                    | 	add	si, 2
  4807 | 00002485 | FF34                      | 	push	word [si]
  4808 | 00002487 | 8B76FE                    | 	mov	si, word [bp-2]
  4809 | 0000248A | FF34                      | 	push	word [si]
  4810 | 0000248C | 83C604                    | 	add	si, 4
  4811 | 0000248F | 8B34                      | 	mov	si, word [si]
  4812 | 00002491 | FFD6                      | 	call	si
  4813 | 00002493 | 83C404                    | 	add	sp, 4
  4814 |          |                           | L_lab8app_49:
  4815 | 00002496 | EBD0                      | 	jmp	L_lab8app_48
  4816 |          |                           | L_lab8app_50:
  4817 | 00002498 | 89EC                      | 	mov	sp, bp
  4818 | 0000249A | 5D                        | 	pop	bp
  4819 | 0000249B | C3                        | 	ret
  4820 |          |                           | L_lab8app_46:
  4821 | 0000249C | 55                        | 	push	bp
  4822 | 0000249D | 89E5                      | 	mov	bp, sp
  4823 | 0000249F | 51                        | 	push	cx
  4824 | 000024A0 | EBC4                      | 	jmp	L_lab8app_47
  4825 |          |                           | L_lab8app_56:
  4826 | 000024A2 | 25203E3E3E3E3E0D0A-       | 	DB	"% >>>>>",0xD,0xA,0
  4827 | 000024AB | 00                        | ...
  4828 |          |                           | L_lab8app_55:
  4829 | 000024AC | 2C2043505520757361-       | 	DB	", CPU usage: ",0
  4830 | 000024B5 | 67653A2000                | ...
  4831 |          |                           | L_lab8app_54:
  4832 | 000024BA | 3C3C3C3C3C20436F6E-       | 	DB	"<<<<< Context switches: ",0
  4833 | 000024C3 | 746578742073776974-       | ...
  4834 | 000024CC | 636865733A2000            | ...
  4835 |          |                           | L_lab8app_53:
  4836 | 000024D3 | 44657465726D696E69-       | 	DB	"Determining CPU capacity",0xD,0xA,0
  4837 | 000024DC | 6E6720435055206361-       | ...
  4838 | 000024E5 | 7061636974790D0A00        | ...
  4839 |          |                           | L_lab8app_52:
  4840 | 000024EE | 57656C636F6D652074-       | 	DB	"Welcome to the YAK kernel",0xD,0xA,0
  4841 | 000024F7 | 6F207468652059414B-       | ...
  4842 | 00002500 | 206B65726E656C0D0A-       | ...
  4843 | 00002509 | 00                        | ...
  4844 |          |                           | 	ALIGN	2
  4845 |          |                           | STask:
  4846 | 0000250A | E9F200                    | 	jmp	L_lab8app_57
  4847 |          |                           | L_lab8app_58:
  4848 | 0000250D | B80100                    | 	mov	ax, 1
  4849 | 00002510 | 50                        | 	push	ax
  4850 | 00002511 | E89AE9                    | 	call	YKDelayTask
  4851 | 00002514 | 83C402                    | 	add	sp, 2
  4852 | 00002517 | B8[EE24]                  | 	mov	ax, L_lab8app_52
  4853 | 0000251A | 50                        | 	push	ax
  4854 | 0000251B | E80ADF                    | 	call	printString
  4855 | 0000251E | 83C402                    | 	add	sp, 2
  4856 | 00002521 | B8[D324]                  | 	mov	ax, L_lab8app_53
  4857 | 00002524 | 50                        | 	push	ax
  4858 | 00002525 | E800DF                    | 	call	printString
  4859 | 00002528 | 83C402                    | 	add	sp, 2
  4860 | 0000252B | B80100                    | 	mov	ax, 1
  4861 | 0000252E | 50                        | 	push	ax
  4862 | 0000252F | E87CE9                    | 	call	YKDelayTask
  4863 | 00002532 | 83C402                    | 	add	sp, 2
  4864 | 00002535 | C706[B219]0000            | 	mov	word [YKIdleCount], 0
  4865 | 0000253B | B80500                    | 	mov	ax, 5
  4866 | 0000253E | 50                        | 	push	ax
  4867 | 0000253F | E86CE9                    | 	call	YKDelayTask
  4868 | 00002542 | 83C402                    | 	add	sp, 2
  4869 | 00002545 | A1[B219]                  | 	mov	ax, word [YKIdleCount]
  4870 | 00002548 | 31D2                      | 	xor	dx, dx
  4871 | 0000254A | B91900                    | 	mov	cx, 25
  4872 | 0000254D | F7F1                      | 	div	cx
  4873 | 0000254F | 8946FE                    | 	mov	word [bp-2], ax
  4874 | 00002552 | C706[B219]0000            | 	mov	word [YKIdleCount], 0
  4875 | 00002558 | B84403                    | 	mov	ax, 836
  4876 | 0000255B | 31D2                      | 	xor	dx, dx
  4877 | 0000255D | 52                        | 	push	dx
  4878 | 0000255E | 50                        | 	push	ax
  4879 | 0000255F | E84AE3                    | 	call	SeedSimptris
  4880 | 00002562 | 83C404                    | 	add	sp, 4
  4881 | 00002565 | B003                      | 	mov	al, 3
  4882 | 00002567 | 50                        | 	push	ax
  4883 | 00002568 | B8[6A2A]                  | 	mov	ax, (newPieceTaskStk+1024)
  4884 | 0000256B | 50                        | 	push	ax
  4885 | 0000256C | B8[A21D]                  | 	mov	ax, newPieceTask
  4886 | 0000256F | 50                        | 	push	ax
  4887 | 00002570 | E83FE7                    | 	call	YKNewTask
  4888 | 00002573 | 83C406                    | 	add	sp, 6
  4889 | 00002576 | B005                      | 	mov	al, 5
  4890 | 00002578 | 50                        | 	push	ax
  4891 | 00002579 | B8[6A2E]                  | 	mov	ax, (movePieceTaskStk+1024)
  4892 | 0000257C | 50                        | 	push	ax
  4893 | 0000257D | B8[6424]                  | 	mov	ax, movePieceTask
  4894 | 00002580 | 50                        | 	push	ax
  4895 | 00002581 | E82EE7                    | 	call	YKNewTask
  4896 | 00002584 | 83C406                    | 	add	sp, 6
  4897 | 00002587 | E837E3                    | 	call	StartSimptris
  4898 | 0000258A | EB6D                      | 	jmp	L_lab8app_60
  4899 |          |                           | L_lab8app_59:
  4900 | 0000258C | B81400                    | 	mov	ax, 20
  4901 | 0000258F | 50                        | 	push	ax
  4902 | 00002590 | E81BE9                    | 	call	YKDelayTask
  4903 | 00002593 | 83C402                    | 	add	sp, 2
  4904 | 00002596 | E88BF7                    | 	call	YKEnterMutex
  4905 | 00002599 | A1[B019]                  | 	mov	ax, word [YKCtxSwCount]
  4906 | 0000259C | 8946FC                    | 	mov	word [bp-4], ax
  4907 | 0000259F | A1[B219]                  | 	mov	ax, word [YKIdleCount]
  4908 | 000025A2 | 8946FA                    | 	mov	word [bp-6], ax
  4909 | 000025A5 | E87EF7                    | 	call	YKExitMutex
  4910 | 000025A8 | B8[BA24]                  | 	mov	ax, L_lab8app_54
  4911 | 000025AB | 50                        | 	push	ax
  4912 | 000025AC | E879DE                    | 	call	printString
  4913 | 000025AF | 83C402                    | 	add	sp, 2
  4914 | 000025B2 | FF76FC                    | 	push	word [bp-4]
  4915 | 000025B5 | E894DE                    | 	call	printInt
  4916 | 000025B8 | 83C402                    | 	add	sp, 2
  4917 | 000025BB | B8[AC24]                  | 	mov	ax, L_lab8app_55
  4918 | 000025BE | 50                        | 	push	ax
  4919 | 000025BF | E866DE                    | 	call	printString
  4920 | 000025C2 | 83C402                    | 	add	sp, 2
  4921 | 000025C5 | 8B46FA                    | 	mov	ax, word [bp-6]
  4922 | 000025C8 | 31D2                      | 	xor	dx, dx
  4923 | 000025CA | F776FE                    | 	div	word [bp-2]
  4924 | 000025CD | 8946F8                    | 	mov	word [bp-8], ax
  4925 | 000025D0 | B86400                    | 	mov	ax, 100
  4926 | 000025D3 | 2B46F8                    | 	sub	ax, word [bp-8]
  4927 | 000025D6 | 50                        | 	push	ax
  4928 | 000025D7 | E872DE                    | 	call	printInt
  4929 | 000025DA | 83C402                    | 	add	sp, 2
  4930 | 000025DD | B8[A224]                  | 	mov	ax, L_lab8app_56
  4931 | 000025E0 | 50                        | 	push	ax
  4932 | 000025E1 | E844DE                    | 	call	printString
  4933 | 000025E4 | 83C402                    | 	add	sp, 2
  4934 | 000025E7 | E83AF7                    | 	call	YKEnterMutex
  4935 | 000025EA | C706[B019]0000            | 	mov	word [YKCtxSwCount], 0
  4936 | 000025F0 | C706[B219]0000            | 	mov	word [YKIdleCount], 0
  4937 | 000025F6 | E82DF7                    | 	call	YKExitMutex
  4938 |          |                           | L_lab8app_60:
  4939 | 000025F9 | EB91                      | 	jmp	L_lab8app_59
  4940 |          |                           | L_lab8app_61:
  4941 | 000025FB | 89EC                      | 	mov	sp, bp
  4942 | 000025FD | 5D                        | 	pop	bp
  4943 | 000025FE | C3                        | 	ret
  4944 |          |                           | L_lab8app_57:
  4945 | 000025FF | 55                        | 	push	bp
  4946 | 00002600 | 89E5                      | 	mov	bp, sp
  4947 | 00002602 | 83EC08                    | 	sub	sp, 8
  4948 | 00002605 | E905FF                    | 	jmp	L_lab8app_58
  4949 |          |                           | 	ALIGN	2
  4950 |          |                           | main:
  4951 | 00002608 | EB54                      | 	jmp	L_lab8app_63
  4952 |          |                           | L_lab8app_64:
  4953 | 0000260A | E819E5                    | 	call	YKInitialize
  4954 | 0000260D | B83200                    | 	mov	ax, 50
  4955 | 00002610 | 50                        | 	push	ax
  4956 | 00002611 | B8[2835]                  | 	mov	ax, newPieceQue
  4957 | 00002614 | 50                        | 	push	ax
  4958 | 00002615 | E872ED                    | 	call	YKQCreate
  4959 | 00002618 | 83C404                    | 	add	sp, 4
  4960 | 0000261B | A3[6626]                  | 	mov	word [newPieceQueue], ax
  4961 | 0000261E | B83200                    | 	mov	ax, 50
  4962 | 00002621 | 50                        | 	push	ax
  4963 | 00002622 | B8[8C35]                  | 	mov	ax, movePieceQue
  4964 | 00002625 | 50                        | 	push	ax
  4965 | 00002626 | E861ED                    | 	call	YKQCreate
  4966 | 00002629 | 83C404                    | 	add	sp, 4
  4967 | 0000262C | A3[6426]                  | 	mov	word [movePieceQueue], ax
  4968 | 0000262F | B80100                    | 	mov	ax, 1
  4969 | 00002632 | 50                        | 	push	ax
  4970 | 00002633 | E856EA                    | 	call	YKSemCreate
  4971 | 00002636 | 83C402                    | 	add	sp, 2
  4972 | 00002639 | A3[6826]                  | 	mov	word [movePieceSem], ax
  4973 | 0000263C | B8[A01D]                  | 	mov	ax, (L_lab8app_7+12)
  4974 | 0000263F | 50                        | 	push	ax
  4975 | 00002640 | E8E5DD                    | 	call	printString
  4976 | 00002643 | 83C402                    | 	add	sp, 2
  4977 | 00002646 | 30C0                      | 	xor	al, al
  4978 | 00002648 | 50                        | 	push	ax
  4979 | 00002649 | B8[6A32]                  | 	mov	ax, (STaskStk+1024)
  4980 | 0000264C | 50                        | 	push	ax
  4981 | 0000264D | B8[0A25]                  | 	mov	ax, STask
  4982 | 00002650 | 50                        | 	push	ax
  4983 | 00002651 | E85EE6                    | 	call	YKNewTask
  4984 | 00002654 | 83C406                    | 	add	sp, 6
  4985 | 00002657 | E8D2E7                    | 	call	YKRun
  4986 | 0000265A | 89EC                      | 	mov	sp, bp
  4987 | 0000265C | 5D                        | 	pop	bp
  4988 | 0000265D | C3                        | 	ret
  4989 |          |                           | L_lab8app_63:
  4990 | 0000265E | 55                        | 	push	bp
  4991 | 0000265F | 89E5                      | 	mov	bp, sp
  4992 | 00002661 | EBA7                      | 	jmp	L_lab8app_64
  4993 | 00002663 | 90                        | 	ALIGN	2
  4994 |          |                           | movePieceQueue:
  4995 | 00002664 | 00<rept>                  | 	TIMES	2 db 0
  4996 |          |                           | newPieceQueue:
  4997 | 00002666 | 00<rept>                  | 	TIMES	2 db 0
  4998 |          |                           | movePieceSem:
  4999 | 00002668 | 00<rept>                  | 	TIMES	2 db 0
  5000 |          |                           | newPieceTaskStk:
  5001 | 0000266A | 00<rept>                  | 	TIMES	1024 db 0
  5002 |          |                           | movePieceTaskStk:
  5003 | 00002A6A | 00<rept>                  | 	TIMES	1024 db 0
  5004 |          |                           | STaskStk:
  5005 | 00002E6A | 00<rept>                  | 	TIMES	1024 db 0
  5006 |          |                           | moveQueueIndex:
  5007 | 0000326A | 00<rept>                  | 	TIMES	2 db 0
  5008 |          |                           | movePieceList:
  5009 | 0000326C | 00<rept>                  | 	TIMES	300 db 0
  5010 |          |                           | newPieceList:
  5011 | 00003398 | 00<rept>                  | 	TIMES	400 db 0
  5012 |          |                           | newPieceQue:
  5013 | 00003528 | 00<rept>                  | 	TIMES	100 db 0
  5014 |          |                           | movePieceQue:
  5015 | 0000358C | 00<rept>                  | 	TIMES	100 db 0
